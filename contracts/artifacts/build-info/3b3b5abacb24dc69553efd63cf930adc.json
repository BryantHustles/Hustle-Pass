{
	"id": "3b3b5abacb24dc69553efd63cf930adc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HACHIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract HachiStorage is Ownable {\n    string private hachiGenericMetaDataURI;\n    string private hachiIPFSMetaDataURI;\n\n    bool private metaDataReveal;\n    bool public publicMint;\n\n    uint public mintPrice;\n    uint public mintLimit;\n\n    mapping(uint256 => uint256) private control;\n    mapping(address => uint256) private numberMinted;\n    \n    struct HachiTicket {\n        uint256[] tokenId;\n        uint256[] amounts;\n        address to;\n        bytes signature;\n        bytes32[] merkleProof;\n    }\n\n    constructor(string memory _hachiGenericMetaDataURI, string memory _hachiIPFSMetaDataURI, uint _mintPrice, uint _mintLimit){\n        hachiGenericMetaDataURI = _hachiGenericMetaDataURI;\n        hachiIPFSMetaDataURI = _hachiIPFSMetaDataURI;\n        mintPrice = _mintPrice;\n        mintLimit = _mintLimit;\n\n\n    }\n\n    function updateMintLimit(uint _limit) public onlyOwner {\n        mintLimit = _limit;\n    }\n\n    function updateMintPrice(uint _price) public onlyOwner {\n        mintPrice = _price;\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HACHIStorage.sol": {
				"HachiStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hachiGenericMetaDataURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_hachiIPFSMetaDataURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_mintPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mintLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "mintLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "updateMintLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "updateMintPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HACHIStorage.sol\":113:1129  contract HachiStorage is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HACHIStorage.sol\":625:934  constructor(string memory _hachiGenericMetaDataURI, string memory _hachiIPFSMetaDataURI, uint _mintPrice, uint _mintLimit){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/HACHIStorage.sol\":757:807  hachiGenericMetaDataURI = _hachiGenericMetaDataURI */\n  dup4\n  mload\n  tag_12\n  swap1\n    /* \"contracts/HACHIStorage.sol\":757:780  hachiGenericMetaDataURI */\n  0x01\n  swap1\n    /* \"contracts/HACHIStorage.sol\":757:807  hachiGenericMetaDataURI = _hachiGenericMetaDataURI */\n  0x20\n  dup8\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/HACHIStorage.sol\":817:861  hachiIPFSMetaDataURI = _hachiIPFSMetaDataURI */\n  dup3\n  mload\n  tag_14\n  swap1\n    /* \"contracts/HACHIStorage.sol\":817:837  hachiIPFSMetaDataURI */\n  0x02\n  swap1\n    /* \"contracts/HACHIStorage.sol\":817:861  hachiIPFSMetaDataURI = _hachiIPFSMetaDataURI */\n  0x20\n  dup7\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/HACHIStorage.sol\":871:880  mintPrice */\n  0x04\n    /* \"contracts/HACHIStorage.sol\":871:893  mintPrice = _mintPrice */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/HACHIStorage.sol\":903:912  mintLimit */\n  0x05\n    /* \"contracts/HACHIStorage.sol\":903:925  mintLimit = _mintLimit */\n  sstore\n  pop\n    /* \"contracts/HACHIStorage.sol\":113:1129  contract HachiStorage is Ownable {... */\n  tag_31\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/HACHIStorage.sol\":113:1129  contract HachiStorage is Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:141   */\ntag_29:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_30:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_34:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_36\n  tag_29\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_38\n  tag_29\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_39:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_40:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_40)\ntag_42:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_43:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1721   */\ntag_3:\n    /* \"#utility.yul\":1153:1159   */\n  0x00\n    /* \"#utility.yul\":1161:1167   */\n  dup1\n    /* \"#utility.yul\":1169:1175   */\n  0x00\n    /* \"#utility.yul\":1177:1183   */\n  dup1\n    /* \"#utility.yul\":1230:1233   */\n  0x80\n    /* \"#utility.yul\":1218:1227   */\n  dup6\n    /* \"#utility.yul\":1209:1216   */\n  dup8\n    /* \"#utility.yul\":1205:1228   */\n  sub\n    /* \"#utility.yul\":1201:1234   */\n  slt\n    /* \"#utility.yul\":1198:1251   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1247:1248   */\n  0x00\n    /* \"#utility.yul\":1244:1245   */\n  dup1\n    /* \"#utility.yul\":1237:1249   */\n  revert\n    /* \"#utility.yul\":1198:1251   */\ntag_45:\n    /* \"#utility.yul\":1274:1290   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1339:1353   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1336:1370   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1366:1367   */\n  0x00\n    /* \"#utility.yul\":1363:1364   */\n  dup1\n    /* \"#utility.yul\":1356:1368   */\n  revert\n    /* \"#utility.yul\":1336:1370   */\ntag_46:\n    /* \"#utility.yul\":1389:1450   */\n  tag_47\n    /* \"#utility.yul\":1442:1449   */\n  dup9\n    /* \"#utility.yul\":1433:1439   */\n  dup4\n    /* \"#utility.yul\":1422:1431   */\n  dup10\n    /* \"#utility.yul\":1418:1440   */\n  add\n    /* \"#utility.yul\":1389:1450   */\n  tag_30\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1379:1450   */\n  swap6\n  pop\n    /* \"#utility.yul\":1496:1498   */\n  0x20\n    /* \"#utility.yul\":1485:1494   */\n  dup8\n    /* \"#utility.yul\":1481:1499   */\n  add\n    /* \"#utility.yul\":1475:1500   */\n  mload\n    /* \"#utility.yul\":1459:1500   */\n  swap2\n  pop\n    /* \"#utility.yul\":1525:1527   */\n  dup1\n    /* \"#utility.yul\":1515:1523   */\n  dup3\n    /* \"#utility.yul\":1512:1528   */\n  gt\n    /* \"#utility.yul\":1509:1545   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1541:1542   */\n  0x00\n    /* \"#utility.yul\":1538:1539   */\n  dup1\n    /* \"#utility.yul\":1531:1543   */\n  revert\n    /* \"#utility.yul\":1509:1545   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1564:1627   */\n  tag_49\n    /* \"#utility.yul\":1619:1626   */\n  dup8\n    /* \"#utility.yul\":1608:1616   */\n  dup3\n    /* \"#utility.yul\":1597:1606   */\n  dup9\n    /* \"#utility.yul\":1593:1617   */\n  add\n    /* \"#utility.yul\":1564:1627   */\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1667:1669   */\n  0x40\n    /* \"#utility.yul\":1652:1670   */\n  dup8\n  add\n    /* \"#utility.yul\":1646:1671   */\n  mload\n    /* \"#utility.yul\":1711:1713   */\n  0x60\n    /* \"#utility.yul\":1696:1714   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":1690:1715   */\n  mload\n    /* \"#utility.yul\":1036:1721   */\n  swap6\n  swap9\n    /* \"#utility.yul\":1554:1627   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":1036:1721   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1726:2106   */\ntag_19:\n    /* \"#utility.yul\":1805:1806   */\n  0x01\n    /* \"#utility.yul\":1801:1813   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1848:1860   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1869:1930   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1923:1927   */\n  0x7f\n    /* \"#utility.yul\":1915:1921   */\n  dup3\n    /* \"#utility.yul\":1911:1928   */\n  and\n    /* \"#utility.yul\":1901:1928   */\n  swap2\n  pop\n    /* \"#utility.yul\":1869:1930   */\ntag_51:\n    /* \"#utility.yul\":1976:1978   */\n  0x20\n    /* \"#utility.yul\":1968:1974   */\n  dup3\n    /* \"#utility.yul\":1965:1979   */\n  lt\n    /* \"#utility.yul\":1945:1963   */\n  dup2\n    /* \"#utility.yul\":1942:1980   */\n  sub\n    /* \"#utility.yul\":1939:2100   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2022:2032   */\n  0x4e487b71\n    /* \"#utility.yul\":2017:2020   */\n  0xe0\n    /* \"#utility.yul\":2013:2033   */\n  shl\n    /* \"#utility.yul\":2010:2011   */\n  0x00\n    /* \"#utility.yul\":2003:2034   */\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x22\n    /* \"#utility.yul\":2054:2055   */\n  0x04\n    /* \"#utility.yul\":2047:2062   */\n  mstore\n    /* \"#utility.yul\":2085:2089   */\n  0x24\n    /* \"#utility.yul\":2082:2083   */\n  0x00\n    /* \"#utility.yul\":2075:2090   */\n  revert\n    /* \"#utility.yul\":1939:2100   */\ntag_52:\n  pop\n    /* \"#utility.yul\":1726:2106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"contracts/HACHIStorage.sol\":113:1129  contract HachiStorage is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HACHIStorage.sol\":113:1129  contract HachiStorage is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x996517cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe01d55c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x728e46\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26092b83\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6817c76c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HACHIStorage.sol\":1036:1126  function updateMintPrice(uint _price) public onlyOwner {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/HACHIStorage.sol\":271:293  bool public publicMint */\n    tag_4:\n      sload(0x03)\n      tag_16\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"contracts/HACHIStorage.sol\":271:293  bool public publicMint */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HACHIStorage.sol\":300:321  uint public mintPrice */\n    tag_5:\n      tag_20\n      sload(0x04)\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":537:562   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":525:527   */\n      0x20\n        /* \"#utility.yul\":510:528   */\n      add\n        /* \"contracts/HACHIStorage.sol\":300:321  uint public mintPrice */\n      tag_18\n        /* \"#utility.yul\":391:568   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_12\n      tag_25\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":719:770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_18\n        /* \"#utility.yul\":573:776   */\n      jump\n        /* \"contracts/HACHIStorage.sol\":327:348  uint public mintLimit */\n    tag_8:\n      tag_20\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/HACHIStorage.sol\":940:1030  function updateMintLimit(uint _limit) public onlyOwner {... */\n    tag_9:\n      tag_12\n      tag_34\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_12\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/HACHIStorage.sol\":1036:1126  function updateMintPrice(uint _price) public onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/HACHIStorage.sol\":1101:1110  mintPrice */\n      0x04\n        /* \"contracts/HACHIStorage.sol\":1101:1119  mintPrice = _price */\n      sstore\n        /* \"contracts/HACHIStorage.sol\":1036:1126  function updateMintPrice(uint _price) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/HACHIStorage.sol\":940:1030  function updateMintLimit(uint _limit) public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n        /* \"contracts/HACHIStorage.sol\":1005:1014  mintLimit */\n      0x05\n        /* \"contracts/HACHIStorage.sol\":1005:1023  mintLimit = _limit */\n      sstore\n        /* \"contracts/HACHIStorage.sol\":940:1030  function updateMintLimit(uint _limit) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1635:1637   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1617:1638   */\n      mstore\n        /* \"#utility.yul\":1674:1676   */\n      0x26\n        /* \"#utility.yul\":1654:1672   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1647:1677   */\n      mstore\n        /* \"#utility.yul\":1713:1747   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1693:1711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1686:1748   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1764:1782   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1757:1793   */\n      mstore\n        /* \"#utility.yul\":1810:1829   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_45\n        /* \"#utility.yul\":1433:1835   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_77:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_38:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_82:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":967:1037   */\n    tag_83:\n        /* \"#utility.yul\":1056:1061   */\n      swap4\n        /* \"#utility.yul\":781:1067   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1072:1428   */\n    tag_46:\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"#utility.yul\":1256:1277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1293:1311   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1286:1316   */\n      mstore\n        /* \"#utility.yul\":1352:1386   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1347:1349   */\n      0x40\n        /* \"#utility.yul\":1332:1350   */\n      dup3\n      add\n        /* \"#utility.yul\":1325:1387   */\n      mstore\n        /* \"#utility.yul\":1419:1421   */\n      0x60\n        /* \"#utility.yul\":1404:1422   */\n      add\n      swap1\n        /* \"#utility.yul\":1072:1428   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3325491eebf93586d36f18fb08b88df0f200c0665d987e9ea0fce93ec68e32664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 113,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"extract_byte_array_length": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2108:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:3"
															},
															"nodeType": "YulIf",
															"src": "220:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:3"
															},
															"nodeType": "YulIf",
															"src": "353:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:3"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:3"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:3"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:3"
															},
															"nodeType": "YulIf",
															"src": "536:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:3"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:3"
															},
															"nodeType": "YulIf",
															"src": "698:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:3"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:3"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:3",
																"statements": []
															},
															"src": "779:133:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:3"
															},
															"nodeType": "YulIf",
															"src": "921:80:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:3",
														"type": ""
													}
												],
												"src": "146:885:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1188:533:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1209:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1230:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:33:3"
															},
															"nodeType": "YulIf",
															"src": "1198:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1260:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1280:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1274:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:16:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1264:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1317:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1321:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1303:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1354:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1356:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1356:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1342:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1350:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1339:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:14:3"
															},
															"nodeType": "YulIf",
															"src": "1336:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1379:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1442:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1389:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:61:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1459:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1485:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1496:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:25:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1463:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1529:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1538:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1541:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1531:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1531:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1531:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1515:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1525:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1512:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:16:3"
															},
															"nodeType": "YulIf",
															"src": "1509:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1554:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1597:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1608:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1619:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1564:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:63:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1636:35:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1667:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1646:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1680:35:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1700:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1711:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1696:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1696:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1690:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:25:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1130:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1141:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1153:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1161:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1169:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1177:6:3",
														"type": ""
													}
												],
												"src": "1036:685:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1805:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1808:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1822:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1852:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1826:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1899:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1901:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1915:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1923:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1911:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1911:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1901:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1879:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1872:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:26:3"
															},
															"nodeType": "YulIf",
															"src": "1869:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1989:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2017:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2022:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2013:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2013:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2057:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2047:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2085:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2075:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1945:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1976:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1965:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1942:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:38:3"
															},
															"nodeType": "YulIf",
															"src": "1939:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1761:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1770:6:3",
														"type": ""
													}
												],
												"src": "1726:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161064538038061064583398101604081905261002f9161021c565b61003833610071565b835161004b9060019060208701906100c1565b50825161005f9060029060208601906100c1565b50600491909155600555506102c99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546100cd9061028f565b90600052602060002090601f0160209004810192826100ef5760008555610135565b82601f1061010857805160ff1916838001178555610135565b82800160010185558215610135579182015b8281111561013557825182559160200191906001019061011a565b50610141929150610145565b5090565b5b808211156101415760008155600101610146565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261018157600080fd5b81516001600160401b038082111561019b5761019b61015a565b604051601f8301601f19908116603f011681019082821181831017156101c3576101c361015a565b816040528381526020925086838588010111156101df57600080fd5b600091505b8382101561020157858201830151818301840152908201906101e4565b838211156102125760008385830101525b9695505050505050565b6000806000806080858703121561023257600080fd5b84516001600160401b038082111561024957600080fd5b61025588838901610170565b9550602087015191508082111561026b57600080fd5b5061027887828801610170565b604087015160609097015195989097509350505050565b600181811c908216806102a357607f821691505b6020821081036102c357634e487b7160e01b600052602260045260246000fd5b50919050565b61036d806102d86000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e7578063996517cf14610102578063e01d55c51461010b578063f2fde38b1461011e57600080fd5b8062728e461461008c57806326092b83146100a15780636817c76c146100c8578063715018a6146100df575b600080fd5b61009f61009a3660046102b9565b610131565b005b6003546100b390610100900460ff1681565b60405190151581526020015b60405180910390f35b6100d160045481565b6040519081526020016100bf565b61009f610169565b6000546040516001600160a01b0390911681526020016100bf565b6100d160055481565b61009f6101193660046102b9565b61019f565b61009f61012c3660046102d2565b6101ce565b6000546001600160a01b031633146101645760405162461bcd60e51b815260040161015b90610302565b60405180910390fd5b600455565b6000546001600160a01b031633146101935760405162461bcd60e51b815260040161015b90610302565b61019d6000610269565b565b6000546001600160a01b031633146101c95760405162461bcd60e51b815260040161015b90610302565b600555565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260040161015b90610302565b6001600160a01b03811661025d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161015b565b61026681610269565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102cb57600080fd5b5035919050565b6000602082840312156102e457600080fd5b81356001600160a01b03811681146102fb57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3325491eebf93586d36f18fb08b88df0f200c0665d987e9ea0fce93ec68e32664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x645 CODESIZE SUB DUP1 PUSH2 0x645 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x21C JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x71 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x4B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0xC1 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x5F SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0xC1 JUMP JUMPDEST POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE POP PUSH2 0x2C9 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xCD SWAP1 PUSH2 0x28F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xEF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x135 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x108 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x135 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x135 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x135 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11A JUMP JUMPDEST POP PUSH2 0x141 SWAP3 SWAP2 POP PUSH2 0x145 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x146 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C3 JUMPI PUSH2 0x1C3 PUSH2 0x15A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH2 0x201 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH2 0x1E4 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 DUP9 DUP4 DUP10 ADD PUSH2 0x170 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 DUP8 DUP3 DUP9 ADD PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP1 SWAP8 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36D DUP1 PUSH2 0x2D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x996517CF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xE01D55C5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x728E46 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xB3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x9F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xD1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH2 0x9F PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x0 PUSH2 0x269 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x266 DUP2 PUSH2 0x269 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 ORIGIN SLOAD SWAP2 0xEE 0xBF SWAP4 PC PUSH14 0x36F18FB08B88DF0F200C0665D987 0xE9 0xEA 0xF 0xCE SWAP4 0xEC PUSH9 0xE32664736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "113:1016:2:-:0;;;625:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;757:50:2;;;;:23;;:50;;;;;:::i;:::-;-1:-1:-1;817:44:2;;;;:20;;:44;;;;;:::i;:::-;-1:-1:-1;871:9:2;:22;;;;903:9;:22;-1:-1:-1;113:1016:2;;-1:-1:-1;113:1016:2;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;113:1016:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;113:1016:2;;;-1:-1:-1;113:1016:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:3:o;1036:685::-;1153:6;1161;1169;1177;1230:3;1218:9;1209:7;1205:23;1201:33;1198:53;;;1247:1;1244;1237:12;1198:53;1274:16;;-1:-1:-1;;;;;1339:14:3;;;1336:34;;;1366:1;1363;1356:12;1336:34;1389:61;1442:7;1433:6;1422:9;1418:22;1389:61;:::i;:::-;1379:71;;1496:2;1485:9;1481:18;1475:25;1459:41;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;;1564:63;1619:7;1608:8;1597:9;1593:24;1564:63;:::i;:::-;1667:2;1652:18;;1646:25;1711:2;1696:18;;;1690:25;1036:685;;1554:73;;-1:-1:-1;1036:685:3;-1:-1:-1;;;;1036:685:3:o;1726:380::-;1805:1;1801:12;;;;1848;;;1869:61;;1923:4;1915:6;1911:17;1901:27;;1869:61;1976:2;1968:6;1965:14;1945:18;1942:38;1939:161;;2022:10;2017:3;2013:20;2010:1;2003:31;2057:4;2054:1;2047:15;2085:4;2082:1;2075:15;1939:161;;1726:380;;;:::o;:::-;113:1016:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 617,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintLimit_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintPrice_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@publicMint_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 361,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 462,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMintLimit_205": {
									"entryPoint": 415,
									"id": 205,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMintPrice_217": {
									"entryPoint": 305,
									"id": 217,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1837:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "304:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "339:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "285:4:3",
														"type": ""
													}
												],
												"src": "199:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "502:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "555:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "537:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "472:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "483:4:3",
														"type": ""
													}
												],
												"src": "391:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "674:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "684:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "692:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "684:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "726:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "741:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "757:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "762:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "753:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "753:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "766:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "643:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "654:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "665:4:3",
														"type": ""
													}
												],
												"src": "573:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:3"
															},
															"nodeType": "YulIf",
															"src": "861:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:3"
															},
															"nodeType": "YulIf",
															"src": "967:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:3",
														"type": ""
													}
												],
												"src": "781:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1286:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1352:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1325:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1396:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1404:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1396:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1223:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1237:4:3",
														"type": ""
													}
												],
												"src": "1072:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1624:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1617:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1669:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1654:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1697:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1708:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1693:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1713:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1768:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1779:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1784:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1757:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1757:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1802:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1814:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1810:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1802:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1584:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1598:4:3",
														"type": ""
													}
												],
												"src": "1433:402:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e7578063996517cf14610102578063e01d55c51461010b578063f2fde38b1461011e57600080fd5b8062728e461461008c57806326092b83146100a15780636817c76c146100c8578063715018a6146100df575b600080fd5b61009f61009a3660046102b9565b610131565b005b6003546100b390610100900460ff1681565b60405190151581526020015b60405180910390f35b6100d160045481565b6040519081526020016100bf565b61009f610169565b6000546040516001600160a01b0390911681526020016100bf565b6100d160055481565b61009f6101193660046102b9565b61019f565b61009f61012c3660046102d2565b6101ce565b6000546001600160a01b031633146101645760405162461bcd60e51b815260040161015b90610302565b60405180910390fd5b600455565b6000546001600160a01b031633146101935760405162461bcd60e51b815260040161015b90610302565b61019d6000610269565b565b6000546001600160a01b031633146101c95760405162461bcd60e51b815260040161015b90610302565b600555565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260040161015b90610302565b6001600160a01b03811661025d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161015b565b61026681610269565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102cb57600080fd5b5035919050565b6000602082840312156102e457600080fd5b81356001600160a01b03811681146102fb57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3325491eebf93586d36f18fb08b88df0f200c0665d987e9ea0fce93ec68e32664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x996517CF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xE01D55C5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x728E46 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xB3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x9F PUSH2 0x169 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xD1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH2 0x9F PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x0 PUSH2 0x269 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x266 DUP2 PUSH2 0x269 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 ORIGIN SLOAD SWAP2 0xEE 0xBF SWAP4 PC PUSH14 0x36F18FB08B88DF0F200C0665D987 0xE9 0xEA 0xF 0xCE SWAP4 0xEC PUSH9 0xE32664736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "113:1016:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1036:90;;;;;;:::i;:::-;;:::i;:::-;;271:22;;;;;;;;;;;;;;;364:14:3;;357:22;339:41;;327:2;312:18;271:22:2;;;;;;;;300:21;;;;;;;;;537:25:3;;;525:2;510:18;300:21:2;391:177:3;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;719:51:3;;707:2;692:18;1036:85:0;573:203:3;327:21:2;;;;;;940:90;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;1036:90:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1101:9:2::1;:18:::0;1036:90::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;940:90:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1005:9:2::1;:18:::0;940:90::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;1635:2:3;1998:73:0::1;::::0;::::1;1617:21:3::0;1674:2;1654:18;;;1647:30;1713:34;1693:18;;;1686:62;-1:-1:-1;;;1764:18:3;;;1757:36;1810:19;;1998:73:0::1;1433:402:3::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:3;;977:42;;967:70;;1033:1;1030;1023:12;967:70;1056:5;781:286;-1:-1:-1;;;781:286:3:o;1072:356::-;1274:2;1256:21;;;1293:18;;;1286:30;1352:34;1347:2;1332:18;;1325:62;1419:2;1404:18;;1072:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "175400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"mintLimit()": "2317",
								"mintPrice()": "2340",
								"owner()": "2301",
								"publicMint()": "2333",
								"renounceOwnership()": "28181",
								"transferOwnership(address)": "28340",
								"updateMintLimit(uint256)": "24508",
								"updateMintPrice(uint256)": "24465"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 934,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 625,
									"end": 934,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 757,
									"end": 807,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 757,
									"end": 807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 757,
									"end": 780,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 757,
									"end": 780,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 757,
									"end": 807,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 757,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 757,
									"end": 807,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 757,
									"end": 807,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 757,
									"end": 807,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 817,
									"end": 861,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 817,
									"end": 861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 817,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 817,
									"end": 837,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 861,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 817,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 817,
									"end": 861,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 817,
									"end": 861,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 817,
									"end": 861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 871,
									"end": 880,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 871,
									"end": 893,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 903,
									"end": 912,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 903,
									"end": 925,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 3
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1159,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1175,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1177,
									"end": 1183,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1230,
									"end": 1233,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1209,
									"end": 1216,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1228,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1234,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1251,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1198,
									"end": 1251,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1247,
									"end": 1248,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1237,
									"end": 1249,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1198,
									"end": 1251,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1198,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1290,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1290,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1339,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1339,
									"end": 1353,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1339,
									"end": 1353,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1336,
									"end": 1370,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1336,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1336,
									"end": 1370,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1366,
									"end": 1367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1364,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1356,
									"end": 1368,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1336,
									"end": 1370,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1336,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1389,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1442,
									"end": 1449,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 1433,
									"end": 1439,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1422,
									"end": 1431,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 1418,
									"end": 1440,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1389,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1389,
									"end": 1450,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1389,
									"end": 1450,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1389,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1450,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1450,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1496,
									"end": 1498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1485,
									"end": 1494,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1481,
									"end": 1499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1475,
									"end": 1500,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1500,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1500,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1515,
									"end": 1523,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1512,
									"end": 1528,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1541,
									"end": 1542,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1531,
									"end": 1543,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1509,
									"end": 1545,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1619,
									"end": 1626,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1608,
									"end": 1616,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1597,
									"end": 1606,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 1593,
									"end": 1617,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1646,
									"end": 1671,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1711,
									"end": 1713,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "SWAP8",
									"source": 3
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1715,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "SWAP9",
									"source": 3
								},
								{
									"begin": 1554,
									"end": 1627,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1554,
									"end": 1627,
									"name": "SWAP8",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1036,
									"end": 1721,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1805,
									"end": 1806,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1813,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 1813,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 1813,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 1813,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1860,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1860,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1860,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1869,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1869,
									"end": 1930,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1927,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 1915,
									"end": 1921,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1911,
									"end": 1928,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1901,
									"end": 1928,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1901,
									"end": 1928,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1869,
									"end": 1930,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1869,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 1978,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1968,
									"end": 1974,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1965,
									"end": 1979,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1945,
									"end": 1963,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1942,
									"end": 1980,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1939,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1939,
									"end": 2100,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2032,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 2017,
									"end": 2020,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 2013,
									"end": 2033,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2010,
									"end": 2011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2003,
									"end": 2034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2047,
									"end": 2062,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2085,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2090,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1939,
									"end": 2100,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1939,
									"end": 2100,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1939,
									"end": 2100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1726,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 1129,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3325491eebf93586d36f18fb08b88df0f200c0665d987e9ea0fce93ec68e32664736f6c634300080d0033",
									".code": [
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "996517CF"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "E01D55C5"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "728E46"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "26092B83"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "6817C76C"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 113,
											"end": 1129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 271,
											"end": 293,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 293,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 537,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 537,
											"end": 562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 537,
											"end": 562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 568,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 573,
											"end": 776,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 348,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 327,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 327,
											"end": 348,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 327,
											"end": 348,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 327,
											"end": 348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 327,
											"end": 348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1005,
											"end": 1023,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 940,
											"end": 1030,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1638,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1747,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1693,
											"end": 1711,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1693,
											"end": 1711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1793,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1433,
											"end": 1835,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1428,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1072,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1428,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"mintLimit()": "996517cf",
							"mintPrice()": "6817c76c",
							"owner()": "8da5cb5b",
							"publicMint()": "26092b83",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateMintLimit(uint256)": "e01d55c5",
							"updateMintPrice(uint256)": "00728e46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hachiGenericMetaDataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hachiIPFSMetaDataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"mintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"updateMintLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HACHIStorage.sol\":\"HachiStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/HACHIStorage.sol\":{\"keccak256\":\"0xfe842ee2192ea326b354ce25ffe390f44b85763a49c6a0914171f49079998a8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230a8487b15426df8673512a4b449048e82f341b7bf6797730cf631c5aad44e5\",\"dweb:/ipfs/QmRqKZ39vTybVnzrFkgTfFFWQVzeh7tSS2NGzT84nrZMCW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 133,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "hachiGenericMetaDataURI",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 135,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "hachiIPFSMetaDataURI",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 137,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "metaDataReveal",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 139,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "publicMint",
								"offset": 1,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 141,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "mintPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "mintLimit",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 147,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "control",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 151,
								"contract": "contracts/HACHIStorage.sol:HachiStorage",
								"label": "numberMinted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/HACHIStorage.sol": {
				"ast": {
					"absolutePath": "contracts/HACHIStorage.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"HachiStorage": [
							218
						],
						"Ownable": [
							104
						]
					},
					"id": 219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 219,
							"sourceUnit": 105,
							"src": "59:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 130,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "138:7:2"
									},
									"id": 131,
									"nodeType": "InheritanceSpecifier",
									"src": "138:7:2"
								}
							],
							"canonicalName": "HachiStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218,
								104,
								126
							],
							"name": "HachiStorage",
							"nameLocation": "122:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "hachiGenericMetaDataURI",
									"nameLocation": "167:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "152:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 132,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "152:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 135,
									"mutability": "mutable",
									"name": "hachiIPFSMetaDataURI",
									"nameLocation": "211:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "196:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 134,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "196:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "metaDataReveal",
									"nameLocation": "251:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "238:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 136,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "238:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "26092b83",
									"id": 139,
									"mutability": "mutable",
									"name": "publicMint",
									"nameLocation": "283:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "271:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 138,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "271:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6817c76c",
									"id": 141,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "312:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "300:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "300:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "996517cf",
									"id": 143,
									"mutability": "mutable",
									"name": "mintLimit",
									"nameLocation": "339:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "327:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 142,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "327:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "control",
									"nameLocation": "391:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "355:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 146,
										"keyType": {
											"id": 144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "355:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 145,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "374:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "numberMinted",
									"nameLocation": "440:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 218,
									"src": "404:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 150,
										"keyType": {
											"id": 148,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "412:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "404:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "423:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "HachiStorage.HachiTicket",
									"id": 165,
									"members": [
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "502:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "492:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ArrayTypeName",
												"src": "492:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "529:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "519:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 156,
												"nodeType": "ArrayTypeName",
												"src": "519:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "554:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "546:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 158,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "572:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "566:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 160,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "566:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "merkleProof",
											"nameLocation": "601:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "591:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 163,
												"nodeType": "ArrayTypeName",
												"src": "591:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HachiTicket",
									"nameLocation": "470:11:2",
									"nodeType": "StructDefinition",
									"scope": 218,
									"src": "463:156:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "747:187:2",
										"statements": [
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "hachiGenericMetaDataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "757:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 177,
														"name": "_hachiGenericMetaDataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "783:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "757:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "757:50:2"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "hachiIPFSMetaDataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "817:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "_hachiIPFSMetaDataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "840:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "817:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "817:44:2"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "871:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "883:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "871:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "871:22:2"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 188,
														"name": "mintLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "903:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 189,
														"name": "_mintLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "915:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "903:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "903:22:2"
											}
										]
									},
									"id": 193,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_hachiGenericMetaDataURI",
												"nameLocation": "651:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "637:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "637:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_hachiIPFSMetaDataURI",
												"nameLocation": "691:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "677:35:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_mintPrice",
												"nameLocation": "719:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "714:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_mintLimit",
												"nameLocation": "736:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "731:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "731:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:111:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:0:2"
									},
									"scope": 218,
									"src": "625:309:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "995:35:2",
										"statements": [
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "mintLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1005:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 201,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1017:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1005:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1005:18:2"
											}
										]
									},
									"functionSelector": "e01d55c5",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "985:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "985:9:2"
										}
									],
									"name": "updateMintLimit",
									"nameLocation": "949:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "970:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "965:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "965:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:13:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:2"
									},
									"scope": 218,
									"src": "940:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1091:35:2",
										"statements": [
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1101:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 213,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1113:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1101:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1101:18:2"
											}
										]
									},
									"functionSelector": "00728e46",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 209,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1081:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1081:9:2"
										}
									],
									"name": "updateMintPrice",
									"nameLocation": "1045:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1061:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1061:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:13:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1091:0:2"
									},
									"scope": 218,
									"src": "1036:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 219,
							"src": "113:1016:2",
							"usedErrors": []
						}
					],
					"src": "33:1096:2"
				},
				"id": 2
			}
		}
	}
}