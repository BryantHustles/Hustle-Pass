{
	"id": "5264beea7458ce0dff340fa5f32c7a77",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HachiNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\n\n/// @custom:security-contact thesidehustlersnft@gmail.com\ncontract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {\n    constructor()\n        ERC1155(\"https://ipfs.io/ipfs/QmQ6tZha8rMRE1SjdfjWGDZiUrzPcRfxxESDHuQABbZDS8?filename=SideHustler%20Background.png\")\n    {}\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        internal\n        whenNotPaused\n        override\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  eq\n    /* \"#utility.yul\":1451:1612   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_55\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_55\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_162\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_174\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_177\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15118:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x34\n        /* \"#utility.yul\":15155:15173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15148:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15194:15212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15187:15249   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15265:15283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15258:15308   */\n      mstore\n        /* \"#utility.yul\":15325:15344   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14934:15350   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_194\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16474:16719  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_204\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_207\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_208\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_208:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_221:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_232:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_234:\n        /* \"#utility.yul\":360:389   */\n      tag_235\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_221\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_222:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_238:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_240:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_241\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_222\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_223:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_246:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_246)\n    tag_248:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_241\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_224:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_255\n      tag_86\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_225:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_258\n      tag_86\n      jump\t// in\n    tag_258:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_226:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_260:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_261\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_225\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_262\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_263:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_264:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_264)\n    tag_266:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_227:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_268:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_270\n      tag_86\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_271\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_224\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_272:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_274:\n        /* \"#utility.yul\":4240:4269   */\n      tag_275\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_221\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_276\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_277:\n        /* \"#utility.yul\":4480:4541   */\n      tag_278\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_226\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_279:\n        /* \"#utility.yul\":4662:4725   */\n      tag_280\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_281:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_282\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_227\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_284:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_285:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_286:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_287\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_288\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_224\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_289:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_290:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_293\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_221\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_290)\n    tag_292:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_295\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_226\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_228:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_297:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_297)\n    tag_299:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_241\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_303:\n        /* \"#utility.yul\":6993:7022   */\n      tag_304\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_221\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_305:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_307:\n        /* \"#utility.yul\":7348:7377   */\n      tag_308\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_221\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_309\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_221\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_311:\n        /* \"#utility.yul\":7674:7703   */\n      tag_312\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_313\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_221\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_314:\n        /* \"#utility.yul\":7996:8045   */\n      tag_282\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_64:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_318:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      eq\n        /* \"#utility.yul\":8681:8842   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_94:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_229:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_100:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10006:10023   */\n      dup3\n      eq\n        /* \"#utility.yul\":10003:10046   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_326\n      tag_229\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_124:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_137:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_139:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_333\n      tag_229\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_142:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_335\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_228\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_336\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13815   */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13400   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13367:13401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13437:13452   */\n      dup6\n      and\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13453   */\n      mstore\n        /* \"#utility.yul\":13347:13350   */\n      0xa0\n        /* \"#utility.yul\":13484:13486   */\n      0x40\n        /* \"#utility.yul\":13469:13487   */\n      dup3\n      add\n        /* \"#utility.yul\":13462:13493   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13310:13314   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13516:13573   */\n      tag_340\n      swap1\n        /* \"#utility.yul\":13553:13572   */\n      dup4\n      add\n        /* \"#utility.yul\":13545:13551   */\n      dup7\n        /* \"#utility.yul\":13516:13573   */\n      tag_228\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13613:13619   */\n      dup2\n        /* \"#utility.yul\":13609:13631   */\n      sub\n        /* \"#utility.yul\":13604:13606   */\n      0x60\n        /* \"#utility.yul\":13593:13602   */\n      dup5\n        /* \"#utility.yul\":13589:13607   */\n      add\n        /* \"#utility.yul\":13582:13632   */\n      mstore\n        /* \"#utility.yul\":13655:13699   */\n      tag_341\n        /* \"#utility.yul\":13692:13698   */\n      dup2\n        /* \"#utility.yul\":13684:13690   */\n      dup7\n        /* \"#utility.yul\":13655:13699   */\n      tag_228\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13641:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13740:13746   */\n      dup2\n        /* \"#utility.yul\":13736:13758   */\n      sub\n        /* \"#utility.yul\":13730:13733   */\n      0x80\n        /* \"#utility.yul\":13719:13728   */\n      dup5\n        /* \"#utility.yul\":13715:13734   */\n      add\n        /* \"#utility.yul\":13708:13759   */\n      mstore\n        /* \"#utility.yul\":13776:13809   */\n      tag_342\n        /* \"#utility.yul\":13802:13808   */\n      dup2\n        /* \"#utility.yul\":13794:13800   */\n      dup6\n        /* \"#utility.yul\":13776:13809   */\n      tag_223\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13768:13809   */\n      swap9\n        /* \"#utility.yul\":12988:13815   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14069   */\n    tag_178:\n        /* \"#utility.yul\":13889:13895   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13921:13928   */\n      dup5\n        /* \"#utility.yul\":13917:13940   */\n      sub\n        /* \"#utility.yul\":13913:13945   */\n      slt\n        /* \"#utility.yul\":13910:13962   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13955:13956   */\n      dup1\n        /* \"#utility.yul\":13948:13960   */\n      revert\n        /* \"#utility.yul\":13910:13962   */\n    tag_344:\n        /* \"#utility.yul\":13990:13999   */\n      dup2\n        /* \"#utility.yul\":13984:14000   */\n      mload\n        /* \"#utility.yul\":14009:14039   */\n      tag_241\n        /* \"#utility.yul\":14033:14038   */\n      dup2\n        /* \"#utility.yul\":14009:14039   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":14074:14253   */\n    tag_184:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14151:14152   */\n      0x03\n        /* \"#utility.yul\":14133:14149   */\n      returndatasize\n        /* \"#utility.yul\":14130:14153   */\n      gt\n        /* \"#utility.yul\":14127:14247   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14197:14198   */\n      0x04\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14191:14192   */\n      dup1\n        /* \"#utility.yul\":14176:14199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14228:14236   */\n      mload\n        /* \"#utility.yul\":14223:14226   */\n      0xe0\n        /* \"#utility.yul\":14219:14237   */\n      shr\n        /* \"#utility.yul\":14127:14247   */\n    tag_347:\n        /* \"#utility.yul\":14074:14253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14258:14929   */\n    tag_186:\n        /* \"#utility.yul\":14297:14300   */\n      0x00\n        /* \"#utility.yul\":14339:14343   */\n      0x44\n        /* \"#utility.yul\":14321:14337   */\n      returndatasize\n        /* \"#utility.yul\":14318:14344   */\n      lt\n        /* \"#utility.yul\":14315:14354   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14315:14354   */\n    tag_349:\n        /* \"#utility.yul\":14381:14383   */\n      0x40\n        /* \"#utility.yul\":14375:14384   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14446:14462   */\n      returndatasize\n        /* \"#utility.yul\":14442:14467   */\n      dup2\n      add\n        /* \"#utility.yul\":14439:14440   */\n      0x04\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14418:14468   */\n      returndatacopy\n        /* \"#utility.yul\":14497:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14502   */\n      mload\n        /* \"#utility.yul\":14521:14537   */\n      returndatasize\n        /* \"#utility.yul\":14556:14574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14627:14629   */\n      dup2\n        /* \"#utility.yul\":14620:14624   */\n      0x24\n        /* \"#utility.yul\":14612:14618   */\n      dup5\n        /* \"#utility.yul\":14608:14625   */\n      add\n        /* \"#utility.yul\":14605:14630   */\n      gt\n        /* \"#utility.yul\":14600:14602   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup5\n        /* \"#utility.yul\":14589:14603   */\n      gt\n        /* \"#utility.yul\":14586:14631   */\n      or\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":14634:14639   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14583:14641   */\n    tag_350:\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14665:14669   */\n      dup6\n        /* \"#utility.yul\":14661:14678   */\n      add\n        /* \"#utility.yul\":14650:14678   */\n      swap2\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      dup2\n        /* \"#utility.yul\":14701:14711   */\n      mload\n        /* \"#utility.yul\":14734:14736   */\n      dup2\n        /* \"#utility.yul\":14726:14732   */\n      dup2\n        /* \"#utility.yul\":14723:14737   */\n      gt\n        /* \"#utility.yul\":14720:14747   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":14740:14745   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14720:14747   */\n    tag_351:\n        /* \"#utility.yul\":14824:14826   */\n      dup5\n        /* \"#utility.yul\":14805:14821   */\n      returndatasize\n        /* \"#utility.yul\":14799:14803   */\n      dup8\n        /* \"#utility.yul\":14795:14822   */\n      add\n        /* \"#utility.yul\":14791:14827   */\n      add\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14770:14773   */\n      dup6\n        /* \"#utility.yul\":14766:14782   */\n      add\n        /* \"#utility.yul\":14762:14789   */\n      add\n        /* \"#utility.yul\":14759:14828   */\n      gt\n        /* \"#utility.yul\":14756:14838   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":14831:14836   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14756:14838   */\n    tag_352:\n        /* \"#utility.yul\":14847:14904   */\n      tag_353\n        /* \"#utility.yul\":14898:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14881:14887   */\n      dup7\n        /* \"#utility.yul\":14877:14896   */\n      add\n        /* \"#utility.yul\":14873:14903   */\n      add\n        /* \"#utility.yul\":14867:14871   */\n      dup8\n        /* \"#utility.yul\":14847:14904   */\n      tag_224\n      jump\t// in\n    tag_353:\n      pop\n        /* \"#utility.yul\":14920:14923   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14258:14929   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15759   */\n    tag_194:\n        /* \"#utility.yul\":15557:15559   */\n      0x20\n        /* \"#utility.yul\":15539:15560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15596:15598   */\n      0x28\n        /* \"#utility.yul\":15576:15594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15569:15599   */\n      mstore\n        /* \"#utility.yul\":15635:15669   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15630:15632   */\n      0x40\n        /* \"#utility.yul\":15615:15633   */\n      dup3\n      add\n        /* \"#utility.yul\":15608:15670   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15701:15703   */\n      0x60\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15717   */\n      mstore\n        /* \"#utility.yul\":15749:15752   */\n      0x80\n        /* \"#utility.yul\":15734:15753   */\n      add\n      swap1\n        /* \"#utility.yul\":15355:15759   */\n      jump\t// out\n        /* \"#utility.yul\":15764:16325   */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16061:16076   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16043:16077   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16113:16128   */\n      dup6\n      and\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16093:16111   */\n      dup3\n      add\n        /* \"#utility.yul\":16086:16129   */\n      mstore\n        /* \"#utility.yul\":16160:16162   */\n      0x40\n        /* \"#utility.yul\":16145:16163   */\n      dup2\n      add\n        /* \"#utility.yul\":16138:16172   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16203:16205   */\n      0x60\n        /* \"#utility.yul\":16188:16206   */\n      dup2\n      add\n        /* \"#utility.yul\":16181:16215   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0xa0\n        /* \"#utility.yul\":16246:16249   */\n      0x80\n        /* \"#utility.yul\":16231:16250   */\n      dup3\n      add\n        /* \"#utility.yul\":16224:16256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16273:16319   */\n      tag_357\n      swap1\n        /* \"#utility.yul\":16299:16318   */\n      dup4\n      add\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16273:16319   */\n      tag_223\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":16265:16319   */\n      swap8\n        /* \"#utility.yul\":15764:16325   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220319f9df1ee324a4b767460499a290574ca76a79a06359db5f493b1c07bd06da364736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_752": {
									"entryPoint": 70,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:12"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:12"
															},
															"nodeType": "YulIf",
															"src": "268:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:12"
															},
															"nodeType": "YulIf",
															"src": "405:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:12"
															},
															"nodeType": "YulIf",
															"src": "489:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:12"
															},
															"nodeType": "YulIf",
															"src": "581:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:12"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:12"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:12"
															},
															"nodeType": "YulIf",
															"src": "764:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:12"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:12"
															},
															"nodeType": "YulIf",
															"src": "903:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:12",
																"statements": []
															},
															"src": "984:129:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:12"
															},
															"nodeType": "YulIf",
															"src": "1122:80:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:12",
														"type": ""
													}
												],
												"src": "146:1087:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:12"
															},
															"nodeType": "YulIf",
															"src": "1381:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:12"
															},
															"nodeType": "YulIf",
															"src": "1451:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:12",
														"type": ""
													}
												],
												"src": "1238:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016113803806200161183398101604081905262000034916200011b565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b602082108114156200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b6113cd80620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bcf565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c12565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c36565b610275565b6040516100a99190610c9c565b610108610103366004610dfb565b610309565b005b61011d610118366004610ea5565b6103a0565b6040516100a99190610fab565b610108610138366004610fbe565b6104ca565b6100c561014b366004610ffa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461102d565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611092565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611092565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610caf565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110cd565b6020026020010151858381518110610488576104886110cd565b602002602001015161018c565b8282815181106104a7576104a76110cd565b60209081029190910101526104bb816110f9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081e565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611114565b3360005b84518110156106cf576000858281518110610609576106096110cd565b602002602001015190506000858381518110610627576106276110cd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611159565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b49084906111a3565b92505081905550505050806106c8906110f9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111bb565b60405180910390a4610735818787878787610948565b505050505050565b816001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f490611114565b33600061085085610aad565b9050600061085d85610aad565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108a05760405162461bcd60e51b81526004016101f490611159565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906108dd9084906111a3565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093d848a8a8a8a8a610af8565b505050505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098c90899089908890889088906004016111e9565b6020604051808303816000875af19250505080156109c7575060408051601f3d908101601f191682019092526109c491810190611247565b60015b610a74576109d3611264565b806308c379a01415610a0d57506109e8611280565b806109f35750610a0f565b8060405162461bcd60e51b81526004016101f49190610c9c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b14610aa45760405162461bcd60e51b81526004016101f49061130a565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ae757610ae76110cd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b3c9089908990889088908890600401611352565b6020604051808303816000875af1925050508015610b77575060408051601f3d908101601f19168201909252610b7491810190611247565b60015b610b83576109d3611264565b6001600160e01b0319811663f23a6e6160e01b14610aa45760405162461bcd60e51b81526004016101f49061130a565b80356001600160a01b0381168114610bca57600080fd5b919050565b60008060408385031215610be257600080fd5b610beb83610bb3565b946020939093013593505050565b6001600160e01b031981168114610c0f57600080fd5b50565b600060208284031215610c2457600080fd5b8135610c2f81610bf9565b9392505050565b600060208284031215610c4857600080fd5b5035919050565b6000815180845260005b81811015610c7557602081850181015186830182015201610c59565b81811115610c87576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c2f6020830184610c4f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ceb57610ceb610caf565b6040525050565b600067ffffffffffffffff821115610d0c57610d0c610caf565b5060051b60200190565b600082601f830112610d2757600080fd5b81356020610d3482610cf2565b604051610d418282610cc5565b83815260059390931b8501820192828101915086841115610d6157600080fd5b8286015b84811015610d7c5780358352918301918301610d65565b509695505050505050565b600082601f830112610d9857600080fd5b813567ffffffffffffffff811115610db257610db2610caf565b604051610dc9601f8301601f191660200182610cc5565b818152846020838601011115610dde57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e1357600080fd5b610e1c86610bb3565b9450610e2a60208701610bb3565b9350604086013567ffffffffffffffff80821115610e4757600080fd5b610e5389838a01610d16565b94506060880135915080821115610e6957600080fd5b610e7589838a01610d16565b93506080880135915080821115610e8b57600080fd5b50610e9888828901610d87565b9150509295509295909350565b60008060408385031215610eb857600080fd5b823567ffffffffffffffff80821115610ed057600080fd5b818501915085601f830112610ee457600080fd5b81356020610ef182610cf2565b604051610efe8282610cc5565b83815260059390931b8501820192828101915089841115610f1e57600080fd5b948201945b83861015610f4357610f3486610bb3565b82529482019490820190610f23565b96505086013592505080821115610f5957600080fd5b50610f6685828601610d16565b9150509250929050565b600081518084526020808501945080840160005b83811015610fa057815187529582019590820190600101610f84565b509495945050505050565b602081526000610c2f6020830184610f70565b60008060408385031215610fd157600080fd5b610fda83610bb3565b915060208301358015158114610fef57600080fd5b809150509250929050565b6000806040838503121561100d57600080fd5b61101683610bb3565b915061102460208401610bb3565b90509250929050565b600080600080600060a0868803121561104557600080fd5b61104e86610bb3565b945061105c60208701610bb3565b93506040860135925060608601359150608086013567ffffffffffffffff81111561108657600080fd5b610e9888828901610d87565b600181811c908216806110a657607f821691505b602082108114156110c757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561110d5761110d6110e3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111b6576111b66110e3565b500190565b6040815260006111ce6040830185610f70565b82810360208401526111e08185610f70565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061121590830186610f70565b82810360608401526112278186610f70565b9050828103608084015261123b8185610c4f565b98975050505050505050565b60006020828403121561125957600080fd5b8151610c2f81610bf9565b600060033d111561127d5760046000803e5060005160e01c5b90565b600060443d101561128e5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112be57505050505090565b82850191508151818111156112d65750505050505090565b843d87010160208285010111156112f05750505050505090565b6112ff60208286010187610cc5565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061138c90830184610c4f565b97965050505050505056fea2646970667358221220319f9df1ee324a4b767460499a290574ca76a79a06359db5f493b1c07bd06da364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1611 CODESIZE SUB DUP1 PUSH3 0x1611 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x22E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CD DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1092 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1092 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1114 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x948 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1114 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x850 DUP6 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85D DUP6 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DD SWAP1 DUP5 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93D DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xAF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA74 JUMPI PUSH2 0x9D3 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA0D JUMPI POP PUSH2 0x9E8 PUSH2 0x1280 JUMP JUMPDEST DUP1 PUSH2 0x9F3 JUMPI POP PUSH2 0xA0F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x130A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE7 JUMPI PUSH2 0xAE7 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB77 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB74 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB83 JUMPI PUSH2 0x9D3 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x130A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2F DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC59 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCEB JUMPI PUSH2 0xCEB PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD0C PUSH2 0xCAF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD34 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD41 DUP3 DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD7C JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD65 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB2 JUMPI PUSH2 0xDB2 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC9 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1C DUP7 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 POP PUSH2 0xE2A PUSH1 0x20 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE53 DUP10 DUP4 DUP11 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP10 DUP4 DUP11 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE98 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEF1 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEFE DUP3 DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF34 DUP7 PUSH2 0xBB3 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF66 DUP6 DUP3 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF84 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDA DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1016 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1024 PUSH1 0x20 DUP5 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104E DUP7 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 POP PUSH2 0x105C PUSH1 0x20 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE98 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x110D JUMPI PUSH2 0x110D PUSH2 0x10E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11B6 JUMPI PUSH2 0x11B6 PUSH2 0x10E3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF70 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP6 PUSH2 0xF70 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1215 SWAP1 DUP4 ADD DUP7 PUSH2 0xF70 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1227 DUP2 DUP7 PUSH2 0xF70 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x123B DUP2 DUP6 PUSH2 0xC4F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC2F DUP2 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x127D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x128E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12BE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12F0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCC5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x138C SWAP1 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP16 SWAP14 CALL 0xEE ORIGIN 0x4A 0x4B PUSH23 0x7460499A290574CA76A79A06359DB5F493B1C07BD06DA3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "570:16550:2:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16550;;8171:86;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;570:16550::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:16550:2;;;-1:-1:-1;570:16550:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:12;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:12;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:12:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;570:16550:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1262": {
									"entryPoint": null,
									"id": 1262,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1418": {
									"entryPoint": 2733,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1243": {
									"entryPoint": null,
									"id": 1243,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1390": {
									"entryPoint": 2376,
									"id": 1390,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1325": {
									"entryPoint": 2808,
									"id": 1325,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1973": {
									"entryPoint": null,
									"id": 1973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_741": {
									"entryPoint": 1376,
									"id": 741,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_606": {
									"entryPoint": 2078,
									"id": 606,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1224": {
									"entryPoint": 1853,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_376": {
									"entryPoint": 928,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_312": {
									"entryPoint": 396,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1684": {
									"entryPoint": null,
									"id": 1684,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_489": {
									"entryPoint": 777,
									"id": 489,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_449": {
									"entryPoint": 1241,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_393": {
									"entryPoint": 1226,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2006": {
									"entryPoint": null,
									"id": 2006,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_272": {
									"entryPoint": 547,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_284": {
									"entryPoint": 629,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4585,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16327:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nodeType": "YulIf",
															"src": "289:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "192:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:12",
														"type": ""
													}
												],
												"src": "451:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:12"
															},
															"nodeType": "YulIf",
															"src": "687:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:12",
														"type": ""
													}
												],
												"src": "633:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:12"
															},
															"nodeType": "YulIf",
															"src": "848:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:12",
														"type": ""
													}
												],
												"src": "769:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:12",
														"type": ""
													}
												],
												"src": "1019:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:12"
															},
															"nodeType": "YulIf",
															"src": "1291:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:12",
														"type": ""
													}
												],
												"src": "1211:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:12",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:12",
																"statements": []
															},
															"src": "1538:162:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:12"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:12",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:12"
															},
															"nodeType": "YulIf",
															"src": "1709:87:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:12",
														"type": ""
													}
												],
												"src": "1396:472:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:12",
														"type": ""
													}
												],
												"src": "1873:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:12"
															},
															"nodeType": "YulIf",
															"src": "2354:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:12",
														"type": ""
													}
												],
												"src": "2230:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:12"
															},
															"nodeType": "YulIf",
															"src": "2563:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:12",
														"type": ""
													}
												],
												"src": "2484:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:12"
															},
															"nodeType": "YulIf",
															"src": "2746:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:12"
															},
															"nodeType": "YulIf",
															"src": "3145:35:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:12",
																"statements": []
															},
															"src": "3224:142:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:12",
														"type": ""
													}
												],
												"src": "2672:724:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:12"
															},
															"nodeType": "YulIf",
															"src": "3463:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:12"
															},
															"nodeType": "YulIf",
															"src": "3566:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:12",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:12"
															},
															"nodeType": "YulIf",
															"src": "3762:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:12",
														"type": ""
													}
												],
												"src": "3401:555:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:12"
															},
															"nodeType": "YulIf",
															"src": "4168:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:12"
															},
															"nodeType": "YulIf",
															"src": "4427:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:12"
															},
															"nodeType": "YulIf",
															"src": "4607:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:12"
															},
															"nodeType": "YulIf",
															"src": "4792:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:12",
														"type": ""
													}
												],
												"src": "3961:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:12"
															},
															"nodeType": "YulIf",
															"src": "5056:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:12"
															},
															"nodeType": "YulIf",
															"src": "5200:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:12"
															},
															"nodeType": "YulIf",
															"src": "5284:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:12"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:12"
															},
															"nodeType": "YulIf",
															"src": "5675:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:12",
																"statements": []
															},
															"src": "5754:148:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:12"
															},
															"nodeType": "YulIf",
															"src": "5993:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:12",
														"type": ""
													}
												],
												"src": "4909:1208:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:12",
																"statements": []
															},
															"src": "6363:169:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:12",
														"type": ""
													}
												],
												"src": "6122:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:12",
														"type": ""
													}
												],
												"src": "6562:261:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:12"
															},
															"nodeType": "YulIf",
															"src": "6922:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:12"
															},
															"nodeType": "YulIf",
															"src": "7085:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:12",
														"type": ""
													}
												],
												"src": "6828:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:12"
															},
															"nodeType": "YulIf",
															"src": "7277:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:12",
														"type": ""
													}
												],
												"src": "7180:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:12"
															},
															"nodeType": "YulIf",
															"src": "7602:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:12"
															},
															"nodeType": "YulIf",
															"src": "7927:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:12",
														"type": ""
													}
												],
												"src": "7445:606:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:12",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:12",
														"type": ""
													}
												],
												"src": "8056:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:12"
															},
															"nodeType": "YulIf",
															"src": "8611:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:12"
															},
															"nodeType": "YulIf",
															"src": "8681:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:12",
														"type": ""
													}
												],
												"src": "8468:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:12",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:12",
														"type": ""
													}
												],
												"src": "8853:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:12",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:12"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:12",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:12",
														"type": ""
													}
												],
												"src": "9272:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:12"
															},
															"nodeType": "YulIf",
															"src": "10003:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:12",
														"type": ""
													}
												],
												"src": "9946:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:12",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:12"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:12",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:12",
														"type": ""
													}
												],
												"src": "10086:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:12",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:12"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:12",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:12",
														"type": ""
													}
												],
												"src": "10496:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:12",
														"type": ""
													}
												],
												"src": "10905:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:12"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:12",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:12"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:12",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:12",
														"type": ""
													}
												],
												"src": "11311:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:12"
															},
															"nodeType": "YulIf",
															"src": "11780:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:12",
														"type": ""
													}
												],
												"src": "11722:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:12",
														"type": ""
													}
												],
												"src": "11855:465:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:12",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:12"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:12",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:12",
														"type": ""
													}
												],
												"src": "12325:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:12",
														"type": ""
													}
												],
												"src": "12735:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13319:496:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13329:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13333:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13502:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13516:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:57:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13506:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13609:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13641:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13655:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:44:12"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13645:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13748:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13794:6:12"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13776:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:33:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13267:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13275:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13283:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13291:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13299:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13310:4:12",
														"type": ""
													}
												],
												"src": "12988:827:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13946:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13955:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13958:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13948:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13921:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13917:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:32:12"
															},
															"nodeType": "YulIf",
															"src": "13910:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13971:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13984:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13975:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14033:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14009:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14058:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13866:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13877:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13889:6:12",
														"type": ""
													}
												],
												"src": "13820:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14162:85:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14191:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14194:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:12",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14176:14:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14176:23:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14176:23:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14212:25:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:3:12",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14234:1:12",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14228:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14228:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14219:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:12"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14133:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14130:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:23:12"
															},
															"nodeType": "YulIf",
															"src": "14127:120:12"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14109:3:12",
														"type": ""
													}
												],
												"src": "14074:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14305:624:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14347:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14321:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:4:12",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14318:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:26:12"
															},
															"nodeType": "YulIf",
															"src": "14315:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14363:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14375:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:9:12"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14367:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14393:16:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:6:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14397:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14446:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14446:16:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14442:25:12"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14418:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14477:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14497:4:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:11:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14481:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14511:26:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14521:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:16:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14515:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14546:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14556:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14550:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14632:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14634:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14589:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14612:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:4:12",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:17:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14627:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14605:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14605:25:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:45:12"
															},
															"nodeType": "YulIf",
															"src": "14583:58:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14650:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14665:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14671:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:17:12"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14654:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14687:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14701:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:10:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14691:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14738:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14740:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14734:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14723:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:14:12"
															},
															"nodeType": "YulIf",
															"src": "14720:27:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14829:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14831:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14770:3:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14775:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14766:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14766:16:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14784:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:27:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14799:4:12"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14805:14:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14805:16:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14795:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14795:27:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14824:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14791:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14791:36:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:69:12"
															},
															"nodeType": "YulIf",
															"src": "14756:82:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14867:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14881:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14889:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14877:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14877:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14898:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:30:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14847:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14913:10:12",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14920:3:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:12"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14297:3:12",
														"type": ""
													}
												],
												"src": "14258:671:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15108:242:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15125:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15118:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15214:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15269:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15280:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:18:12"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15285:22:12",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15258:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15258:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15258:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15317:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15329:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15317:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:12",
														"type": ""
													}
												],
												"src": "14934:416:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15546:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15591:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15576:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15569:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15569:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15569:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15630:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15615:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15615:18:12"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15635:34:12",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15608:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15608:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:12"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:10:12",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15506:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15520:4:12",
														"type": ""
													}
												],
												"src": "15355:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15995:330:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16005:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16015:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16009:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16125:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16165:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16138:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16138:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16138:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16203:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16208:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16246:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16231:19:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16252:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16224:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16265:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16303:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16314:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16273:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16265:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15932:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15943:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15951:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15959:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15967:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:12",
														"type": ""
													}
												],
												"src": "15764:561:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1092 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1092 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1114 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x948 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1114 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x850 DUP6 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85D DUP6 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DD SWAP1 DUP5 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93D DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xAF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA74 JUMPI PUSH2 0x9D3 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA0D JUMPI POP PUSH2 0x9E8 PUSH2 0x1280 JUMP JUMPDEST DUP1 PUSH2 0x9F3 JUMPI POP PUSH2 0xA0F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x130A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE7 JUMPI PUSH2 0xAE7 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB77 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB74 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB83 JUMPI PUSH2 0x9D3 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x130A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2F DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC59 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCEB JUMPI PUSH2 0xCEB PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD0C PUSH2 0xCAF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD34 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD41 DUP3 DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD7C JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD65 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB2 JUMPI PUSH2 0xDB2 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC9 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1C DUP7 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 POP PUSH2 0xE2A PUSH1 0x20 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE53 DUP10 DUP4 DUP11 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP10 DUP4 DUP11 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE98 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEF1 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEFE DUP3 DUP3 PUSH2 0xCC5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF34 DUP7 PUSH2 0xBB3 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF23 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF66 DUP6 DUP3 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF84 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDA DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1016 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1024 PUSH1 0x20 DUP5 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104E DUP7 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 POP PUSH2 0x105C PUSH1 0x20 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE98 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x110D JUMPI PUSH2 0x110D PUSH2 0x10E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11B6 JUMPI PUSH2 0x11B6 PUSH2 0x10E3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF70 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP6 PUSH2 0xF70 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1215 SWAP1 DUP4 ADD DUP7 PUSH2 0xF70 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1227 DUP2 DUP7 PUSH2 0xF70 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x123B DUP2 DUP6 PUSH2 0xC4F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC2F DUP2 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x127D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x128E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12BE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12F0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCC5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x138C SWAP1 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP16 SWAP14 CALL 0xEE ORIGIN 0x4A 0x4B PUSH23 0x7460499A290574CA76A79A06359DB5F493B1C07BD06DA3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "570:16550:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:12;;;585:2;570:18;2185:228:2;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:12;;1177:22;1159:41;;1147:2;1132:18;1236:305:2;1019:187:12;1940:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4060:430::-;;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3146:153::-;;;;;;:::i;:::-;;:::i;3366:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3488:27:2;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;2185:228::-;2271:7;-1:-1:-1;;;;;2298:21:2;;2290:77;;;;-1:-1:-1;;;2290:77:2;;8258:2:12;2290:77:2;;;8240:21:12;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:12;;;8380:41;8438:19;;2290:77:2;;;;;;;;;-1:-1:-1;2384:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2384:22:2;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:2;;-1:-1:-1;;;1373:41:2;;:109;;-1:-1:-1;;;;;;;1430:52:2;;-1:-1:-1;;;1430:52:2;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:2;1354:180;1236:305;-1:-1:-1;;1236:305:2:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;-1:-1:-1;;;;;4285:20:2;;719:10:8;4285:20:2;;:60;;-1:-1:-1;4309:36:2;4326:4;719:10:8;3366:166:2;:::i;4309:36::-;4264:157;;;;-1:-1:-1;;;4264:157:2;;9055:2:12;4264:157:2;;;9037:21:12;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:12;;;9177:48;9242:19;;4264:157:2;8853:414:12;4264:157:2;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;-1:-1:-1;;;2753:83:2;;9474:2:12;2753:83:2;;;9456:21:12;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:12;;;9596:39;9652:19;;2753:83:2;9272:405:12;2753:83:2;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:2;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:2;2570:508;-1:-1:-1;;;2570:508:2:o;3146:153::-;3240:52;719:10:8;3273:8:2;3283;3240:18;:52::i;:::-;3146:153;;:::o;3599:389::-;-1:-1:-1;;;;;3799:20:2;;719:10:8;3799:20:2;;:60;;-1:-1:-1;3823:36:2;3840:4;719:10:8;3366:166:2;:::i;3823:36::-;3778:148;;;;-1:-1:-1;;;3778:148:2;;10288:2:12;3778:148:2;;;10270:21:12;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:12;;;10410:39;10466:19;;3778:148:2;10086:405:12;3778:148:2;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:2;;10698:2:12;6431:81:2;;;10680:21:12;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:12;;;10820:38;10875:19;;6431:81:2;10496:404:12;6431:81:2;-1:-1:-1;;;;;6530:16:2;;6522:66;;;;-1:-1:-1;;;6522:66:2;;;;;;;:::i;:::-;719:10:8;6599:16:2;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:2;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:2;;;;6897:76;;;;-1:-1:-1;;;6897:76:2;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:2;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:2;7162:4;-1:-1:-1;;;;;7138:47:2;7152:8;-1:-1:-1;;;;;7138:47:2;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;-1:-1:-1;;;;;12914:17:2;:5;-1:-1:-1;;;;;12914:17:2;;;12906:71;;;;-1:-1:-1;;;12906:71:2;;12527:2:12;12906:71:2;;;12509:21:12;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:12;;;12649:39;12705:19;;12906:71:2;12325:405:12;12906:71:2;-1:-1:-1;;;;;12987:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12987:46:2;;;;;;;;;;13048:41;;1159::12;;;13048::2;;1132:18:12;13048:41:2;;;;;;;12773:323;;;:::o;4940:947::-;-1:-1:-1;;;;;5121:16:2;;5113:66;;;;-1:-1:-1;;;5113:66:2;;;;;;;:::i;:::-;719:10:8;5190:16:2;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:2;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:2;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:2;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:2;;;12909:25:12;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5685:46:2;;;;;;;;;;;;;;12882:18:12;5685:46:2;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;16127:792::-;-1:-1:-1;;;;;16359:13:2;;1465:19:7;:23;16355:558:2;;16394:79;;-1:-1:-1;;;16394:79:2;;-1:-1:-1;;;;;16394:43:2;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:2;;;;;;;;-1:-1:-1;;16394:79:2;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;-1:-1:-1;;;16772:14:2;;;;;;;;:::i;16390:513::-;;;16826:62;;-1:-1:-1;;;16826:62:2;;15136:2:12;16826:62:2;;;15118:21:12;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:12;;;15258:50;15325:19;;16826:62:2;14934:416:12;16390:513:2;-1:-1:-1;;;;;;16552:60:2;;-1:-1:-1;;;16552:60:2;16548:157;;16636:50;;-1:-1:-1;;;16636:50:2;;;;;;;:::i;16548:157::-;16474:245;16127:792;;;;;;:::o;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:2;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:2:o;15396:725::-;-1:-1:-1;;;;;15603:13:2;;1465:19:7;:23;15599:516:2;;15638:72;;-1:-1:-1;;;15638:72:2;;-1:-1:-1;;;;;15638:38:2;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:2;;;;;;;;-1:-1:-1;;15638:72:2;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;-1:-1:-1;;;;;;15759:55:2;;-1:-1:-1;;;15759:55:2;15755:152;;15838:50;;-1:-1:-1;;;15838:50:2;;;;;;;:::i;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;633:131::-;-1:-1:-1;;;;;;707:32:12;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:12:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:12;;1211:180;-1:-1:-1;1211:180:12:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:12;1829:15;-1:-1:-1;;1825:29:12;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:12:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:12;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:12:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:12;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:12;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:12;2672:724;-1:-1:-1;;;;;;2672:724:12:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:12;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:12:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:12;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:12;;5952:32;;-1:-1:-1;;5996:16:12;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:12;;6122:435;-1:-1:-1;;;;;6122:435:12:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;-1:-1:-1;;10006:17:12;;10003:43;;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:12;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:12;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:12;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:12;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:12:o;12988:827::-;-1:-1:-1;;;;;13385:15:12;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:12:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:12;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:12;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:12;;14258:671;-1:-1:-1;;;;;14258:671:12:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:12;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:12;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1013800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220319f9df1ee324a4b767460499a290574ca76a79a06359db5f493b1c07bd06da364736f6c634300080b0033",
									".code": [
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15148,
											"end": 15178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15214,
											"end": 15248,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15187,
											"end": 15249,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15258,
											"end": 15308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14934,
											"end": 15350,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16474,
											"end": 16719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13410,
											"end": 13453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13609,
											"end": 13631,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13604,
											"end": 13606,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13736,
											"end": 13758,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 13734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13708,
											"end": 13759,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13768,
											"end": 13809,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13921,
											"end": 13928,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13917,
											"end": 13940,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13913,
											"end": 13945,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 13960,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 14133,
											"end": 14149,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14130,
											"end": 14153,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14236,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14321,
											"end": 14337,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14344,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14446,
											"end": 14462,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14468,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14521,
											"end": 14537,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14556,
											"end": 14574,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14605,
											"end": 14630,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14589,
											"end": 14603,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14631,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14661,
											"end": 14678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14701,
											"end": 14711,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14723,
											"end": 14737,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14795,
											"end": 14822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14791,
											"end": 14827,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14770,
											"end": 14773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14762,
											"end": 14789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14759,
											"end": 14828,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 14898,
											"end": 14902,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14877,
											"end": 14896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14873,
											"end": 14903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15569,
											"end": 15599,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15635,
											"end": 15669,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15608,
											"end": 15670,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16086,
											"end": 16129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16160,
											"end": 16162,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16203,
											"end": 16205,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16265,
											"end": 16319,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 230,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x65283046c52a6bd3e57e456cc5eeab0dd86c00979b84495dc0109b609747fd16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae1aa0113f29cb099e7ff5c2b8f559ede5fc9a8f1d57746e5ecea8fff9157de\",\"dweb:/ipfs/QmQrymH5ACUZcoWYSYZTQTGM1xVEZpnuQce8etBWTB33xm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 230,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c02349ddc25f6f38480603821492f5ac7a235c8078ce37b2280245b29ef951564736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c02349ddc25f6f38480603821492f5ac7a235c8078ce37b2280245b29ef951564736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x2349DDC25F6F38480603821492F5AC7A235C8078CE37B2280245B29EF SWAP6 ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c02349ddc25f6f38480603821492f5ac7a235c8078ce37b2280245b29ef951564736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x2349DDC25F6F38480603821492F5AC7A235C8078CE37B2280245B29EF SWAP6 ISZERO PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c02349ddc25f6f38480603821492f5ac7a235c8078ce37b2280245b29ef951564736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HachiNFT.sol": {
				"ERC1155Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "thesidehustlersnft@gmail.com",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HachiNFT.sol\":366:1469  contract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HachiNFT.sol\":443:588  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0xa0\n  add\n  0x40\n  mstore\n  dup1\n  0x69\n  dup2\n  mstore\n  0x20\n  add\n  data_d7df789a1796f8a81c5300713ac4aba6df6782124a85e00084983604ce823747\n  0x69\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:988  _paused */\n  0x03\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/HachiNFT.sol\":366:1469  contract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_18\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/HachiNFT.sol\":366:1469  contract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {... */\ntag_19:\n  dup3\n  dup1\n  sload\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_25\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_28)\ntag_25:\n  dup3\n  0x1f\n  lt\n  tag_26\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_28)\ntag_26:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_28\n  jumpi\n  swap2\n  dup3\n  add\ntag_27:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_27)\ntag_28:\n  pop\n  tag_29\n  swap3\n  swap2\n  pop\n  tag_30\n  jump\t// in\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_30:\ntag_31:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_31)\n    /* \"#utility.yul\":14:394   */\ntag_23:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_35:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_36:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_33:\n    /* \"contracts/HachiNFT.sol\":366:1469  contract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_d7df789a1796f8a81c5300713ac4aba6df6782124a85e00084983604ce823747 68747470733a2f2f697066732e696f2f697066732f516d5136745a686138724d524531536a64666a5747445a6955727a5063526678784553444875514142625a4453383f66696c656e616d653d53696465487573746c65722532304261636b67726f756e642e706e67\n\nsub_0: assembly {\n        /* \"contracts/HachiNFT.sol\":366:1469  contract ERC1155Ownable is ERC1155, Ownable, Pausable, ERC1155Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b20c454\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x6b20c454\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x1f7fdffa\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/HachiNFT.sol\":594:681  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_6:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":991:1177  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_7:\n      tag_37\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_37\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":752:815  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_37\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_10:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      jump(tag_31)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n    tag_12:\n      tag_37\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_37\n      tag_71\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":821:985  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_14:\n      tag_37\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":687:746  function pause() public onlyOwner {... */\n    tag_15:\n      tag_37\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9653:9704   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9641:9643   */\n      0x20\n        /* \"#utility.yul\":9626:9644   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":9507:9710   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_17:\n      tag_37\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_31\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_19:\n      tag_37\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_37\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":393:703  function burn(... */\n    tag_21:\n      tag_37\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11663:11665   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11645:11666   */\n      mstore\n        /* \"#utility.yul\":11702:11704   */\n      0x2b\n        /* \"#utility.yul\":11682:11700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11675:11705   */\n      mstore\n        /* \"#utility.yul\":11741:11775   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":11721:11739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11714:11776   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":11792:11810   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11785:11826   */\n      mstore\n        /* \"#utility.yul\":11843:11862   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_108\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_110\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HachiNFT.sol\":594:681  function setURI(string memory newuri) public onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"contracts/HachiNFT.sol\":659:674  _setURI(newuri) */\n      tag_120\n        /* \"contracts/HachiNFT.sol\":667:673  newuri */\n      dup2\n        /* \"contracts/HachiNFT.sol\":659:666  _setURI */\n      tag_121\n        /* \"contracts/HachiNFT.sol\":659:674  _setURI(newuri) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/HachiNFT.sol\":594:681  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/HachiNFT.sol\":991:1177  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_132:\n        /* \"contracts/HachiNFT.sol\":1136:1170  _mintBatch(to, ids, amounts, data) */\n      tag_135\n        /* \"contracts/HachiNFT.sol\":1147:1149  to */\n      dup5\n        /* \"contracts/HachiNFT.sol\":1151:1154  ids */\n      dup5\n        /* \"contracts/HachiNFT.sol\":1156:1163  amounts */\n      dup5\n        /* \"contracts/HachiNFT.sol\":1165:1169  data */\n      dup5\n        /* \"contracts/HachiNFT.sol\":1136:1146  _mintBatch */\n      tag_136\n        /* \"contracts/HachiNFT.sol\":1136:1170  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/HachiNFT.sol\":991:1177  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_140\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12821:12823   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12803:12824   */\n      mstore\n        /* \"#utility.yul\":12860:12862   */\n      0x32\n        /* \"#utility.yul\":12840:12858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12833:12863   */\n      mstore\n        /* \"#utility.yul\":12899:12933   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":12879:12897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12872:12934   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12950:12968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12943:12991   */\n      mstore\n        /* \"#utility.yul\":13008:13027   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_105\n        /* \"#utility.yul\":12619:13033   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HachiNFT.sol\":752:815  function unpause() public onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_150:\n        /* \"contracts/HachiNFT.sol\":798:808  _unpause() */\n      tag_153\n        /* \"contracts/HachiNFT.sol\":798:806  _unpause */\n      tag_154\n        /* \"contracts/HachiNFT.sol\":798:808  _unpause() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/HachiNFT.sol\":752:815  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13240:13242   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13222:13243   */\n      mstore\n        /* \"#utility.yul\":13279:13281   */\n      0x29\n        /* \"#utility.yul\":13259:13277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13252:13282   */\n      mstore\n        /* \"#utility.yul\":13318:13352   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13298:13316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13291:13353   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13369:13387   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13362:13401   */\n      mstore\n        /* \"#utility.yul\":13418:13437   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_105\n        /* \"#utility.yul\":13038:13443   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_162:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_169\n      jump\t// in\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_28\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_169\n      jump\t// in\n    tag_173:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_174\n      dup2\n      tag_175\n      jump\t// in\n    tag_174:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_163)\n    tag_164:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:891  account == _msgSender() */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:891  account == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:934  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_180\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":895:934  isApprovedForAll(account, _msgSender()) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:919  account */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":895:934  isApprovedForAll(account, _msgSender()) */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:1001  require(... */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_184\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1044  _burnBatch(account, ids, values) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1023:1030  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1032:1035  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1037:1043  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1022  _burnBatch */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1044  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":821:985  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"contracts/HachiNFT.sol\":946:978  _mint(account, id, amount, data) */\n      tag_135\n        /* \"contracts/HachiNFT.sol\":952:959  account */\n      dup5\n        /* \"contracts/HachiNFT.sol\":961:963  id */\n      dup5\n        /* \"contracts/HachiNFT.sol\":965:971  amount */\n      dup5\n        /* \"contracts/HachiNFT.sol\":973:977  data */\n      dup5\n        /* \"contracts/HachiNFT.sol\":946:951  _mint */\n      tag_202\n        /* \"contracts/HachiNFT.sol\":946:978  _mint(account, id, amount, data) */\n      jump\t// in\n        /* \"contracts/HachiNFT.sol\":687:746  function pause() public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_206:\n        /* \"contracts/HachiNFT.sol\":731:739  _pause() */\n      tag_153\n        /* \"contracts/HachiNFT.sol\":731:737  _pause */\n      tag_210\n        /* \"contracts/HachiNFT.sol\":731:739  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_220\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_184\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_118\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14464:14466   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14446:14467   */\n      mstore\n        /* \"#utility.yul\":14503:14505   */\n      0x26\n        /* \"#utility.yul\":14483:14501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14476:14506   */\n      mstore\n        /* \"#utility.yul\":14542:14576   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14522:14540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14515:14577   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":14593:14611   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14586:14622   */\n      mstore\n        /* \"#utility.yul\":14639:14658   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_105\n        /* \"#utility.yul\":14262:14664   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":393:703  function burn(... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:550  account == _msgSender() */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:550  account == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:593  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_239\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":554:593  isApprovedForAll(account, _msgSender()) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:578  account */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":554:593  isApprovedForAll(account, _msgSender()) */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":506:660  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:696  _burn(account, id, value) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":677:684  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":686:688  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":690:695  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:676  _burn */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:696  _burn(account, id, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n      dup1\n      mload\n      tag_213\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n      0x02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_249\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9684:10475  function _mintBatch(... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9872  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9848:9910  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_253\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9942:9949  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9942:9956  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9928:9931  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9928:9938  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9928:9956  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_256\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10054:10120  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_258\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10012:10028  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10097:10099  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10101:10104  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10106:10113  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10115:10119  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10054:10074  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10054:10120  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10136:10145  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10131:10232  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10155:10158  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10155:10165  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10151:10152  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10151:10165  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10131:10232  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10211:10218  amounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10219:10220  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10211:10221  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_264\n      tag_169\n      jump\t// in\n    tag_264:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10195  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10203  _balances[ids[i]] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10196:10199  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10200:10201  i */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10196:10202  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_266\n      jumpi\n      tag_266\n      tag_169\n      jump\t// in\n    tag_266:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10203  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10207  _balances[ids[i]][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10204:10206  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10207  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10186:10221  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10167:10170  i++ */\n      dup2\n      swap1\n      pop\n      tag_269\n      dup2\n      tag_175\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10131:10232  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_260)\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10283:10285  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10247:10300  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10279:10280  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10247:10300  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10261:10269  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10247:10300  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10287:10290  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10292:10299  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10247:10300  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10387:10468  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10423:10431  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10441:10442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10445:10447  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10449:10452  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10454:10461  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10463:10467  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10387:10422  _doSafeBatchTransferAcceptanceCheck */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10387:10468  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_256\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_281\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_288\n      jumpi\n      tag_288\n      tag_169\n      jump\t// in\n    tag_288:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_290\n      jumpi\n      tag_290\n      tag_169\n      jump\t// in\n    tag_290:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_293\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_294\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_268\n      jump\t// in\n    tag_294:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_295\n      swap1\n      tag_175\n      jump\t// in\n    tag_295:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_284)\n    tag_285:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_296\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17102:17104   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17084:17105   */\n      mstore\n        /* \"#utility.yul\":17141:17143   */\n      0x14\n        /* \"#utility.yul\":17121:17139   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17114:17144   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":17160:17178   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17153:17203   */\n      mstore\n        /* \"#utility.yul\":17220:17238   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_105\n        /* \"#utility.yul\":16900:17244   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_301:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2175  _paused */\n      0x03\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_305:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9671:9703   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9653:9704   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9641:9643   */\n      0x20\n        /* \"#utility.yul\":9626:9644   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11695:12638  function _burnBatch(... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11842:11860  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11834:11900  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_310\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11932:11939  amounts */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11932:11946  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11918:11921  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11918:11928  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11918:11946  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11910:11991  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_256\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12002:12018  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12002:12033  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12044:12110  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12065:12073  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12075:12079  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12089:12090  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12093:12096  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12098:12105  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12044:12110  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12044:12064  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12044:12110  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12126:12135  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12121:12485  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12145:12148  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12145:12155  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12141:12142  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12141:12155  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12121:12485  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12176:12186  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12189:12192  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12193:12194  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12189:12195  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_319\n      tag_169\n      jump\t// in\n    tag_319:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12176:12195  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12209:12223  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12226:12233  amounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12234:12235  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12226:12236  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_321\n      tag_169\n      jump\t// in\n    tag_321:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12251:12270  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12273:12286  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12273:12292  _balances[id][from] */\n      dup13\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12226:12236  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12314:12335  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12306:12376  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_324\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12418:12427  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12418:12431  _balances[id] */\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12418:12437  _balances[id][from] */\n      dup12\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12440:12460  fromBalance - amount */\n      swap2\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12418:12460  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12157:12160  i++ */\n      dup1\n      tag_325\n      dup2\n      tag_175\n      jump\t// in\n    tag_325:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12121:12485  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_315)\n    tag_316:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12538:12539  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12500:12555  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12524:12528  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12500:12555  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12514:12522  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12500:12555  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12542:12545  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12547:12554  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12500:12555  TransferBatch(operator, from, address(0), ids, amounts) */\n      mload(0x40)\n      tag_326\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12566:12631  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12610:12611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12566:12631  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8630:9339  function _mint(... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8777:8793  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8769:8831  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_253\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8842:8858  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8927  _asSingletonArray(id) */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8924:8926  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8923  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8927  _asSingletonArray(id) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8883:8927  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8937:8961  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8989  _asSingletonArray(amount) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8982:8988  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8981  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8989  _asSingletonArray(amount) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8937:8989  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9000:9066  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9021:9029  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9039:9040  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9043:9045  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9047:9050  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9052:9059  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9061:9065  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9000:9020  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9000:9066  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9086  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9090  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9094  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9098:9104  amount */\n      dup8\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9086  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      tag_337\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9098:9104  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      tag_268\n      jump\t// in\n    tag_337:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18232:18257   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":18288:18290   */\n      0x20\n        /* \"#utility.yul\":18273:18291   */\n      dup2\n      add\n        /* \"#utility.yul\":18266:18300   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup11\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9152:9153  0 */\n      0x00\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup8\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18205:18223   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9332  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9289:9297  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9307:9308  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9311:9313  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9315:9317  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9319:9325  amount */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9327:9331  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9288  _doSafeTransferAcceptanceCheck */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9332  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8759:9339  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8630:9339  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18513:18515   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18495:18516   */\n      mstore\n        /* \"#utility.yul\":18552:18554   */\n      0x10\n        /* \"#utility.yul\":18532:18550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18525:18555   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":18571:18589   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18564:18610   */\n      mstore\n        /* \"#utility.yul\":18627:18645   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_105\n        /* \"#utility.yul\":18311:18651   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_345:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x03\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18858:18860   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18840:18861   */\n      mstore\n        /* \"#utility.yul\":18897:18899   */\n      0x29\n        /* \"#utility.yul\":18877:18895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18870:18900   */\n      mstore\n        /* \"#utility.yul\":18936:18970   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":18916:18934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18909:18971   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":18987:19005   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18980:19019   */\n      mstore\n        /* \"#utility.yul\":19036:19055   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_105\n        /* \"#utility.yul\":18656:19061   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_361\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_293\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_365\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_268\n      jump\t// in\n    tag_365:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18232:18257   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":18288:18290   */\n      0x20\n        /* \"#utility.yul\":18273:18291   */\n      dup2\n      add\n        /* \"#utility.yul\":18266:18300   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18205:18223   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10715:11501  function _burn(... */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10855  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10829:10895  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_310\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10906:10922  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10970:10991  _asSingletonArray(id) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10988:10990  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10970:10987  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10970:10991  _asSingletonArray(id) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10947:10991  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11001:11025  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11028:11053  _asSingletonArray(amount) */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11046:11052  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11028:11045  _asSingletonArray */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11028:11053  _asSingletonArray(amount) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11001:11053  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11064:11130  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11085:11093  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11095:11099  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11109:11110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11113:11116  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11118:11125  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11064:11130  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11064:11084  _beforeTokenTransfer */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11064:11130  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11141:11160  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11163:11176  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11163:11182  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11200:11221  fromBalance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11192:11262  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_324\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11296:11305  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11296:11309  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11296:11315  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11318:11338  fromBalance - amount */\n      dup11\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11296:11338  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11364:11418  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":18232:18257   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":18273:18291   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":18266:18300   */\n      dup11\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11296:11315  _balances[id][from] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11364:11418  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18205:18223   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11364:11418  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11429:11494  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11473:11474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11429:11494  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/HachiNFT.sol\":1183:1467  function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_259:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18513:18515   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18495:18516   */\n      mstore\n        /* \"#utility.yul\":18552:18554   */\n      0x10\n        /* \"#utility.yul\":18532:18550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18525:18555   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":18571:18589   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18564:18610   */\n      mstore\n        /* \"#utility.yul\":18627:18645   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_105\n        /* \"#utility.yul\":18311:18651   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_382:\n        /* \"contracts/HachiNFT.sol\":1394:1460  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_392\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_393\n      jump\t// in\n    tag_392:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_394\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_395\n      swap2\n      dup2\n      add\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      0x01\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_397\n      jumpi\n      tag_401\n      tag_402\n      jump\t// in\n    tag_401:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_400\n      jumpi\n      pop\n      tag_403\n      tag_404\n      jump\t// in\n    tag_403:\n      dup1\n      tag_405\n      jumpi\n      pop\n      jump(tag_399)\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_400:\n      pop\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21214:21216   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21196:21217   */\n      mstore\n        /* \"#utility.yul\":21253:21255   */\n      0x34\n        /* \"#utility.yul\":21233:21251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21226:21256   */\n      mstore\n        /* \"#utility.yul\":21292:21326   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":21272:21290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21265:21327   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":21343:21361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21336:21386   */\n      mstore\n        /* \"#utility.yul\":21403:21422   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_105\n        /* \"#utility.yul\":21012:21428   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_397:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_412\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_418\n      jumpi\n      tag_418\n      tag_169\n      jump\t// in\n    tag_418:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_422\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_423\n      jump\t// in\n    tag_422:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_424\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_425\n      swap2\n      dup2\n      add\n      swap1\n      tag_396\n      jump\t// in\n    tag_425:\n      0x01\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_426\n      jumpi\n      tag_401\n      tag_402\n      jump\t// in\n    tag_426:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_412\n      jump\t// in\n    tag_249:\n      dup3\n      dup1\n      sload\n      tag_440\n      swap1\n      tag_124\n      jump\t// in\n    tag_440:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_442\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_445)\n    tag_442:\n      dup3\n      0x1f\n      lt\n      tag_443\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_445)\n    tag_443:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_445\n      jumpi\n      swap2\n      dup3\n      add\n    tag_444:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_445\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_444)\n    tag_445:\n      pop\n      tag_446\n      swap3\n      swap2\n      pop\n      tag_447\n      jump\t// in\n    tag_446:\n      pop\n      swap1\n      jump\t// out\n    tag_447:\n    tag_448:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_446\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_448)\n        /* \"#utility.yul\":14:187   */\n    tag_450:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_462:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_27:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_464:\n        /* \"#utility.yul\":360:389   */\n      tag_465\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_450\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_451:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_33:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_470:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_471\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_451\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1338   */\n    tag_161:\n        /* \"#utility.yul\":1272:1282   */\n      0x4e487b71\n        /* \"#utility.yul\":1267:1270   */\n      0xe0\n        /* \"#utility.yul\":1263:1283   */\n      shl\n        /* \"#utility.yul\":1260:1261   */\n      0x00\n        /* \"#utility.yul\":1253:1284   */\n      mstore\n        /* \"#utility.yul\":1303:1307   */\n      0x41\n        /* \"#utility.yul\":1300:1301   */\n      0x04\n        /* \"#utility.yul\":1293:1308   */\n      mstore\n        /* \"#utility.yul\":1327:1331   */\n      0x24\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1317:1332   */\n      revert\n        /* \"#utility.yul\":1343:1592   */\n    tag_452:\n        /* \"#utility.yul\":1453:1455   */\n      0x1f\n        /* \"#utility.yul\":1434:1447   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1430:1457   */\n      and\n        /* \"#utility.yul\":1418:1458   */\n      dup2\n      add\n        /* \"#utility.yul\":1488:1506   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1473:1507   */\n      dup2\n      gt\n        /* \"#utility.yul\":1509:1531   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1470:1532   */\n      or\n        /* \"#utility.yul\":1467:1555   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":1535:1553   */\n      tag_476\n      tag_161\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1571:1573   */\n      0x40\n        /* \"#utility.yul\":1564:1586   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1343:1592   */\n      jump\t// out\n        /* \"#utility.yul\":1597:2066   */\n    tag_453:\n        /* \"#utility.yul\":1662:1667   */\n      0x00\n        /* \"#utility.yul\":1696:1714   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      gt\n        /* \"#utility.yul\":1682:1738   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":1718:1736   */\n      tag_479\n      tag_161\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1767:1769   */\n      0x40\n        /* \"#utility.yul\":1761:1770   */\n      mload\n        /* \"#utility.yul\":1779:1848   */\n      tag_480\n        /* \"#utility.yul\":1836:1838   */\n      0x1f\n        /* \"#utility.yul\":1815:1830   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1811:1840   */\n      and\n        /* \"#utility.yul\":1842:1846   */\n      0x20\n        /* \"#utility.yul\":1807:1847   */\n      add\n        /* \"#utility.yul\":1761:1770   */\n      dup3\n        /* \"#utility.yul\":1779:1848   */\n      tag_452\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1866:1872   */\n      dup1\n        /* \"#utility.yul\":1857:1872   */\n      swap2\n      pop\n        /* \"#utility.yul\":1896:1902   */\n      dup4\n        /* \"#utility.yul\":1888:1894   */\n      dup2\n        /* \"#utility.yul\":1881:1903   */\n      mstore\n        /* \"#utility.yul\":1936:1939   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup5\n        /* \"#utility.yul\":1922:1925   */\n      dup5\n        /* \"#utility.yul\":1918:1934   */\n      add\n        /* \"#utility.yul\":1915:1940   */\n      gt\n        /* \"#utility.yul\":1912:1957   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1950:1951   */\n      dup1\n        /* \"#utility.yul\":1943:1955   */\n      revert\n        /* \"#utility.yul\":1912:1957   */\n    tag_481:\n        /* \"#utility.yul\":2003:2009   */\n      dup4\n        /* \"#utility.yul\":1998:2001   */\n      dup4\n        /* \"#utility.yul\":1991:1995   */\n      0x20\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1979:1996   */\n      add\n        /* \"#utility.yul\":1966:2010   */\n      calldatacopy\n        /* \"#utility.yul\":2058:2059   */\n      0x00\n        /* \"#utility.yul\":2051:2055   */\n      0x20\n        /* \"#utility.yul\":2042:2048   */\n      dup6\n        /* \"#utility.yul\":2034:2040   */\n      dup4\n        /* \"#utility.yul\":2030:2049   */\n      add\n        /* \"#utility.yul\":2026:2056   */\n      add\n        /* \"#utility.yul\":2019:2060   */\n      mstore\n      pop\n        /* \"#utility.yul\":1597:2066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2071:2522   */\n    tag_39:\n        /* \"#utility.yul\":2140:2146   */\n      0x00\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2181:2190   */\n      dup3\n        /* \"#utility.yul\":2172:2179   */\n      dup5\n        /* \"#utility.yul\":2168:2191   */\n      sub\n        /* \"#utility.yul\":2164:2196   */\n      slt\n        /* \"#utility.yul\":2161:2213   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2209:2210   */\n      0x00\n        /* \"#utility.yul\":2206:2207   */\n      dup1\n        /* \"#utility.yul\":2199:2211   */\n      revert\n        /* \"#utility.yul\":2161:2213   */\n    tag_483:\n        /* \"#utility.yul\":2249:2258   */\n      dup2\n        /* \"#utility.yul\":2236:2259   */\n      calldataload\n        /* \"#utility.yul\":2282:2300   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2274:2280   */\n      dup2\n        /* \"#utility.yul\":2271:2301   */\n      gt\n        /* \"#utility.yul\":2268:2318   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2311:2312   */\n      dup1\n        /* \"#utility.yul\":2304:2316   */\n      revert\n        /* \"#utility.yul\":2268:2318   */\n    tag_484:\n        /* \"#utility.yul\":2337:2359   */\n      dup3\n      add\n        /* \"#utility.yul\":2390:2394   */\n      0x1f\n        /* \"#utility.yul\":2382:2395   */\n      dup2\n      add\n        /* \"#utility.yul\":2378:2405   */\n      dup5\n      sgt\n        /* \"#utility.yul\":2368:2423   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":2419:2420   */\n      0x00\n        /* \"#utility.yul\":2416:2417   */\n      dup1\n        /* \"#utility.yul\":2409:2421   */\n      revert\n        /* \"#utility.yul\":2368:2423   */\n    tag_485:\n        /* \"#utility.yul\":2442:2516   */\n      tag_486\n        /* \"#utility.yul\":2508:2515   */\n      dup5\n        /* \"#utility.yul\":2503:2505   */\n      dup3\n        /* \"#utility.yul\":2490:2506   */\n      calldataload\n        /* \"#utility.yul\":2485:2487   */\n      0x20\n        /* \"#utility.yul\":2481:2483   */\n      dup5\n        /* \"#utility.yul\":2477:2488   */\n      add\n        /* \"#utility.yul\":2442:2516   */\n      tag_453\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2432:2516   */\n      swap5\n        /* \"#utility.yul\":2071:2522   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2707   */\n    tag_43:\n        /* \"#utility.yul\":2586:2592   */\n      0x00\n        /* \"#utility.yul\":2639:2641   */\n      0x20\n        /* \"#utility.yul\":2627:2636   */\n      dup3\n        /* \"#utility.yul\":2618:2625   */\n      dup5\n        /* \"#utility.yul\":2614:2637   */\n      sub\n        /* \"#utility.yul\":2610:2642   */\n      slt\n        /* \"#utility.yul\":2607:2659   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":2655:2656   */\n      0x00\n        /* \"#utility.yul\":2652:2653   */\n      dup1\n        /* \"#utility.yul\":2645:2657   */\n      revert\n        /* \"#utility.yul\":2607:2659   */\n    tag_488:\n      pop\n        /* \"#utility.yul\":2678:2701   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2527:2707   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:3184   */\n    tag_454:\n        /* \"#utility.yul\":2754:2757   */\n      0x00\n        /* \"#utility.yul\":2792:2797   */\n      dup2\n        /* \"#utility.yul\":2786:2798   */\n      mload\n        /* \"#utility.yul\":2819:2825   */\n      dup1\n        /* \"#utility.yul\":2814:2817   */\n      dup5\n        /* \"#utility.yul\":2807:2826   */\n      mstore\n        /* \"#utility.yul\":2844:2845   */\n      0x00\n        /* \"#utility.yul\":2854:3016   */\n    tag_490:\n        /* \"#utility.yul\":2868:2874   */\n      dup2\n        /* \"#utility.yul\":2865:2866   */\n      dup2\n        /* \"#utility.yul\":2862:2875   */\n      lt\n        /* \"#utility.yul\":2854:3016   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":2930:2934   */\n      0x20\n        /* \"#utility.yul\":2986:2999   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":2982:3004   */\n      dup2\n      add\n        /* \"#utility.yul\":2976:3005   */\n      mload\n        /* \"#utility.yul\":2958:2969   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":2954:2974   */\n      dup3\n      add\n        /* \"#utility.yul\":2947:3006   */\n      mstore\n        /* \"#utility.yul\":2883:2895   */\n      add\n        /* \"#utility.yul\":2854:3016   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":3034:3040   */\n      dup2\n        /* \"#utility.yul\":3031:3032   */\n      dup2\n        /* \"#utility.yul\":3028:3041   */\n      gt\n        /* \"#utility.yul\":3025:3112   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":3100:3101   */\n      0x00\n        /* \"#utility.yul\":3093:3097   */\n      0x20\n        /* \"#utility.yul\":3084:3090   */\n      dup4\n        /* \"#utility.yul\":3079:3082   */\n      dup8\n        /* \"#utility.yul\":3075:3091   */\n      add\n        /* \"#utility.yul\":3071:3098   */\n      add\n        /* \"#utility.yul\":3064:3102   */\n      mstore\n        /* \"#utility.yul\":3025:3112   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":3166:3168   */\n      0x1f\n        /* \"#utility.yul\":3145:3160   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3141:3170   */\n      and\n        /* \"#utility.yul\":3132:3171   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3173:3177   */\n      0x20\n        /* \"#utility.yul\":3128:3178   */\n      add\n      swap3\n        /* \"#utility.yul\":2712:3184   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3189:3409   */\n    tag_46:\n        /* \"#utility.yul\":3338:3340   */\n      0x20\n        /* \"#utility.yul\":3327:3336   */\n      dup2\n        /* \"#utility.yul\":3320:3341   */\n      mstore\n        /* \"#utility.yul\":3301:3305   */\n      0x00\n        /* \"#utility.yul\":3358:3403   */\n      tag_471\n        /* \"#utility.yul\":3399:3401   */\n      0x20\n        /* \"#utility.yul\":3388:3397   */\n      dup4\n        /* \"#utility.yul\":3384:3402   */\n      add\n        /* \"#utility.yul\":3376:3382   */\n      dup5\n        /* \"#utility.yul\":3358:3403   */\n      tag_454\n      jump\t// in\n        /* \"#utility.yul\":3414:3597   */\n    tag_455:\n        /* \"#utility.yul\":3474:3478   */\n      0x00\n        /* \"#utility.yul\":3507:3525   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3499:3505   */\n      dup3\n        /* \"#utility.yul\":3496:3526   */\n      gt\n        /* \"#utility.yul\":3493:3549   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3529:3547   */\n      tag_498\n      tag_161\n      jump\t// in\n    tag_498:\n      pop\n        /* \"#utility.yul\":3574:3575   */\n      0x05\n        /* \"#utility.yul\":3570:3584   */\n      shl\n        /* \"#utility.yul\":3586:3590   */\n      0x20\n        /* \"#utility.yul\":3566:3591   */\n      add\n      swap1\n        /* \"#utility.yul\":3414:3597   */\n      jump\t// out\n        /* \"#utility.yul\":3602:4326   */\n    tag_456:\n        /* \"#utility.yul\":3656:3661   */\n      0x00\n        /* \"#utility.yul\":3709:3712   */\n      dup3\n        /* \"#utility.yul\":3702:3706   */\n      0x1f\n        /* \"#utility.yul\":3694:3700   */\n      dup4\n        /* \"#utility.yul\":3690:3707   */\n      add\n        /* \"#utility.yul\":3686:3713   */\n      slt\n        /* \"#utility.yul\":3676:3731   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3727:3728   */\n      0x00\n        /* \"#utility.yul\":3724:3725   */\n      dup1\n        /* \"#utility.yul\":3717:3729   */\n      revert\n        /* \"#utility.yul\":3676:3731   */\n    tag_500:\n        /* \"#utility.yul\":3763:3769   */\n      dup2\n        /* \"#utility.yul\":3750:3770   */\n      calldataload\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3812:3855   */\n      tag_501\n        /* \"#utility.yul\":3852:3854   */\n      dup3\n        /* \"#utility.yul\":3812:3855   */\n      tag_455\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3878:3887   */\n      mload\n        /* \"#utility.yul\":3896:3927   */\n      tag_502\n        /* \"#utility.yul\":3924:3926   */\n      dup3\n        /* \"#utility.yul\":3916:3922   */\n      dup3\n        /* \"#utility.yul\":3896:3927   */\n      tag_452\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3962:3980   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4054:4055   */\n      0x05\n        /* \"#utility.yul\":4050:4060   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":4038:4061   */\n      dup6\n      add\n        /* \"#utility.yul\":4034:4066   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3996:4011   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4078:4093   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4075:4110   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4106:4107   */\n      0x00\n        /* \"#utility.yul\":4103:4104   */\n      dup1\n        /* \"#utility.yul\":4096:4108   */\n      revert\n        /* \"#utility.yul\":4075:4110   */\n    tag_503:\n        /* \"#utility.yul\":4142:4144   */\n      dup3\n        /* \"#utility.yul\":4134:4140   */\n      dup7\n        /* \"#utility.yul\":4130:4145   */\n      add\n        /* \"#utility.yul\":4154:4296   */\n    tag_504:\n        /* \"#utility.yul\":4170:4176   */\n      dup5\n        /* \"#utility.yul\":4165:4168   */\n      dup2\n        /* \"#utility.yul\":4162:4177   */\n      lt\n        /* \"#utility.yul\":4154:4296   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":4236:4253   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4224:4254   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4274:4286   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4187:4199   */\n      dup4\n      add\n        /* \"#utility.yul\":4154:4296   */\n      jump(tag_504)\n    tag_506:\n      pop\n        /* \"#utility.yul\":4314:4320   */\n      swap7\n        /* \"#utility.yul\":3602:4326   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4331:4552   */\n    tag_457:\n        /* \"#utility.yul\":4373:4378   */\n      0x00\n        /* \"#utility.yul\":4426:4429   */\n      dup3\n        /* \"#utility.yul\":4419:4423   */\n      0x1f\n        /* \"#utility.yul\":4411:4417   */\n      dup4\n        /* \"#utility.yul\":4407:4424   */\n      add\n        /* \"#utility.yul\":4403:4430   */\n      slt\n        /* \"#utility.yul\":4393:4448   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":4444:4445   */\n      0x00\n        /* \"#utility.yul\":4441:4442   */\n      dup1\n        /* \"#utility.yul\":4434:4446   */\n      revert\n        /* \"#utility.yul\":4393:4448   */\n    tag_508:\n        /* \"#utility.yul\":4466:4546   */\n      tag_471\n        /* \"#utility.yul\":4542:4545   */\n      dup4\n        /* \"#utility.yul\":4533:4539   */\n      dup4\n        /* \"#utility.yul\":4520:4540   */\n      calldataload\n        /* \"#utility.yul\":4513:4517   */\n      0x20\n        /* \"#utility.yul\":4505:4511   */\n      dup6\n        /* \"#utility.yul\":4501:4518   */\n      add\n        /* \"#utility.yul\":4466:4546   */\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":4557:5425   */\n    tag_49:\n        /* \"#utility.yul\":4702:4708   */\n      0x00\n        /* \"#utility.yul\":4710:4716   */\n      dup1\n        /* \"#utility.yul\":4718:4724   */\n      0x00\n        /* \"#utility.yul\":4726:4732   */\n      dup1\n        /* \"#utility.yul\":4779:4782   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup6\n        /* \"#utility.yul\":4758:4765   */\n      dup8\n        /* \"#utility.yul\":4754:4777   */\n      sub\n        /* \"#utility.yul\":4750:4783   */\n      slt\n        /* \"#utility.yul\":4747:4800   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":4796:4797   */\n      0x00\n        /* \"#utility.yul\":4793:4794   */\n      dup1\n        /* \"#utility.yul\":4786:4798   */\n      revert\n        /* \"#utility.yul\":4747:4800   */\n    tag_511:\n        /* \"#utility.yul\":4819:4848   */\n      tag_512\n        /* \"#utility.yul\":4838:4847   */\n      dup6\n        /* \"#utility.yul\":4819:4848   */\n      tag_450\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4809:4848   */\n      swap4\n      pop\n        /* \"#utility.yul\":4899:4901   */\n      0x20\n        /* \"#utility.yul\":4888:4897   */\n      dup6\n        /* \"#utility.yul\":4884:4902   */\n      add\n        /* \"#utility.yul\":4871:4903   */\n      calldataload\n        /* \"#utility.yul\":4922:4940   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4963:4965   */\n      dup1\n        /* \"#utility.yul\":4955:4961   */\n      dup3\n        /* \"#utility.yul\":4952:4966   */\n      gt\n        /* \"#utility.yul\":4949:4983   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":4979:4980   */\n      0x00\n        /* \"#utility.yul\":4976:4977   */\n      dup1\n        /* \"#utility.yul\":4969:4981   */\n      revert\n        /* \"#utility.yul\":4949:4983   */\n    tag_513:\n        /* \"#utility.yul\":5002:5063   */\n      tag_514\n        /* \"#utility.yul\":5055:5062   */\n      dup9\n        /* \"#utility.yul\":5046:5052   */\n      dup4\n        /* \"#utility.yul\":5035:5044   */\n      dup10\n        /* \"#utility.yul\":5031:5053   */\n      add\n        /* \"#utility.yul\":5002:5063   */\n      tag_456\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4992:5063   */\n      swap5\n      pop\n        /* \"#utility.yul\":5116:5118   */\n      0x40\n        /* \"#utility.yul\":5105:5114   */\n      dup8\n        /* \"#utility.yul\":5101:5119   */\n      add\n        /* \"#utility.yul\":5088:5120   */\n      calldataload\n        /* \"#utility.yul\":5072:5120   */\n      swap2\n      pop\n        /* \"#utility.yul\":5145:5147   */\n      dup1\n        /* \"#utility.yul\":5135:5143   */\n      dup3\n        /* \"#utility.yul\":5132:5148   */\n      gt\n        /* \"#utility.yul\":5129:5165   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5161:5162   */\n      0x00\n        /* \"#utility.yul\":5158:5159   */\n      dup1\n        /* \"#utility.yul\":5151:5163   */\n      revert\n        /* \"#utility.yul\":5129:5165   */\n    tag_515:\n        /* \"#utility.yul\":5184:5247   */\n      tag_516\n        /* \"#utility.yul\":5239:5246   */\n      dup9\n        /* \"#utility.yul\":5228:5236   */\n      dup4\n        /* \"#utility.yul\":5217:5226   */\n      dup10\n        /* \"#utility.yul\":5213:5237   */\n      add\n        /* \"#utility.yul\":5184:5247   */\n      tag_456\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5174:5247   */\n      swap4\n      pop\n        /* \"#utility.yul\":5300:5302   */\n      0x60\n        /* \"#utility.yul\":5289:5298   */\n      dup8\n        /* \"#utility.yul\":5285:5303   */\n      add\n        /* \"#utility.yul\":5272:5304   */\n      calldataload\n        /* \"#utility.yul\":5256:5304   */\n      swap2\n      pop\n        /* \"#utility.yul\":5329:5331   */\n      dup1\n        /* \"#utility.yul\":5319:5327   */\n      dup3\n        /* \"#utility.yul\":5316:5332   */\n      gt\n        /* \"#utility.yul\":5313:5349   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":5345:5346   */\n      0x00\n        /* \"#utility.yul\":5342:5343   */\n      dup1\n        /* \"#utility.yul\":5335:5347   */\n      revert\n        /* \"#utility.yul\":5313:5349   */\n    tag_517:\n      pop\n        /* \"#utility.yul\":5368:5419   */\n      tag_518\n        /* \"#utility.yul\":5411:5418   */\n      dup8\n        /* \"#utility.yul\":5400:5408   */\n      dup3\n        /* \"#utility.yul\":5389:5398   */\n      dup9\n        /* \"#utility.yul\":5385:5409   */\n      add\n        /* \"#utility.yul\":5368:5419   */\n      tag_457\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5358:5419   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4557:5425   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:6373   */\n    tag_53:\n        /* \"#utility.yul\":5584:5590   */\n      0x00\n        /* \"#utility.yul\":5592:5598   */\n      dup1\n        /* \"#utility.yul\":5600:5606   */\n      0x00\n        /* \"#utility.yul\":5608:5614   */\n      dup1\n        /* \"#utility.yul\":5616:5622   */\n      0x00\n        /* \"#utility.yul\":5669:5672   */\n      0xa0\n        /* \"#utility.yul\":5657:5666   */\n      dup7\n        /* \"#utility.yul\":5648:5655   */\n      dup9\n        /* \"#utility.yul\":5644:5667   */\n      sub\n        /* \"#utility.yul\":5640:5673   */\n      slt\n        /* \"#utility.yul\":5637:5690   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5686:5687   */\n      0x00\n        /* \"#utility.yul\":5683:5684   */\n      dup1\n        /* \"#utility.yul\":5676:5688   */\n      revert\n        /* \"#utility.yul\":5637:5690   */\n    tag_520:\n        /* \"#utility.yul\":5709:5738   */\n      tag_521\n        /* \"#utility.yul\":5728:5737   */\n      dup7\n        /* \"#utility.yul\":5709:5738   */\n      tag_450\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5699:5738   */\n      swap5\n      pop\n        /* \"#utility.yul\":5757:5795   */\n      tag_522\n        /* \"#utility.yul\":5791:5793   */\n      0x20\n        /* \"#utility.yul\":5780:5789   */\n      dup8\n        /* \"#utility.yul\":5776:5794   */\n      add\n        /* \"#utility.yul\":5757:5795   */\n      tag_450\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5747:5795   */\n      swap4\n      pop\n        /* \"#utility.yul\":5846:5848   */\n      0x40\n        /* \"#utility.yul\":5835:5844   */\n      dup7\n        /* \"#utility.yul\":5831:5849   */\n      add\n        /* \"#utility.yul\":5818:5850   */\n      calldataload\n        /* \"#utility.yul\":5869:5887   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5910:5912   */\n      dup1\n        /* \"#utility.yul\":5902:5908   */\n      dup3\n        /* \"#utility.yul\":5899:5913   */\n      gt\n        /* \"#utility.yul\":5896:5930   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":5926:5927   */\n      0x00\n        /* \"#utility.yul\":5923:5924   */\n      dup1\n        /* \"#utility.yul\":5916:5928   */\n      revert\n        /* \"#utility.yul\":5896:5930   */\n    tag_523:\n        /* \"#utility.yul\":5949:6010   */\n      tag_524\n        /* \"#utility.yul\":6002:6009   */\n      dup10\n        /* \"#utility.yul\":5993:5999   */\n      dup4\n        /* \"#utility.yul\":5982:5991   */\n      dup11\n        /* \"#utility.yul\":5978:6000   */\n      add\n        /* \"#utility.yul\":5949:6010   */\n      tag_456\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":5939:6010   */\n      swap5\n      pop\n        /* \"#utility.yul\":6063:6065   */\n      0x60\n        /* \"#utility.yul\":6052:6061   */\n      dup9\n        /* \"#utility.yul\":6048:6066   */\n      add\n        /* \"#utility.yul\":6035:6067   */\n      calldataload\n        /* \"#utility.yul\":6019:6067   */\n      swap2\n      pop\n        /* \"#utility.yul\":6092:6094   */\n      dup1\n        /* \"#utility.yul\":6082:6090   */\n      dup3\n        /* \"#utility.yul\":6079:6095   */\n      gt\n        /* \"#utility.yul\":6076:6112   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":6108:6109   */\n      0x00\n        /* \"#utility.yul\":6105:6106   */\n      dup1\n        /* \"#utility.yul\":6098:6110   */\n      revert\n        /* \"#utility.yul\":6076:6112   */\n    tag_525:\n        /* \"#utility.yul\":6131:6194   */\n      tag_526\n        /* \"#utility.yul\":6186:6193   */\n      dup10\n        /* \"#utility.yul\":6175:6183   */\n      dup4\n        /* \"#utility.yul\":6164:6173   */\n      dup11\n        /* \"#utility.yul\":6160:6184   */\n      add\n        /* \"#utility.yul\":6131:6194   */\n      tag_456\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6121:6194   */\n      swap4\n      pop\n        /* \"#utility.yul\":6247:6250   */\n      0x80\n        /* \"#utility.yul\":6236:6245   */\n      dup9\n        /* \"#utility.yul\":6232:6251   */\n      add\n        /* \"#utility.yul\":6219:6252   */\n      calldataload\n        /* \"#utility.yul\":6203:6252   */\n      swap2\n      pop\n        /* \"#utility.yul\":6277:6279   */\n      dup1\n        /* \"#utility.yul\":6267:6275   */\n      dup3\n        /* \"#utility.yul\":6264:6280   */\n      gt\n        /* \"#utility.yul\":6261:6297   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6290:6291   */\n      dup1\n        /* \"#utility.yul\":6283:6295   */\n      revert\n        /* \"#utility.yul\":6261:6297   */\n    tag_527:\n      pop\n        /* \"#utility.yul\":6316:6367   */\n      tag_528\n        /* \"#utility.yul\":6359:6366   */\n      dup9\n        /* \"#utility.yul\":6348:6356   */\n      dup3\n        /* \"#utility.yul\":6337:6346   */\n      dup10\n        /* \"#utility.yul\":6333:6357   */\n      add\n        /* \"#utility.yul\":6316:6367   */\n      tag_457\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6306:6367   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5430:6373   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6378:7586   */\n    tag_59:\n        /* \"#utility.yul\":6496:6502   */\n      0x00\n        /* \"#utility.yul\":6504:6510   */\n      dup1\n        /* \"#utility.yul\":6557:6559   */\n      0x40\n        /* \"#utility.yul\":6545:6554   */\n      dup4\n        /* \"#utility.yul\":6536:6543   */\n      dup6\n        /* \"#utility.yul\":6532:6555   */\n      sub\n        /* \"#utility.yul\":6528:6560   */\n      slt\n        /* \"#utility.yul\":6525:6577   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":6573:6574   */\n      0x00\n        /* \"#utility.yul\":6570:6571   */\n      dup1\n        /* \"#utility.yul\":6563:6575   */\n      revert\n        /* \"#utility.yul\":6525:6577   */\n    tag_530:\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6600:6623   */\n      calldataload\n        /* \"#utility.yul\":6642:6660   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6683:6685   */\n      dup1\n        /* \"#utility.yul\":6675:6681   */\n      dup3\n        /* \"#utility.yul\":6672:6686   */\n      gt\n        /* \"#utility.yul\":6669:6703   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6696:6697   */\n      dup1\n        /* \"#utility.yul\":6689:6701   */\n      revert\n        /* \"#utility.yul\":6669:6703   */\n    tag_531:\n        /* \"#utility.yul\":6737:6743   */\n      dup2\n        /* \"#utility.yul\":6726:6735   */\n      dup6\n        /* \"#utility.yul\":6722:6744   */\n      add\n        /* \"#utility.yul\":6712:6744   */\n      swap2\n      pop\n        /* \"#utility.yul\":6782:6789   */\n      dup6\n        /* \"#utility.yul\":6775:6779   */\n      0x1f\n        /* \"#utility.yul\":6771:6773   */\n      dup4\n        /* \"#utility.yul\":6767:6780   */\n      add\n        /* \"#utility.yul\":6763:6790   */\n      slt\n        /* \"#utility.yul\":6753:6808   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":6804:6805   */\n      0x00\n        /* \"#utility.yul\":6801:6802   */\n      dup1\n        /* \"#utility.yul\":6794:6806   */\n      revert\n        /* \"#utility.yul\":6753:6808   */\n    tag_532:\n        /* \"#utility.yul\":6840:6842   */\n      dup2\n        /* \"#utility.yul\":6827:6843   */\n      calldataload\n        /* \"#utility.yul\":6862:6866   */\n      0x20\n        /* \"#utility.yul\":6885:6928   */\n      tag_533\n        /* \"#utility.yul\":6925:6927   */\n      dup3\n        /* \"#utility.yul\":6885:6928   */\n      tag_455\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6957:6959   */\n      0x40\n        /* \"#utility.yul\":6951:6960   */\n      mload\n        /* \"#utility.yul\":6969:7000   */\n      tag_534\n        /* \"#utility.yul\":6997:6999   */\n      dup3\n        /* \"#utility.yul\":6989:6995   */\n      dup3\n        /* \"#utility.yul\":6969:7000   */\n      tag_452\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7035:7053   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":7123:7124   */\n      0x05\n        /* \"#utility.yul\":7119:7129   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":7111:7130   */\n      dup6\n      add\n        /* \"#utility.yul\":7107:7135   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":7069:7084   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":7147:7166   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":7144:7183   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":7179:7180   */\n      0x00\n        /* \"#utility.yul\":7176:7177   */\n      dup1\n        /* \"#utility.yul\":7169:7181   */\n      revert\n        /* \"#utility.yul\":7144:7183   */\n    tag_535:\n        /* \"#utility.yul\":7203:7214   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7223:7371   */\n    tag_536:\n        /* \"#utility.yul\":7239:7245   */\n      dup4\n        /* \"#utility.yul\":7234:7237   */\n      dup7\n        /* \"#utility.yul\":7231:7246   */\n      lt\n        /* \"#utility.yul\":7223:7371   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":7305:7328   */\n      tag_539\n        /* \"#utility.yul\":7324:7327   */\n      dup7\n        /* \"#utility.yul\":7305:7328   */\n      tag_450\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7293:7329   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7256:7268   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7349:7361   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7223:7371   */\n      jump(tag_536)\n    tag_538:\n        /* \"#utility.yul\":7390:7396   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":7434:7452   */\n      dup7\n      add\n        /* \"#utility.yul\":7421:7453   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7465:7481   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7462:7498   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":7494:7495   */\n      0x00\n        /* \"#utility.yul\":7491:7492   */\n      dup1\n        /* \"#utility.yul\":7484:7496   */\n      revert\n        /* \"#utility.yul\":7462:7498   */\n    tag_540:\n      pop\n        /* \"#utility.yul\":7517:7580   */\n      tag_541\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7561:7569   */\n      dup3\n        /* \"#utility.yul\":7550:7559   */\n      dup7\n        /* \"#utility.yul\":7546:7570   */\n      add\n        /* \"#utility.yul\":7517:7580   */\n      tag_456\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7507:7580   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6378:7586   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7591:8026   */\n    tag_458:\n        /* \"#utility.yul\":7644:7647   */\n      0x00\n        /* \"#utility.yul\":7682:7687   */\n      dup2\n        /* \"#utility.yul\":7676:7688   */\n      mload\n        /* \"#utility.yul\":7709:7715   */\n      dup1\n        /* \"#utility.yul\":7704:7707   */\n      dup5\n        /* \"#utility.yul\":7697:7716   */\n      mstore\n        /* \"#utility.yul\":7735:7739   */\n      0x20\n        /* \"#utility.yul\":7764:7766   */\n      dup1\n        /* \"#utility.yul\":7759:7762   */\n      dup6\n        /* \"#utility.yul\":7755:7767   */\n      add\n        /* \"#utility.yul\":7748:7767   */\n      swap5\n      pop\n        /* \"#utility.yul\":7801:7803   */\n      dup1\n        /* \"#utility.yul\":7794:7799   */\n      dup5\n        /* \"#utility.yul\":7790:7804   */\n      add\n        /* \"#utility.yul\":7822:7823   */\n      0x00\n        /* \"#utility.yul\":7832:8001   */\n    tag_543:\n        /* \"#utility.yul\":7846:7852   */\n      dup4\n        /* \"#utility.yul\":7843:7844   */\n      dup2\n        /* \"#utility.yul\":7840:7853   */\n      lt\n        /* \"#utility.yul\":7832:8001   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":7907:7920   */\n      dup2\n      mload\n        /* \"#utility.yul\":7895:7921   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7941:7953   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7976:7991   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7868:7869   */\n      0x01\n        /* \"#utility.yul\":7861:7870   */\n      add\n        /* \"#utility.yul\":7832:8001   */\n      jump(tag_543)\n    tag_545:\n      pop\n        /* \"#utility.yul\":8017:8020   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7591:8026   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8031:8292   */\n    tag_62:\n        /* \"#utility.yul\":8210:8212   */\n      0x20\n        /* \"#utility.yul\":8199:8208   */\n      dup2\n        /* \"#utility.yul\":8192:8213   */\n      mstore\n        /* \"#utility.yul\":8173:8177   */\n      0x00\n        /* \"#utility.yul\":8230:8286   */\n      tag_471\n        /* \"#utility.yul\":8282:8284   */\n      0x20\n        /* \"#utility.yul\":8271:8280   */\n      dup4\n        /* \"#utility.yul\":8267:8285   */\n      add\n        /* \"#utility.yul\":8259:8265   */\n      dup5\n        /* \"#utility.yul\":8230:8286   */\n      tag_458\n      jump\t// in\n        /* \"#utility.yul\":8297:8966   */\n    tag_68:\n        /* \"#utility.yul\":8424:8430   */\n      0x00\n        /* \"#utility.yul\":8432:8438   */\n      dup1\n        /* \"#utility.yul\":8440:8446   */\n      0x00\n        /* \"#utility.yul\":8493:8495   */\n      0x60\n        /* \"#utility.yul\":8481:8490   */\n      dup5\n        /* \"#utility.yul\":8472:8479   */\n      dup7\n        /* \"#utility.yul\":8468:8491   */\n      sub\n        /* \"#utility.yul\":8464:8496   */\n      slt\n        /* \"#utility.yul\":8461:8513   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":8509:8510   */\n      0x00\n        /* \"#utility.yul\":8506:8507   */\n      dup1\n        /* \"#utility.yul\":8499:8511   */\n      revert\n        /* \"#utility.yul\":8461:8513   */\n    tag_549:\n        /* \"#utility.yul\":8532:8561   */\n      tag_550\n        /* \"#utility.yul\":8551:8560   */\n      dup5\n        /* \"#utility.yul\":8532:8561   */\n      tag_450\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":8522:8561   */\n      swap3\n      pop\n        /* \"#utility.yul\":8612:8614   */\n      0x20\n        /* \"#utility.yul\":8601:8610   */\n      dup5\n        /* \"#utility.yul\":8597:8615   */\n      add\n        /* \"#utility.yul\":8584:8616   */\n      calldataload\n        /* \"#utility.yul\":8635:8653   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8676:8678   */\n      dup1\n        /* \"#utility.yul\":8668:8674   */\n      dup3\n        /* \"#utility.yul\":8665:8679   */\n      gt\n        /* \"#utility.yul\":8662:8696   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":8692:8693   */\n      0x00\n        /* \"#utility.yul\":8689:8690   */\n      dup1\n        /* \"#utility.yul\":8682:8694   */\n      revert\n        /* \"#utility.yul\":8662:8696   */\n    tag_551:\n        /* \"#utility.yul\":8715:8776   */\n      tag_552\n        /* \"#utility.yul\":8768:8775   */\n      dup8\n        /* \"#utility.yul\":8759:8765   */\n      dup4\n        /* \"#utility.yul\":8748:8757   */\n      dup9\n        /* \"#utility.yul\":8744:8766   */\n      add\n        /* \"#utility.yul\":8715:8776   */\n      tag_456\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8705:8776   */\n      swap4\n      pop\n        /* \"#utility.yul\":8829:8831   */\n      0x40\n        /* \"#utility.yul\":8818:8827   */\n      dup7\n        /* \"#utility.yul\":8814:8832   */\n      add\n        /* \"#utility.yul\":8801:8833   */\n      calldataload\n        /* \"#utility.yul\":8785:8833   */\n      swap2\n      pop\n        /* \"#utility.yul\":8858:8860   */\n      dup1\n        /* \"#utility.yul\":8848:8856   */\n      dup3\n        /* \"#utility.yul\":8845:8861   */\n      gt\n        /* \"#utility.yul\":8842:8878   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":8874:8875   */\n      0x00\n        /* \"#utility.yul\":8871:8872   */\n      dup1\n        /* \"#utility.yul\":8864:8876   */\n      revert\n        /* \"#utility.yul\":8842:8878   */\n    tag_553:\n      pop\n        /* \"#utility.yul\":8897:8960   */\n      tag_554\n        /* \"#utility.yul\":8952:8959   */\n      dup7\n        /* \"#utility.yul\":8941:8949   */\n      dup3\n        /* \"#utility.yul\":8930:8939   */\n      dup8\n        /* \"#utility.yul\":8926:8950   */\n      add\n        /* \"#utility.yul\":8897:8960   */\n      tag_456\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8887:8960   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8297:8966   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8971:9502   */\n    tag_74:\n        /* \"#utility.yul\":9066:9072   */\n      0x00\n        /* \"#utility.yul\":9074:9080   */\n      dup1\n        /* \"#utility.yul\":9082:9088   */\n      0x00\n        /* \"#utility.yul\":9090:9096   */\n      dup1\n        /* \"#utility.yul\":9143:9146   */\n      0x80\n        /* \"#utility.yul\":9131:9140   */\n      dup6\n        /* \"#utility.yul\":9122:9129   */\n      dup8\n        /* \"#utility.yul\":9118:9141   */\n      sub\n        /* \"#utility.yul\":9114:9147   */\n      slt\n        /* \"#utility.yul\":9111:9164   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":9160:9161   */\n      0x00\n        /* \"#utility.yul\":9157:9158   */\n      dup1\n        /* \"#utility.yul\":9150:9162   */\n      revert\n        /* \"#utility.yul\":9111:9164   */\n    tag_556:\n        /* \"#utility.yul\":9183:9212   */\n      tag_557\n        /* \"#utility.yul\":9202:9211   */\n      dup6\n        /* \"#utility.yul\":9183:9212   */\n      tag_450\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9173:9212   */\n      swap4\n      pop\n        /* \"#utility.yul\":9259:9261   */\n      0x20\n        /* \"#utility.yul\":9248:9257   */\n      dup6\n        /* \"#utility.yul\":9244:9262   */\n      add\n        /* \"#utility.yul\":9231:9263   */\n      calldataload\n        /* \"#utility.yul\":9221:9263   */\n      swap3\n      pop\n        /* \"#utility.yul\":9310:9312   */\n      0x40\n        /* \"#utility.yul\":9299:9308   */\n      dup6\n        /* \"#utility.yul\":9295:9313   */\n      add\n        /* \"#utility.yul\":9282:9314   */\n      calldataload\n        /* \"#utility.yul\":9272:9314   */\n      swap2\n      pop\n        /* \"#utility.yul\":9365:9367   */\n      0x60\n        /* \"#utility.yul\":9354:9363   */\n      dup6\n        /* \"#utility.yul\":9350:9368   */\n      add\n        /* \"#utility.yul\":9337:9369   */\n      calldataload\n        /* \"#utility.yul\":9392:9410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9384:9390   */\n      dup2\n        /* \"#utility.yul\":9381:9411   */\n      gt\n        /* \"#utility.yul\":9378:9428   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":9424:9425   */\n      0x00\n        /* \"#utility.yul\":9421:9422   */\n      dup1\n        /* \"#utility.yul\":9414:9426   */\n      revert\n        /* \"#utility.yul\":9378:9428   */\n    tag_558:\n        /* \"#utility.yul\":9447:9496   */\n      tag_518\n        /* \"#utility.yul\":9488:9495   */\n      dup8\n        /* \"#utility.yul\":9479:9485   */\n      dup3\n        /* \"#utility.yul\":9468:9477   */\n      dup9\n        /* \"#utility.yul\":9464:9486   */\n      add\n        /* \"#utility.yul\":9447:9496   */\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":9715:10062   */\n    tag_84:\n        /* \"#utility.yul\":9780:9786   */\n      0x00\n        /* \"#utility.yul\":9788:9794   */\n      dup1\n        /* \"#utility.yul\":9841:9843   */\n      0x40\n        /* \"#utility.yul\":9829:9838   */\n      dup4\n        /* \"#utility.yul\":9820:9827   */\n      dup6\n        /* \"#utility.yul\":9816:9839   */\n      sub\n        /* \"#utility.yul\":9812:9844   */\n      slt\n        /* \"#utility.yul\":9809:9861   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9854:9855   */\n      dup1\n        /* \"#utility.yul\":9847:9859   */\n      revert\n        /* \"#utility.yul\":9809:9861   */\n    tag_562:\n        /* \"#utility.yul\":9880:9909   */\n      tag_563\n        /* \"#utility.yul\":9899:9908   */\n      dup4\n        /* \"#utility.yul\":9880:9909   */\n      tag_450\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9870:9909   */\n      swap2\n      pop\n        /* \"#utility.yul\":9959:9961   */\n      0x20\n        /* \"#utility.yul\":9948:9957   */\n      dup4\n        /* \"#utility.yul\":9944:9962   */\n      add\n        /* \"#utility.yul\":9931:9963   */\n      calldataload\n        /* \"#utility.yul\":10006:10011   */\n      dup1\n        /* \"#utility.yul\":9999:10012   */\n      iszero\n        /* \"#utility.yul\":9992:10013   */\n      iszero\n        /* \"#utility.yul\":9985:9990   */\n      dup2\n        /* \"#utility.yul\":9982:10014   */\n      eq\n        /* \"#utility.yul\":9972:10032   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":10028:10029   */\n      0x00\n        /* \"#utility.yul\":10025:10026   */\n      dup1\n        /* \"#utility.yul\":10018:10030   */\n      revert\n        /* \"#utility.yul\":9972:10032   */\n    tag_564:\n        /* \"#utility.yul\":10051:10056   */\n      dup1\n        /* \"#utility.yul\":10041:10056   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9715:10062   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10327   */\n    tag_88:\n        /* \"#utility.yul\":10135:10141   */\n      0x00\n        /* \"#utility.yul\":10143:10149   */\n      dup1\n        /* \"#utility.yul\":10196:10198   */\n      0x40\n        /* \"#utility.yul\":10184:10193   */\n      dup4\n        /* \"#utility.yul\":10175:10182   */\n      dup6\n        /* \"#utility.yul\":10171:10194   */\n      sub\n        /* \"#utility.yul\":10167:10199   */\n      slt\n        /* \"#utility.yul\":10164:10216   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":10212:10213   */\n      0x00\n        /* \"#utility.yul\":10209:10210   */\n      dup1\n        /* \"#utility.yul\":10202:10214   */\n      revert\n        /* \"#utility.yul\":10164:10216   */\n    tag_566:\n        /* \"#utility.yul\":10235:10264   */\n      tag_567\n        /* \"#utility.yul\":10254:10263   */\n      dup4\n        /* \"#utility.yul\":10235:10264   */\n      tag_450\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10225:10264   */\n      swap2\n      pop\n        /* \"#utility.yul\":10283:10321   */\n      tag_568\n        /* \"#utility.yul\":10317:10319   */\n      0x20\n        /* \"#utility.yul\":10306:10315   */\n      dup5\n        /* \"#utility.yul\":10302:10320   */\n      add\n        /* \"#utility.yul\":10283:10321   */\n      tag_450\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":10273:10321   */\n      swap1\n      pop\n        /* \"#utility.yul\":10067:10327   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10332:10938   */\n    tag_93:\n        /* \"#utility.yul\":10436:10442   */\n      0x00\n        /* \"#utility.yul\":10444:10450   */\n      dup1\n        /* \"#utility.yul\":10452:10458   */\n      0x00\n        /* \"#utility.yul\":10460:10466   */\n      dup1\n        /* \"#utility.yul\":10468:10474   */\n      0x00\n        /* \"#utility.yul\":10521:10524   */\n      0xa0\n        /* \"#utility.yul\":10509:10518   */\n      dup7\n        /* \"#utility.yul\":10500:10507   */\n      dup9\n        /* \"#utility.yul\":10496:10519   */\n      sub\n        /* \"#utility.yul\":10492:10525   */\n      slt\n        /* \"#utility.yul\":10489:10542   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":10538:10539   */\n      0x00\n        /* \"#utility.yul\":10535:10536   */\n      dup1\n        /* \"#utility.yul\":10528:10540   */\n      revert\n        /* \"#utility.yul\":10489:10542   */\n    tag_570:\n        /* \"#utility.yul\":10561:10590   */\n      tag_571\n        /* \"#utility.yul\":10580:10589   */\n      dup7\n        /* \"#utility.yul\":10561:10590   */\n      tag_450\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10551:10590   */\n      swap5\n      pop\n        /* \"#utility.yul\":10609:10647   */\n      tag_572\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10632:10641   */\n      dup8\n        /* \"#utility.yul\":10628:10646   */\n      add\n        /* \"#utility.yul\":10609:10647   */\n      tag_450\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":10599:10647   */\n      swap4\n      pop\n        /* \"#utility.yul\":10694:10696   */\n      0x40\n        /* \"#utility.yul\":10683:10692   */\n      dup7\n        /* \"#utility.yul\":10679:10697   */\n      add\n        /* \"#utility.yul\":10666:10698   */\n      calldataload\n        /* \"#utility.yul\":10656:10698   */\n      swap3\n      pop\n        /* \"#utility.yul\":10745:10747   */\n      0x60\n        /* \"#utility.yul\":10734:10743   */\n      dup7\n        /* \"#utility.yul\":10730:10748   */\n      add\n        /* \"#utility.yul\":10717:10749   */\n      calldataload\n        /* \"#utility.yul\":10707:10749   */\n      swap2\n      pop\n        /* \"#utility.yul\":10800:10803   */\n      0x80\n        /* \"#utility.yul\":10789:10798   */\n      dup7\n        /* \"#utility.yul\":10785:10804   */\n      add\n        /* \"#utility.yul\":10772:10805   */\n      calldataload\n        /* \"#utility.yul\":10828:10846   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10820:10826   */\n      dup2\n        /* \"#utility.yul\":10817:10847   */\n      gt\n        /* \"#utility.yul\":10814:10864   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":10860:10861   */\n      0x00\n        /* \"#utility.yul\":10857:10858   */\n      dup1\n        /* \"#utility.yul\":10850:10862   */\n      revert\n        /* \"#utility.yul\":10814:10864   */\n    tag_573:\n        /* \"#utility.yul\":10883:10932   */\n      tag_528\n        /* \"#utility.yul\":10924:10931   */\n      dup9\n        /* \"#utility.yul\":10915:10921   */\n      dup3\n        /* \"#utility.yul\":10904:10913   */\n      dup10\n        /* \"#utility.yul\":10900:10922   */\n      add\n        /* \"#utility.yul\":10883:10932   */\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":10943:11129   */\n    tag_97:\n        /* \"#utility.yul\":11002:11008   */\n      0x00\n        /* \"#utility.yul\":11055:11057   */\n      0x20\n        /* \"#utility.yul\":11043:11052   */\n      dup3\n        /* \"#utility.yul\":11034:11041   */\n      dup5\n        /* \"#utility.yul\":11030:11053   */\n      sub\n        /* \"#utility.yul\":11026:11058   */\n      slt\n        /* \"#utility.yul\":11023:11075   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":11071:11072   */\n      0x00\n        /* \"#utility.yul\":11068:11069   */\n      dup1\n        /* \"#utility.yul\":11061:11073   */\n      revert\n        /* \"#utility.yul\":11023:11075   */\n    tag_576:\n        /* \"#utility.yul\":11094:11123   */\n      tag_471\n        /* \"#utility.yul\":11113:11122   */\n      dup3\n        /* \"#utility.yul\":11094:11123   */\n      tag_450\n      jump\t// in\n        /* \"#utility.yul\":11134:11456   */\n    tag_101:\n        /* \"#utility.yul\":11211:11217   */\n      0x00\n        /* \"#utility.yul\":11219:11225   */\n      dup1\n        /* \"#utility.yul\":11227:11233   */\n      0x00\n        /* \"#utility.yul\":11280:11282   */\n      0x60\n        /* \"#utility.yul\":11268:11277   */\n      dup5\n        /* \"#utility.yul\":11259:11266   */\n      dup7\n        /* \"#utility.yul\":11255:11278   */\n      sub\n        /* \"#utility.yul\":11251:11283   */\n      slt\n        /* \"#utility.yul\":11248:11300   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":11296:11297   */\n      0x00\n        /* \"#utility.yul\":11293:11294   */\n      dup1\n        /* \"#utility.yul\":11286:11298   */\n      revert\n        /* \"#utility.yul\":11248:11300   */\n    tag_579:\n        /* \"#utility.yul\":11319:11348   */\n      tag_580\n        /* \"#utility.yul\":11338:11347   */\n      dup5\n        /* \"#utility.yul\":11319:11348   */\n      tag_450\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11309:11348   */\n      swap6\n        /* \"#utility.yul\":11395:11397   */\n      0x20\n        /* \"#utility.yul\":11380:11398   */\n      dup6\n      add\n        /* \"#utility.yul\":11367:11399   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":11446:11448   */\n      0x40\n        /* \"#utility.yul\":11431:11449   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":11418:11450   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":11134:11456   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11873:12229   */\n    tag_118:\n        /* \"#utility.yul\":12075:12077   */\n      0x20\n        /* \"#utility.yul\":12057:12078   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12094:12112   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12087:12117   */\n      mstore\n        /* \"#utility.yul\":12153:12187   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12148:12150   */\n      0x40\n        /* \"#utility.yul\":12133:12151   */\n      dup3\n      add\n        /* \"#utility.yul\":12126:12188   */\n      mstore\n        /* \"#utility.yul\":12220:12222   */\n      0x60\n        /* \"#utility.yul\":12205:12223   */\n      add\n      swap1\n        /* \"#utility.yul\":11873:12229   */\n      jump\t// out\n        /* \"#utility.yul\":12234:12614   */\n    tag_124:\n        /* \"#utility.yul\":12313:12314   */\n      0x01\n        /* \"#utility.yul\":12309:12321   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12356:12368   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12377:12438   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":12431:12435   */\n      0x7f\n        /* \"#utility.yul\":12423:12429   */\n      dup3\n        /* \"#utility.yul\":12419:12436   */\n      and\n        /* \"#utility.yul\":12409:12436   */\n      swap2\n      pop\n        /* \"#utility.yul\":12377:12438   */\n    tag_584:\n        /* \"#utility.yul\":12484:12486   */\n      0x20\n        /* \"#utility.yul\":12476:12482   */\n      dup3\n        /* \"#utility.yul\":12473:12487   */\n      lt\n        /* \"#utility.yul\":12453:12471   */\n      dup2\n        /* \"#utility.yul\":12450:12488   */\n      eq\n        /* \"#utility.yul\":12447:12608   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":12530:12540   */\n      0x4e487b71\n        /* \"#utility.yul\":12525:12528   */\n      0xe0\n        /* \"#utility.yul\":12521:12541   */\n      shl\n        /* \"#utility.yul\":12518:12519   */\n      0x00\n        /* \"#utility.yul\":12511:12542   */\n      mstore\n        /* \"#utility.yul\":12565:12569   */\n      0x22\n        /* \"#utility.yul\":12562:12563   */\n      0x04\n        /* \"#utility.yul\":12555:12570   */\n      mstore\n        /* \"#utility.yul\":12593:12597   */\n      0x24\n        /* \"#utility.yul\":12590:12591   */\n      0x00\n        /* \"#utility.yul\":12583:12598   */\n      revert\n        /* \"#utility.yul\":12447:12608   */\n    tag_585:\n      pop\n        /* \"#utility.yul\":12234:12614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13448:13575   */\n    tag_169:\n        /* \"#utility.yul\":13509:13519   */\n      0x4e487b71\n        /* \"#utility.yul\":13504:13507   */\n      0xe0\n        /* \"#utility.yul\":13500:13520   */\n      shl\n        /* \"#utility.yul\":13497:13498   */\n      0x00\n        /* \"#utility.yul\":13490:13521   */\n      mstore\n        /* \"#utility.yul\":13540:13544   */\n      0x32\n        /* \"#utility.yul\":13537:13538   */\n      0x04\n        /* \"#utility.yul\":13530:13545   */\n      mstore\n        /* \"#utility.yul\":13564:13568   */\n      0x24\n        /* \"#utility.yul\":13561:13562   */\n      0x00\n        /* \"#utility.yul\":13554:13569   */\n      revert\n        /* \"#utility.yul\":13580:13707   */\n    tag_459:\n        /* \"#utility.yul\":13641:13651   */\n      0x4e487b71\n        /* \"#utility.yul\":13636:13639   */\n      0xe0\n        /* \"#utility.yul\":13632:13652   */\n      shl\n        /* \"#utility.yul\":13629:13630   */\n      0x00\n        /* \"#utility.yul\":13622:13653   */\n      mstore\n        /* \"#utility.yul\":13672:13676   */\n      0x11\n        /* \"#utility.yul\":13669:13670   */\n      0x04\n        /* \"#utility.yul\":13662:13677   */\n      mstore\n        /* \"#utility.yul\":13696:13700   */\n      0x24\n        /* \"#utility.yul\":13693:13694   */\n      0x00\n        /* \"#utility.yul\":13686:13701   */\n      revert\n        /* \"#utility.yul\":13712:13847   */\n    tag_175:\n        /* \"#utility.yul\":13751:13754   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":13772:13789   */\n      dup3\n      eq\n        /* \"#utility.yul\":13769:13812   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":13792:13810   */\n      tag_592\n      tag_459\n      jump\t// in\n    tag_592:\n      pop\n        /* \"#utility.yul\":13839:13840   */\n      0x01\n        /* \"#utility.yul\":13828:13841   */\n      add\n      swap1\n        /* \"#utility.yul\":13712:13847   */\n      jump\t// out\n        /* \"#utility.yul\":13852:14257   */\n    tag_184:\n        /* \"#utility.yul\":14054:14056   */\n      0x20\n        /* \"#utility.yul\":14036:14057   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14093:14095   */\n      0x29\n        /* \"#utility.yul\":14073:14091   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14066:14096   */\n      mstore\n        /* \"#utility.yul\":14132:14166   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":14127:14129   */\n      0x40\n        /* \"#utility.yul\":14112:14130   */\n      dup3\n      add\n        /* \"#utility.yul\":14105:14167   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":14198:14200   */\n      0x60\n        /* \"#utility.yul\":14183:14201   */\n      dup3\n      add\n        /* \"#utility.yul\":14176:14215   */\n      mstore\n        /* \"#utility.yul\":14247:14250   */\n      0x80\n        /* \"#utility.yul\":14232:14251   */\n      add\n      swap1\n        /* \"#utility.yul\":13852:14257   */\n      jump\t// out\n        /* \"#utility.yul\":14669:15066   */\n    tag_253:\n        /* \"#utility.yul\":14871:14873   */\n      0x20\n        /* \"#utility.yul\":14853:14874   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14910:14912   */\n      0x21\n        /* \"#utility.yul\":14890:14908   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14883:14913   */\n      mstore\n        /* \"#utility.yul\":14949:14983   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":14944:14946   */\n      0x40\n        /* \"#utility.yul\":14929:14947   */\n      dup3\n      add\n        /* \"#utility.yul\":14922:14984   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":15015:15017   */\n      0x60\n        /* \"#utility.yul\":15000:15018   */\n      dup3\n      add\n        /* \"#utility.yul\":14993:15024   */\n      mstore\n        /* \"#utility.yul\":15056:15059   */\n      0x80\n        /* \"#utility.yul\":15041:15060   */\n      add\n      swap1\n        /* \"#utility.yul\":14669:15066   */\n      jump\t// out\n        /* \"#utility.yul\":15071:15475   */\n    tag_256:\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15255:15276   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15312:15314   */\n      0x28\n        /* \"#utility.yul\":15292:15310   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15285:15315   */\n      mstore\n        /* \"#utility.yul\":15351:15385   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":15346:15348   */\n      0x40\n        /* \"#utility.yul\":15331:15349   */\n      dup3\n      add\n        /* \"#utility.yul\":15324:15386   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":15417:15419   */\n      0x60\n        /* \"#utility.yul\":15402:15420   */\n      dup3\n      add\n        /* \"#utility.yul\":15395:15433   */\n      mstore\n        /* \"#utility.yul\":15465:15468   */\n      0x80\n        /* \"#utility.yul\":15450:15469   */\n      add\n      swap1\n        /* \"#utility.yul\":15071:15475   */\n      jump\t// out\n        /* \"#utility.yul\":15480:15608   */\n    tag_268:\n        /* \"#utility.yul\":15520:15523   */\n      0x00\n        /* \"#utility.yul\":15551:15552   */\n      dup3\n        /* \"#utility.yul\":15547:15553   */\n      not\n        /* \"#utility.yul\":15544:15545   */\n      dup3\n        /* \"#utility.yul\":15541:15554   */\n      gt\n        /* \"#utility.yul\":15538:15577   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":15557:15575   */\n      tag_599\n      tag_459\n      jump\t// in\n    tag_599:\n      pop\n        /* \"#utility.yul\":15593:15602   */\n      add\n      swap1\n        /* \"#utility.yul\":15480:15608   */\n      jump\t// out\n        /* \"#utility.yul\":15613:16078   */\n    tag_271:\n        /* \"#utility.yul\":15870:15872   */\n      0x40\n        /* \"#utility.yul\":15859:15868   */\n      dup2\n        /* \"#utility.yul\":15852:15873   */\n      mstore\n        /* \"#utility.yul\":15833:15837   */\n      0x00\n        /* \"#utility.yul\":15896:15952   */\n      tag_601\n        /* \"#utility.yul\":15948:15950   */\n      0x40\n        /* \"#utility.yul\":15937:15946   */\n      dup4\n        /* \"#utility.yul\":15933:15951   */\n      add\n        /* \"#utility.yul\":15925:15931   */\n      dup6\n        /* \"#utility.yul\":15896:15952   */\n      tag_458\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16000:16009   */\n      dup3\n        /* \"#utility.yul\":15992:15998   */\n      dup2\n        /* \"#utility.yul\":15988:16010   */\n      sub\n        /* \"#utility.yul\":15983:15985   */\n      0x20\n        /* \"#utility.yul\":15972:15981   */\n      dup5\n        /* \"#utility.yul\":15968:15986   */\n      add\n        /* \"#utility.yul\":15961:16011   */\n      mstore\n        /* \"#utility.yul\":16028:16072   */\n      tag_602\n        /* \"#utility.yul\":16065:16071   */\n      dup2\n        /* \"#utility.yul\":16057:16063   */\n      dup6\n        /* \"#utility.yul\":16028:16072   */\n      tag_458\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16020:16072   */\n      swap6\n        /* \"#utility.yul\":15613:16078   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16083:16484   */\n    tag_281:\n        /* \"#utility.yul\":16285:16287   */\n      0x20\n        /* \"#utility.yul\":16267:16288   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16324:16326   */\n      0x25\n        /* \"#utility.yul\":16304:16322   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16297:16327   */\n      mstore\n        /* \"#utility.yul\":16363:16397   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":16358:16360   */\n      0x40\n        /* \"#utility.yul\":16343:16361   */\n      dup3\n      add\n        /* \"#utility.yul\":16336:16398   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":16429:16431   */\n      0x60\n        /* \"#utility.yul\":16414:16432   */\n      dup3\n      add\n        /* \"#utility.yul\":16407:16442   */\n      mstore\n        /* \"#utility.yul\":16474:16477   */\n      0x80\n        /* \"#utility.yul\":16459:16478   */\n      add\n      swap1\n        /* \"#utility.yul\":16083:16484   */\n      jump\t// out\n        /* \"#utility.yul\":16489:16895   */\n    tag_293:\n        /* \"#utility.yul\":16691:16693   */\n      0x20\n        /* \"#utility.yul\":16673:16694   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16730:16732   */\n      0x2a\n        /* \"#utility.yul\":16710:16728   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16703:16733   */\n      mstore\n        /* \"#utility.yul\":16769:16803   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":16764:16766   */\n      0x40\n        /* \"#utility.yul\":16749:16767   */\n      dup3\n      add\n        /* \"#utility.yul\":16742:16804   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":16835:16837   */\n      0x60\n        /* \"#utility.yul\":16820:16838   */\n      dup3\n      add\n        /* \"#utility.yul\":16813:16853   */\n      mstore\n        /* \"#utility.yul\":16885:16888   */\n      0x80\n        /* \"#utility.yul\":16870:16889   */\n      add\n      swap1\n        /* \"#utility.yul\":16489:16895   */\n      jump\t// out\n        /* \"#utility.yul\":17249:17648   */\n    tag_310:\n        /* \"#utility.yul\":17451:17453   */\n      0x20\n        /* \"#utility.yul\":17433:17454   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17490:17492   */\n      0x23\n        /* \"#utility.yul\":17470:17488   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17463:17493   */\n      mstore\n        /* \"#utility.yul\":17529:17563   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":17524:17526   */\n      0x40\n        /* \"#utility.yul\":17509:17527   */\n      dup3\n      add\n        /* \"#utility.yul\":17502:17564   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":17595:17597   */\n      0x60\n        /* \"#utility.yul\":17580:17598   */\n      dup3\n      add\n        /* \"#utility.yul\":17573:17606   */\n      mstore\n        /* \"#utility.yul\":17638:17641   */\n      0x80\n        /* \"#utility.yul\":17623:17642   */\n      add\n      swap1\n        /* \"#utility.yul\":17249:17648   */\n      jump\t// out\n        /* \"#utility.yul\":17653:18053   */\n    tag_324:\n        /* \"#utility.yul\":17855:17857   */\n      0x20\n        /* \"#utility.yul\":17837:17858   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17894:17896   */\n      0x24\n        /* \"#utility.yul\":17874:17892   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17867:17897   */\n      mstore\n        /* \"#utility.yul\":17933:17967   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":17928:17930   */\n      0x40\n        /* \"#utility.yul\":17913:17931   */\n      dup3\n      add\n        /* \"#utility.yul\":17906:17968   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":17999:18001   */\n      0x60\n        /* \"#utility.yul\":17984:18002   */\n      dup3\n      add\n        /* \"#utility.yul\":17977:18011   */\n      mstore\n        /* \"#utility.yul\":18043:18046   */\n      0x80\n        /* \"#utility.yul\":18028:18047   */\n      add\n      swap1\n        /* \"#utility.yul\":17653:18053   */\n      jump\t// out\n        /* \"#utility.yul\":19066:19893   */\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19463:19478   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":19445:19479   */\n      dup3\n      mstore\n        /* \"#utility.yul\":19515:19530   */\n      dup6\n      and\n        /* \"#utility.yul\":19510:19512   */\n      0x20\n        /* \"#utility.yul\":19495:19513   */\n      dup3\n      add\n        /* \"#utility.yul\":19488:19531   */\n      mstore\n        /* \"#utility.yul\":19425:19428   */\n      0xa0\n        /* \"#utility.yul\":19562:19564   */\n      0x40\n        /* \"#utility.yul\":19547:19565   */\n      dup3\n      add\n        /* \"#utility.yul\":19540:19571   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":19388:19392   */\n      0x00\n      swap1\n        /* \"#utility.yul\":19594:19651   */\n      tag_612\n      swap1\n        /* \"#utility.yul\":19631:19650   */\n      dup4\n      add\n        /* \"#utility.yul\":19623:19629   */\n      dup7\n        /* \"#utility.yul\":19594:19651   */\n      tag_458\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19699:19708   */\n      dup3\n        /* \"#utility.yul\":19691:19697   */\n      dup2\n        /* \"#utility.yul\":19687:19709   */\n      sub\n        /* \"#utility.yul\":19682:19684   */\n      0x60\n        /* \"#utility.yul\":19671:19680   */\n      dup5\n        /* \"#utility.yul\":19667:19685   */\n      add\n        /* \"#utility.yul\":19660:19710   */\n      mstore\n        /* \"#utility.yul\":19733:19777   */\n      tag_613\n        /* \"#utility.yul\":19770:19776   */\n      dup2\n        /* \"#utility.yul\":19762:19768   */\n      dup7\n        /* \"#utility.yul\":19733:19777   */\n      tag_458\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":19719:19777   */\n      swap1\n      pop\n        /* \"#utility.yul\":19826:19835   */\n      dup3\n        /* \"#utility.yul\":19818:19824   */\n      dup2\n        /* \"#utility.yul\":19814:19836   */\n      sub\n        /* \"#utility.yul\":19808:19811   */\n      0x80\n        /* \"#utility.yul\":19797:19806   */\n      dup5\n        /* \"#utility.yul\":19793:19812   */\n      add\n        /* \"#utility.yul\":19786:19837   */\n      mstore\n        /* \"#utility.yul\":19854:19887   */\n      tag_614\n        /* \"#utility.yul\":19880:19886   */\n      dup2\n        /* \"#utility.yul\":19872:19878   */\n      dup6\n        /* \"#utility.yul\":19854:19887   */\n      tag_454\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19846:19887   */\n      swap9\n        /* \"#utility.yul\":19066:19893   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19898:20147   */\n    tag_396:\n        /* \"#utility.yul\":19967:19973   */\n      0x00\n        /* \"#utility.yul\":20020:20022   */\n      0x20\n        /* \"#utility.yul\":20008:20017   */\n      dup3\n        /* \"#utility.yul\":19999:20006   */\n      dup5\n        /* \"#utility.yul\":19995:20018   */\n      sub\n        /* \"#utility.yul\":19991:20023   */\n      slt\n        /* \"#utility.yul\":19988:20040   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":20036:20037   */\n      0x00\n        /* \"#utility.yul\":20033:20034   */\n      dup1\n        /* \"#utility.yul\":20026:20038   */\n      revert\n        /* \"#utility.yul\":19988:20040   */\n    tag_616:\n        /* \"#utility.yul\":20068:20077   */\n      dup2\n        /* \"#utility.yul\":20062:20078   */\n      mload\n        /* \"#utility.yul\":20087:20117   */\n      tag_471\n        /* \"#utility.yul\":20111:20116   */\n      dup2\n        /* \"#utility.yul\":20087:20117   */\n      tag_451\n      jump\t// in\n        /* \"#utility.yul\":20152:20331   */\n    tag_402:\n        /* \"#utility.yul\":20187:20190   */\n      0x00\n        /* \"#utility.yul\":20229:20230   */\n      0x03\n        /* \"#utility.yul\":20211:20227   */\n      returndatasize\n        /* \"#utility.yul\":20208:20231   */\n      gt\n        /* \"#utility.yul\":20205:20325   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":20275:20276   */\n      0x04\n        /* \"#utility.yul\":20272:20273   */\n      0x00\n        /* \"#utility.yul\":20269:20270   */\n      dup1\n        /* \"#utility.yul\":20254:20277   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":20312:20313   */\n      0x00\n        /* \"#utility.yul\":20306:20314   */\n      mload\n        /* \"#utility.yul\":20301:20304   */\n      0xe0\n        /* \"#utility.yul\":20297:20315   */\n      shr\n        /* \"#utility.yul\":20205:20325   */\n    tag_619:\n        /* \"#utility.yul\":20152:20331   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20336:21007   */\n    tag_404:\n        /* \"#utility.yul\":20375:20378   */\n      0x00\n        /* \"#utility.yul\":20417:20421   */\n      0x44\n        /* \"#utility.yul\":20399:20415   */\n      returndatasize\n        /* \"#utility.yul\":20396:20422   */\n      lt\n        /* \"#utility.yul\":20393:20432   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":20336:21007   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20393:20432   */\n    tag_621:\n        /* \"#utility.yul\":20459:20461   */\n      0x40\n        /* \"#utility.yul\":20453:20462   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":20524:20540   */\n      returndatasize\n        /* \"#utility.yul\":20520:20545   */\n      dup2\n      add\n        /* \"#utility.yul\":20517:20518   */\n      0x04\n        /* \"#utility.yul\":20453:20462   */\n      dup4\n        /* \"#utility.yul\":20496:20546   */\n      returndatacopy\n        /* \"#utility.yul\":20575:20579   */\n      dup2\n        /* \"#utility.yul\":20569:20580   */\n      mload\n        /* \"#utility.yul\":20599:20615   */\n      returndatasize\n        /* \"#utility.yul\":20634:20652   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20705:20707   */\n      dup2\n        /* \"#utility.yul\":20698:20702   */\n      0x24\n        /* \"#utility.yul\":20690:20696   */\n      dup5\n        /* \"#utility.yul\":20686:20703   */\n      add\n        /* \"#utility.yul\":20683:20708   */\n      gt\n        /* \"#utility.yul\":20678:20680   */\n      dup2\n        /* \"#utility.yul\":20670:20676   */\n      dup5\n        /* \"#utility.yul\":20667:20681   */\n      gt\n        /* \"#utility.yul\":20664:20709   */\n      or\n        /* \"#utility.yul\":20661:20719   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":20712:20717   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20336:21007   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20661:20719   */\n    tag_622:\n        /* \"#utility.yul\":20749:20755   */\n      dup3\n        /* \"#utility.yul\":20743:20747   */\n      dup6\n        /* \"#utility.yul\":20739:20756   */\n      add\n        /* \"#utility.yul\":20728:20756   */\n      swap2\n      pop\n        /* \"#utility.yul\":20785:20788   */\n      dup2\n        /* \"#utility.yul\":20779:20789   */\n      mload\n        /* \"#utility.yul\":20812:20814   */\n      dup2\n        /* \"#utility.yul\":20804:20810   */\n      dup2\n        /* \"#utility.yul\":20801:20815   */\n      gt\n        /* \"#utility.yul\":20798:20825   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":20818:20823   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20336:21007   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20798:20825   */\n    tag_623:\n        /* \"#utility.yul\":20902:20904   */\n      dup5\n        /* \"#utility.yul\":20883:20899   */\n      returndatasize\n        /* \"#utility.yul\":20877:20881   */\n      dup8\n        /* \"#utility.yul\":20873:20900   */\n      add\n        /* \"#utility.yul\":20869:20905   */\n      add\n        /* \"#utility.yul\":20862:20866   */\n      0x20\n        /* \"#utility.yul\":20853:20859   */\n      dup3\n        /* \"#utility.yul\":20848:20851   */\n      dup6\n        /* \"#utility.yul\":20844:20860   */\n      add\n        /* \"#utility.yul\":20840:20867   */\n      add\n        /* \"#utility.yul\":20837:20906   */\n      gt\n        /* \"#utility.yul\":20834:20916   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":20909:20914   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20336:21007   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20834:20916   */\n    tag_624:\n        /* \"#utility.yul\":20925:20982   */\n      tag_625\n        /* \"#utility.yul\":20976:20980   */\n      0x20\n        /* \"#utility.yul\":20967:20973   */\n      dup3\n        /* \"#utility.yul\":20959:20965   */\n      dup7\n        /* \"#utility.yul\":20955:20974   */\n      add\n        /* \"#utility.yul\":20951:20981   */\n      add\n        /* \"#utility.yul\":20945:20949   */\n      dup8\n        /* \"#utility.yul\":20925:20982   */\n      tag_452\n      jump\t// in\n    tag_625:\n      pop\n        /* \"#utility.yul\":20998:21001   */\n      swap1\n      swap6\n        /* \"#utility.yul\":20336:21007   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21433:21837   */\n    tag_412:\n        /* \"#utility.yul\":21635:21637   */\n      0x20\n        /* \"#utility.yul\":21617:21638   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":21674:21676   */\n      0x28\n        /* \"#utility.yul\":21654:21672   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":21647:21677   */\n      mstore\n        /* \"#utility.yul\":21713:21747   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":21708:21710   */\n      0x40\n        /* \"#utility.yul\":21693:21711   */\n      dup3\n      add\n        /* \"#utility.yul\":21686:21748   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":21779:21781   */\n      0x60\n        /* \"#utility.yul\":21764:21782   */\n      dup3\n      add\n        /* \"#utility.yul\":21757:21795   */\n      mstore\n        /* \"#utility.yul\":21827:21830   */\n      0x80\n        /* \"#utility.yul\":21812:21831   */\n      add\n      swap1\n        /* \"#utility.yul\":21433:21837   */\n      jump\t// out\n        /* \"#utility.yul\":21842:22403   */\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22139:22154   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":22121:22155   */\n      dup3\n      mstore\n        /* \"#utility.yul\":22191:22206   */\n      dup6\n      and\n        /* \"#utility.yul\":22186:22188   */\n      0x20\n        /* \"#utility.yul\":22171:22189   */\n      dup3\n      add\n        /* \"#utility.yul\":22164:22207   */\n      mstore\n        /* \"#utility.yul\":22238:22240   */\n      0x40\n        /* \"#utility.yul\":22223:22241   */\n      dup2\n      add\n        /* \"#utility.yul\":22216:22250   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":22281:22283   */\n      0x60\n        /* \"#utility.yul\":22266:22284   */\n      dup2\n      add\n        /* \"#utility.yul\":22259:22293   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":22101:22104   */\n      0xa0\n        /* \"#utility.yul\":22324:22327   */\n      0x80\n        /* \"#utility.yul\":22309:22328   */\n      dup3\n      add\n        /* \"#utility.yul\":22302:22334   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":22064:22068   */\n      0x00\n      swap1\n        /* \"#utility.yul\":22351:22397   */\n      tag_629\n      swap1\n        /* \"#utility.yul\":22377:22396   */\n      dup4\n      add\n        /* \"#utility.yul\":22369:22375   */\n      dup5\n        /* \"#utility.yul\":22351:22397   */\n      tag_454\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":22343:22397   */\n      swap8\n        /* \"#utility.yul\":21842:22403   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220394d42a863720e48913aba1e1e6ae9b9090e3f282e5084899b74d0507ca6032f64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2041": {
									"entryPoint": null,
									"id": 2041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1973": {
									"entryPoint": null,
									"id": 1973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_752": {
									"entryPoint": 86,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 111,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:12"
															},
															"nodeType": "YulIf",
															"src": "157:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:12"
															},
															"nodeType": "YulIf",
															"src": "227:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:12",
														"type": ""
													}
												],
												"src": "14:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060a0016040528060698152602001620023c860699139620000378162000056565b5062000043336200006f565b6003805460ff60a01b19169055620001a4565b80516200006b906002906020840190620000c1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000cf9062000167565b90600052602060002090601f016020900481019282620000f357600085556200013e565b82601f106200010e57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013e57825182559160200191906001019062000121565b506200014c92915062000150565b5090565b5b808211156200014c576000815560010162000151565b600181811c908216806200017c57607f821691505b602082108114156200019e57634e487b7160e01b600052602260045260246000fd5b50919050565b61221480620001b46000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80636b20c454116100ad578063a22cb46511610071578063a22cb46514610254578063e985e9c514610267578063f242432a146102a3578063f2fde38b146102b6578063f5298aca146102c957600080fd5b80636b20c45414610203578063715018a614610216578063731133e91461021e5780638456cb59146102315780638da5cb5b1461023957600080fd5b80631f7fdffa116100f45780631f7fdffa146101a35780632eb2c2d6146101b65780633f4ba83a146101c95780634e1273f4146101d15780635c975abb146101f157600080fd5b8062fdd58e1461012557806301ffc9a71461014b57806302fe53051461016e5780630e89341c14610183575b600080fd5b610138610133366004611680565b6102dc565b6040519081526020015b60405180910390f35b61015e6101593660046116c0565b610373565b6040519015158152602001610142565b61018161017c366004611785565b6103c5565b005b6101966101913660046117d6565b6103fb565b604051610142919061183c565b6101816101b1366004611904565b61048f565b6101816101c436600461199d565b6104cb565b610181610562565b6101e46101df366004611a47565b610596565b6040516101429190611b4d565b600354600160a01b900460ff1661015e565b610181610211366004611b60565b6106c0565b610181610708565b61018161022c366004611bd4565b61073c565b610181610772565b6003546040516001600160a01b039091168152602001610142565b610181610262366004611c29565b6107a4565b61015e610275366004611c65565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101816102b1366004611c98565b6107b3565b6101816102c4366004611cfd565b6107f8565b6101816102d7366004611d18565b610890565b60006001600160a01b03831661034d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103a457506001600160e01b031982166303a24d0760e21b145b806103bf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103ef5760405162461bcd60e51b815260040161034490611d4b565b6103f8816108d3565b50565b60606002805461040a90611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461043690611d80565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b50505050509050919050565b6003546001600160a01b031633146104b95760405162461bcd60e51b815260040161034490611d4b565b6104c5848484846108e6565b50505050565b6001600160a01b0385163314806104e757506104e78533610275565b61054e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610344565b61055b8585858585610a40565b5050505050565b6003546001600160a01b0316331461058c5760405162461bcd60e51b815260040161034490611d4b565b610594610bea565b565b606081518351146105fb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610344565b6000835167ffffffffffffffff811115610617576106176116e4565b604051908082528060200260200182016040528015610640578160200160208202803683370190505b50905060005b84518110156106b85761068b85828151811061066457610664611dbb565b602002602001015185838151811061067e5761067e611dbb565b60200260200101516102dc565b82828151811061069d5761069d611dbb565b60209081029190910101526106b181611de7565b9050610646565b509392505050565b6001600160a01b0383163314806106dc57506106dc8333610275565b6106f85760405162461bcd60e51b815260040161034490611e02565b610703838383610c87565b505050565b6003546001600160a01b031633146107325760405162461bcd60e51b815260040161034490611d4b565b6105946000610e23565b6003546001600160a01b031633146107665760405162461bcd60e51b815260040161034490611d4b565b6104c584848484610e75565b6003546001600160a01b0316331461079c5760405162461bcd60e51b815260040161034490611d4b565b610594610f5e565b6107af338383610fe6565b5050565b6001600160a01b0385163314806107cf57506107cf8533610275565b6107eb5760405162461bcd60e51b815260040161034490611e02565b61055b85858585856110c7565b6003546001600160a01b031633146108225760405162461bcd60e51b815260040161034490611d4b565b6001600160a01b0381166108875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610344565b6103f881610e23565b6001600160a01b0383163314806108ac57506108ac8333610275565b6108c85760405162461bcd60e51b815260040161034490611e02565b6107038383836111ff565b80516107af9060029060208401906115cb565b6001600160a01b03841661090c5760405162461bcd60e51b815260040161034490611e4b565b815183511461092d5760405162461bcd60e51b815260040161034490611e8c565b3361093d81600087878787611317565b60005b84518110156109d85783818151811061095b5761095b611dbb565b602002602001015160008087848151811061097857610978611dbb565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109c09190611ed4565b909155508190506109d081611de7565b915050610940565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a29929190611eec565b60405180910390a461055b81600087878787611369565b8151835114610a615760405162461bcd60e51b815260040161034490611e8c565b6001600160a01b038416610a875760405162461bcd60e51b815260040161034490611f1a565b33610a96818787878787611317565b60005b8451811015610b7c576000858281518110610ab657610ab6611dbb565b602002602001015190506000858381518110610ad457610ad4611dbb565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610b245760405162461bcd60e51b815260040161034490611f5f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610b61908490611ed4565b9250508190555050505080610b7590611de7565b9050610a99565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610bcc929190611eec565b60405180910390a4610be2818787878787611369565b505050505050565b600354600160a01b900460ff16610c3a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610344565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610cad5760405162461bcd60e51b815260040161034490611fa9565b8051825114610cce5760405162461bcd60e51b815260040161034490611e8c565b6000339050610cf181856000868660405180602001604052806000815250611317565b60005b8351811015610db6576000848281518110610d1157610d11611dbb565b602002602001015190506000848381518110610d2f57610d2f611dbb565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610d7f5760405162461bcd60e51b815260040161034490611fec565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610dae81611de7565b915050610cf4565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610e07929190611eec565b60405180910390a46040805160208101909152600090526104c5565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610e9b5760405162461bcd60e51b815260040161034490611e4b565b336000610ea7856114c5565b90506000610eb4856114c5565b9050610ec583600089858589611317565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610ef5908490611ed4565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f5583600089898989611510565b50505050505050565b600354600160a01b900460ff1615610fab5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610344565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c6a3390565b816001600160a01b0316836001600160a01b0316141561105a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610344565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166110ed5760405162461bcd60e51b815260040161034490611f1a565b3360006110f9856114c5565b90506000611106856114c5565b9050611116838989858589611317565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156111575760405162461bcd60e51b815260040161034490611f5f565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611194908490611ed4565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111f4848a8a8a8a8a611510565b505050505050505050565b6001600160a01b0383166112255760405162461bcd60e51b815260040161034490611fa9565b336000611231846114c5565b9050600061123e846114c5565b905061125e83876000858560405180602001604052806000815250611317565b6000858152602081815260408083206001600160a01b038a1684529091529020548481101561129f5760405162461bcd60e51b815260040161034490611fec565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610f55565b600354600160a01b900460ff16156113645760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610344565b610be2565b6001600160a01b0384163b15610be25760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113ad9089908990889088908890600401612030565b6020604051808303816000875af19250505080156113e8575060408051601f3d908101601f191682019092526113e59181019061208e565b60015b611495576113f46120ab565b806308c379a0141561142e57506114096120c7565b806114145750611430565b8060405162461bcd60e51b8152600401610344919061183c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610344565b6001600160e01b0319811663bc197c8160e01b14610f555760405162461bcd60e51b815260040161034490612151565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106114ff576114ff611dbb565b602090810291909101015292915050565b6001600160a01b0384163b15610be25760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906115549089908990889088908890600401612199565b6020604051808303816000875af192505050801561158f575060408051601f3d908101601f1916820190925261158c9181019061208e565b60015b61159b576113f46120ab565b6001600160e01b0319811663f23a6e6160e01b14610f555760405162461bcd60e51b815260040161034490612151565b8280546115d790611d80565b90600052602060002090601f0160209004810192826115f9576000855561163f565b82601f1061161257805160ff191683800117855561163f565b8280016001018555821561163f579182015b8281111561163f578251825591602001919060010190611624565b5061164b92915061164f565b5090565b5b8082111561164b5760008155600101611650565b80356001600160a01b038116811461167b57600080fd5b919050565b6000806040838503121561169357600080fd5b61169c83611664565b946020939093013593505050565b6001600160e01b0319811681146103f857600080fd5b6000602082840312156116d257600080fd5b81356116dd816116aa565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611720576117206116e4565b6040525050565b600067ffffffffffffffff831115611741576117416116e4565b604051611758601f8501601f1916602001826116fa565b80915083815284848401111561176d57600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561179757600080fd5b813567ffffffffffffffff8111156117ae57600080fd5b8201601f810184136117bf57600080fd5b6117ce84823560208401611727565b949350505050565b6000602082840312156117e857600080fd5b5035919050565b6000815180845260005b81811015611815576020818501810151868301820152016117f9565b81811115611827576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006116dd60208301846117ef565b600067ffffffffffffffff821115611869576118696116e4565b5060051b60200190565b600082601f83011261188457600080fd5b813560206118918261184f565b60405161189e82826116fa565b83815260059390931b85018201928281019150868411156118be57600080fd5b8286015b848110156118d957803583529183019183016118c2565b509695505050505050565b600082601f8301126118f557600080fd5b6116dd83833560208501611727565b6000806000806080858703121561191a57600080fd5b61192385611664565b9350602085013567ffffffffffffffff8082111561194057600080fd5b61194c88838901611873565b9450604087013591508082111561196257600080fd5b61196e88838901611873565b9350606087013591508082111561198457600080fd5b50611991878288016118e4565b91505092959194509250565b600080600080600060a086880312156119b557600080fd5b6119be86611664565b94506119cc60208701611664565b9350604086013567ffffffffffffffff808211156119e957600080fd5b6119f589838a01611873565b94506060880135915080821115611a0b57600080fd5b611a1789838a01611873565b93506080880135915080821115611a2d57600080fd5b50611a3a888289016118e4565b9150509295509295909350565b60008060408385031215611a5a57600080fd5b823567ffffffffffffffff80821115611a7257600080fd5b818501915085601f830112611a8657600080fd5b81356020611a938261184f565b604051611aa082826116fa565b83815260059390931b8501820192828101915089841115611ac057600080fd5b948201945b83861015611ae557611ad686611664565b82529482019490820190611ac5565b96505086013592505080821115611afb57600080fd5b50611b0885828601611873565b9150509250929050565b600081518084526020808501945080840160005b83811015611b4257815187529582019590820190600101611b26565b509495945050505050565b6020815260006116dd6020830184611b12565b600080600060608486031215611b7557600080fd5b611b7e84611664565b9250602084013567ffffffffffffffff80821115611b9b57600080fd5b611ba787838801611873565b93506040860135915080821115611bbd57600080fd5b50611bca86828701611873565b9150509250925092565b60008060008060808587031215611bea57600080fd5b611bf385611664565b93506020850135925060408501359150606085013567ffffffffffffffff811115611c1d57600080fd5b611991878288016118e4565b60008060408385031215611c3c57600080fd5b611c4583611664565b915060208301358015158114611c5a57600080fd5b809150509250929050565b60008060408385031215611c7857600080fd5b611c8183611664565b9150611c8f60208401611664565b90509250929050565b600080600080600060a08688031215611cb057600080fd5b611cb986611664565b9450611cc760208701611664565b93506040860135925060608601359150608086013567ffffffffffffffff811115611cf157600080fd5b611a3a888289016118e4565b600060208284031215611d0f57600080fd5b6116dd82611664565b600080600060608486031215611d2d57600080fd5b611d3684611664565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680611d9457607f821691505b60208210811415611db557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611dfb57611dfb611dd1565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611ee757611ee7611dd1565b500190565b604081526000611eff6040830185611b12565b8281036020840152611f118185611b12565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061205c90830186611b12565b828103606084015261206e8186611b12565b9050828103608084015261208281856117ef565b98975050505050505050565b6000602082840312156120a057600080fd5b81516116dd816116aa565b600060033d11156120c45760046000803e5060005160e01c5b90565b600060443d10156120d55790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561210557505050505090565b828501915081518181111561211d5750505050505090565b843d87010160208285010111156121375750505050505090565b612146602082860101876116fa565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906121d3908301846117ef565b97965050505050505056fea2646970667358221220394d42a863720e48913aba1e1e6ae9b9090e3f282e5084899b74d0507ca6032f64736f6c634300080b003368747470733a2f2f697066732e696f2f697066732f516d5136745a686138724d524531536a64666a5747445a6955727a5063526678784553444875514142625a4453383f66696c656e616d653d53696465487573746c65722532304261636b67726f756e642e706e67",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x69 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x23C8 PUSH1 0x69 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0x6F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH3 0x1A4 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x6B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCF SWAP1 PUSH3 0x167 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x121 JUMP JUMPDEST POP PUSH3 0x14C SWAP3 SWAP2 POP PUSH3 0x150 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x151 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x17C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x19E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2214 DUP1 PUSH3 0x1B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x199D JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x181 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x34D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3A4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3BF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x3F8 DUP2 PUSH2 0x8D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40A SWAP1 PUSH2 0x1D80 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x483 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x458 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x483 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x466 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x4C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x8E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4E7 JUMPI POP PUSH2 0x4E7 DUP6 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA40 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH2 0xBEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH2 0x617 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x68B DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x69D JUMPI PUSH2 0x69D PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6B1 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x646 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x6DC JUMPI POP PUSH2 0x6DC DUP4 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0xC87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH1 0x0 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x4C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x7AF CALLER DUP4 DUP4 PUSH2 0xFE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7CF JUMPI POP PUSH2 0x7CF DUP6 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0x3F8 DUP2 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x8AC JUMPI POP PUSH2 0x8AC DUP4 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0x11FF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x7AF SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST CALLER PUSH2 0x93D DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x95B JUMPI PUSH2 0x95B PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH2 0x978 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x940 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x55B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1369 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CALLER PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAD4 JUMPI PUSH2 0xAD4 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xB24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB61 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xB75 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA99 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBCC SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBE2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1369 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xCF1 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD11 JUMPI PUSH2 0xD11 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI PUSH2 0xD2F PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xDAE DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCF4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xEA7 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEB4 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC5 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xEF5 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF55 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1510 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC6A CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10F9 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1106 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1116 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1194 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F4 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1510 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1231 DUP5 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123E DUP5 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x125E DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x13AD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1495 JUMPI PUSH2 0x13F4 PUSH2 0x20AB JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x142E JUMPI POP PUSH2 0x1409 PUSH2 0x20C7 JUMP JUMPDEST DUP1 PUSH2 0x1414 JUMPI POP PUSH2 0x1430 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FF PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1554 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x158F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x158C SWAP2 DUP2 ADD SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x159B JUMPI PUSH2 0x13F4 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x2151 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x15D7 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x163F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1612 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x163F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x163F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x163F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1624 JUMP JUMPDEST POP PUSH2 0x164B SWAP3 SWAP2 POP PUSH2 0x164F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1650 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169C DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16DD DUP2 PUSH2 0x16AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1758 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1727 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x17F9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x16E4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1891 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189E DUP3 DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x18D9 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18C2 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1923 DUP6 PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194C DUP9 DUP4 DUP10 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196E DUP9 DUP4 DUP10 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BE DUP7 PUSH2 0x1664 JUMP JUMPDEST SWAP5 POP PUSH2 0x19CC PUSH1 0x20 DUP8 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19F5 DUP10 DUP4 DUP11 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A17 DUP10 DUP4 DUP11 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3A DUP9 DUP3 DUP10 ADD PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1A93 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA0 DUP3 DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1AE5 JUMPI PUSH2 0x1AD6 DUP7 PUSH2 0x1664 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B08 DUP6 DUP3 DUP7 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B26 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7E DUP5 PUSH2 0x1664 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA7 DUP8 DUP4 DUP9 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BF3 DUP6 PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C45 DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C81 DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8F PUSH1 0x20 DUP5 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB9 DUP7 PUSH2 0x1664 JUMP JUMPDEST SWAP5 POP PUSH2 0x1CC7 PUSH1 0x20 DUP8 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3A DUP9 DUP3 DUP10 ADD PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP3 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D36 DUP5 PUSH2 0x1664 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DFB JUMPI PUSH2 0x1DFB PUSH2 0x1DD1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x1DD1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B12 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F11 DUP2 DUP6 PUSH2 0x1B12 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x205C SWAP1 DUP4 ADD DUP7 PUSH2 0x1B12 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x206E DUP2 DUP7 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2082 DUP2 DUP6 PUSH2 0x17EF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x20C4 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20D5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2105 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x211D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2137 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x16FA JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21D3 SWAP1 DUP4 ADD DUP5 PUSH2 0x17EF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x4D TIMESTAMP 0xA8 PUSH4 0x720E4891 GASPRICE 0xBA 0x1E 0x1E PUSH11 0xE9B9090E3F282E5084899B PUSH21 0xD0507CA6032F64736F6C634300080B003368747470 PUSH20 0x3A2F2F697066732E696F2F697066732F516D5136 PUSH21 0x5A686138724D524531536A64666A5747445A695572 PUSH27 0x5063526678784553444875514142625A4453383F66696C656E616D PUSH6 0x3D5369646548 PUSH22 0x73746C65722532304261636B67726F756E642E706E67 ",
							"sourceMap": "366:1103:11:-:0;;;443:145;;;;;;;;;;1107:62:2;;;;;;;;;;;;;;;;;1149:13;1157:4;1149:7;:13::i;:::-;-1:-1:-1;921:32:0;719:10:8;921:18:0;:32::i;:::-;981:7:1;:15;;-1:-1:-1;;;;981:15:1;;;366:1103:11;;8171:86:2;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;366:1103:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;366:1103:11;;;-1:-1:-1;366:1103:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:12;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;366:1103:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1262": {
									"entryPoint": null,
									"id": 1262,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1418": {
									"entryPoint": 5317,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1243": {
									"entryPoint": null,
									"id": 1243,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2147": {
									"entryPoint": 4887,
									"id": 2147,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burnBatch_1192": {
									"entryPoint": 3207,
									"id": 1192,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1069": {
									"entryPoint": 4607,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1390": {
									"entryPoint": 4969,
									"id": 1390,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1325": {
									"entryPoint": 5392,
									"id": 1325,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_964": {
									"entryPoint": 2278,
									"id": 964,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_853": {
									"entryPoint": 3701,
									"id": 853,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1973": {
									"entryPoint": null,
									"id": 1973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 3934,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeBatchTransferFrom_741": {
									"entryPoint": 2624,
									"id": 741,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_606": {
									"entryPoint": 4295,
									"id": 606,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1224": {
									"entryPoint": 4070,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_752": {
									"entryPoint": 2259,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 3619,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 3050,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOfBatch_376": {
									"entryPoint": 1430,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_312": {
									"entryPoint": 732,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1650": {
									"entryPoint": 1728,
									"id": 1650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1618": {
									"entryPoint": 2192,
									"id": 1618,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1684": {
									"entryPoint": null,
									"id": 1684,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatch_2115": {
									"entryPoint": 1167,
									"id": 2115,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_2092": {
									"entryPoint": 1852,
									"id": 2092,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2062": {
									"entryPoint": 1906,
									"id": 2062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1800,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_489": {
									"entryPoint": 1227,
									"id": 489,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_449": {
									"entryPoint": 1971,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_393": {
									"entryPoint": 1956,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_2053": {
									"entryPoint": 965,
									"id": 2053,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_2006": {
									"entryPoint": null,
									"id": 2006,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_272": {
									"entryPoint": 883,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 2040,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2071": {
									"entryPoint": 1378,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uri_284": {
									"entryPoint": 1019,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22405:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nodeType": "YulIf",
															"src": "289:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "192:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:12",
														"type": ""
													}
												],
												"src": "451:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:12"
															},
															"nodeType": "YulIf",
															"src": "687:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:12",
														"type": ""
													}
												],
												"src": "633:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:12"
															},
															"nodeType": "YulIf",
															"src": "848:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:12",
														"type": ""
													}
												],
												"src": "769:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:12",
														"type": ""
													}
												],
												"src": "1019:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1267:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1272:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1300:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1327:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1211:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:202:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1400:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1422:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1438:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1444:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1434:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1434:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1453:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1449:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1449:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1404:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1533:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1535:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1535:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1476:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1473:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1512:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1509:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1470:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:62:12"
															},
															"nodeType": "YulIf",
															"src": "1467:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1575:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1564:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1372:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1380:4:12",
														"type": ""
													}
												],
												"src": "1343:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:394:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1716:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1718:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1718:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1718:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:30:12"
															},
															"nodeType": "YulIf",
															"src": "1682:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1761:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1751:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1799:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1819:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1827:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1815:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1815:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1836:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1832:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1811:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1811:29:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:40:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1779:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:69:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:69:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1857:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1866:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1888:6:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1896:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1881:22:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1941:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1922:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1936:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1915:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:25:12"
															},
															"nodeType": "YulIf",
															"src": "1912:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1983:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1991:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:17:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1998:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2003:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1966:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:44:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2042:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2030:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2030:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2051:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:30:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1662:5:12",
														"type": ""
													}
												],
												"src": "1597:469:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:371:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2197:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2206:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2209:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2199:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2199:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2172:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2181:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2168:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2164:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:32:12"
															},
															"nodeType": "YulIf",
															"src": "2161:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2222:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2249:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2236:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2226:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2302:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2311:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2314:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2304:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2304:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2274:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2271:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:12"
															},
															"nodeType": "YulIf",
															"src": "2268:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2352:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2331:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2407:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2416:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2419:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2409:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2409:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2390:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2382:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2382:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2397:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2378:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2378:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:35:12"
															},
															"nodeType": "YulIf",
															"src": "2368:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:84:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2481:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2485:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:11:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2503:2:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2490:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:16:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2508:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "2442:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:74:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2117:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2128:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2140:6:12",
														"type": ""
													}
												],
												"src": "2071:451:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2597:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2643:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2652:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2645:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2645:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2645:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2618:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2614:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2614:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2610:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:32:12"
															},
															"nodeType": "YulIf",
															"src": "2607:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2668:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2691:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2678:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2563:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2574:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2586:6:12",
														"type": ""
													}
												],
												"src": "2527:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2762:422:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2772:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2792:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2786:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2776:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2814:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2819:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2807:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2835:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2844:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2839:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2906:110:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2920:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2930:4:12",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2924:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "2962:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2967:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2958:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2958:11:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "2971:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2954:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2954:20:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "2990:5:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2997:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2986:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2986:13:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3001:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2982:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2982:22:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2976:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2976:29:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2947:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2865:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2868:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2862:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2876:21:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2878:17:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2887:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2890:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2883:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2883:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2878:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2858:3:12",
																"statements": []
															},
															"src": "2854:162:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3050:62:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3079:3:12"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3084:6:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3075:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3075:16:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3093:4:12",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3071:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3071:27:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3064:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3064:38:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:38:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3031:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3028:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:13:12"
															},
															"nodeType": "YulIf",
															"src": "3025:87:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3121:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3136:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3149:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3157:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3145:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3145:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3166:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3162:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3162:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3141:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3132:39:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3173:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2739:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2746:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2754:3:12",
														"type": ""
													}
												],
												"src": "2712:472:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3310:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3327:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3350:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3376:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3358:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3350:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3279:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3290:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3301:4:12",
														"type": ""
													}
												],
												"src": "3189:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3483:114:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3527:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3529:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3529:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3529:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3499:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3507:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3496:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:30:12"
															},
															"nodeType": "YulIf",
															"src": "3493:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3558:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3574:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3577:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3586:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3558:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3463:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3474:4:12",
														"type": ""
													}
												],
												"src": "3414:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3666:660:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3715:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3724:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3717:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3717:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3717:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3694:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3702:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3690:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3690:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3709:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:35:12"
															},
															"nodeType": "YulIf",
															"src": "3676:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3740:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3763:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3750:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3744:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3779:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3789:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3783:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3802:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3852:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3812:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:43:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3806:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3864:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3878:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3878:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3868:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3916:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3924:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3896:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3896:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3947:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3940:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3969:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3977:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3962:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3989:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4000:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4008:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3996:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3996:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3989:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4020:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4042:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4054:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4057:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4050:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4050:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4038:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4038:23:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4063:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:32:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4024:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4094:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4096:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4096:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4089:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4078:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:15:12"
															},
															"nodeType": "YulIf",
															"src": "4075:35:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4119:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4134:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4142:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:15:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4123:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4210:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4231:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4249:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4236:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4236:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4224:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4224:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4267:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4278:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4283:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4274:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4274:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4267:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4165:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4170:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4162:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4178:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4180:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4191:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4196:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4187:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4187:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4180:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4158:3:12",
																"statements": []
															},
															"src": "4154:142:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4305:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4314:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4305:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3640:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3648:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3656:5:12",
														"type": ""
													}
												],
												"src": "3602:724:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4432:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4441:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4444:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4434:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4434:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4411:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4419:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4407:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4407:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4426:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:35:12"
															},
															"nodeType": "YulIf",
															"src": "4393:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4457:89:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4505:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4513:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4501:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4501:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4533:6:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4520:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:20:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4466:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:80:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4457:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4357:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4365:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4373:5:12",
														"type": ""
													}
												],
												"src": "4331:221:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:688:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4784:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4793:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4796:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4786:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4786:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4758:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4754:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4754:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4750:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:12"
															},
															"nodeType": "YulIf",
															"src": "4747:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4809:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4838:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4819:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4809:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4857:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4888:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4899:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4871:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4871:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4861:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4912:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4922:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4916:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4967:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4976:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4969:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4955:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4963:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4952:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:14:12"
															},
															"nodeType": "YulIf",
															"src": "4949:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4992:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5035:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5046:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5031:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5055:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5002:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:61:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5072:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5105:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5116:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5101:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5088:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5076:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5149:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5158:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5161:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5151:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5151:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5151:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5135:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5145:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5132:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:16:12"
															},
															"nodeType": "YulIf",
															"src": "5129:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5174:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5217:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5228:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5213:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5213:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5239:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5184:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:63:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5256:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5300:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5285:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5285:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5272:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:32:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5260:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5333:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5319:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5329:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5316:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:16:12"
															},
															"nodeType": "YulIf",
															"src": "5313:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5358:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5400:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5411:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5368:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:51:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4679:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4690:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4702:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4710:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4718:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4726:6:12",
														"type": ""
													}
												],
												"src": "4557:868:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:746:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5674:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5683:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5686:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5676:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5676:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5676:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5648:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5644:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5669:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:33:12"
															},
															"nodeType": "YulIf",
															"src": "5637:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5699:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5728:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5709:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5709:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5699:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5747:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5791:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5757:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5804:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5835:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5846:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5831:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5831:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5818:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5818:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5808:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5859:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5869:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5863:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5914:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5923:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5926:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5916:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5916:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5916:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5902:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5910:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5899:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:14:12"
															},
															"nodeType": "YulIf",
															"src": "5896:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5939:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5982:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5993:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5978:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6002:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5949:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:61:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5939:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6019:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6052:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6063:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6048:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6035:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6023:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6096:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6105:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6108:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6098:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6098:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6098:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6082:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6092:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6079:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:16:12"
															},
															"nodeType": "YulIf",
															"src": "6076:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6121:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6164:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6175:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6186:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6131:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6131:63:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6121:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6203:49:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6236:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6247:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6219:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:33:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6207:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6281:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6290:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6293:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6283:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6283:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6283:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6267:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6277:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6264:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:16:12"
															},
															"nodeType": "YulIf",
															"src": "6261:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6306:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6348:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6359:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6316:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:51:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5561:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5572:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5584:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5592:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5600:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5608:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5616:6:12",
														"type": ""
													}
												],
												"src": "5430:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6515:1071:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6561:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6570:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6573:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6563:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6563:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6563:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6532:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6532:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6557:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6528:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6528:32:12"
															},
															"nodeType": "YulIf",
															"src": "6525:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6586:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6613:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6600:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6590:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6632:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6642:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6636:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6687:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6696:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6699:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6689:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6689:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6689:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6675:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6683:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6672:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:14:12"
															},
															"nodeType": "YulIf",
															"src": "6669:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6712:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6726:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6737:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6722:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6716:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6792:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6801:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6804:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6794:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6794:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6794:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6771:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6775:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6767:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6767:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6782:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6763:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6756:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:35:12"
															},
															"nodeType": "YulIf",
															"src": "6753:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6817:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6840:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6827:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6821:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6852:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6862:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6856:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6875:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6925:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6885:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:43:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6879:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6937:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6951:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6941:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6989:6:12"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6997:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6969:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7009:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7020:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7013:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7042:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7050:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7035:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7035:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7035:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7062:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7073:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7081:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7062:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7093:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7115:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7126:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7119:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7111:19:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7132:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7107:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7097:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7167:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7176:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7179:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7169:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7169:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7169:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7150:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7158:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7147:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:19:12"
															},
															"nodeType": "YulIf",
															"src": "7144:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7192:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7207:2:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7211:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7203:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7203:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7196:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7279:92:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7300:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7324:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "7305:18:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7305:23:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7293:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7293:36:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7342:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7353:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7358:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7349:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7349:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7342:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7234:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7239:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7247:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7249:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7260:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7265:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7256:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7256:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7249:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7227:3:12",
																"statements": []
															},
															"src": "7223:148:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7380:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7390:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7405:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "7449:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7421:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7421:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7409:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7482:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7491:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7494:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7484:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7484:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7484:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7468:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7478:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7465:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:16:12"
															},
															"nodeType": "YulIf",
															"src": "7462:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7507:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7550:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7561:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7546:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7572:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7517:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6473:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6484:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6496:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6504:6:12",
														"type": ""
													}
												],
												"src": "6378:1208:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7652:374:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7662:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7682:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7676:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7676:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7666:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7704:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7709:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7697:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7725:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7735:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7729:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7764:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7755:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7748:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7776:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7794:5:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7801:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:14:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7780:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7813:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7822:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7817:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7881:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7902:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7913:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7907:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7907:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7895:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7895:26:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7895:26:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7934:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7945:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7950:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7941:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7941:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7934:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7966:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7980:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7988:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7976:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7976:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7966:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7843:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7846:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7840:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7840:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7854:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7856:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7865:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7868:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7861:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7861:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7856:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7836:3:12",
																"statements": []
															},
															"src": "7832:169:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8010:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8017:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8010:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7629:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7636:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7644:3:12",
														"type": ""
													}
												],
												"src": "7591:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8199:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8210:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8222:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8259:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8230:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8230:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8222:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8151:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8162:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8173:4:12",
														"type": ""
													}
												],
												"src": "8031:261:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8451:515:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8497:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8506:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8509:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8499:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8499:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8499:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8472:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8481:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8468:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8493:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8464:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8464:32:12"
															},
															"nodeType": "YulIf",
															"src": "8461:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8522:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8532:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8570:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8601:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8612:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8597:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8584:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8574:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8625:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8635:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8629:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8680:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8689:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8692:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8682:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8682:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8682:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8668:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8676:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8665:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:14:12"
															},
															"nodeType": "YulIf",
															"src": "8662:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8705:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8748:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8759:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8744:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8768:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8715:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:61:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8785:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8818:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8829:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8801:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8789:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8862:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8871:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8874:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8864:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8864:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8864:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8848:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8858:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8845:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8845:16:12"
															},
															"nodeType": "YulIf",
															"src": "8842:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8887:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8930:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "8941:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8926:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8926:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8952:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8897:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8897:63:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8401:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8412:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8424:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8432:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8440:6:12",
														"type": ""
													}
												],
												"src": "8297:669:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9101:401:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9148:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9157:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9160:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9150:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9150:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9150:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9122:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9131:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9118:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9143:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9114:33:12"
															},
															"nodeType": "YulIf",
															"src": "9111:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9173:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9202:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9183:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9173:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9221:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9248:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9259:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9244:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9244:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9231:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9272:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9299:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9310:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9295:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9282:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9282:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9323:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9354:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9365:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9350:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9350:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9337:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9327:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9412:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9421:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9424:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9414:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9414:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9414:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9384:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9392:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9381:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9381:30:12"
															},
															"nodeType": "YulIf",
															"src": "9378:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9437:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9479:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9464:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9488:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9447:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9447:49:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9043:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9054:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9066:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9074:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9082:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9090:6:12",
														"type": ""
													}
												],
												"src": "8971:531:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9608:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9618:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9630:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9626:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9618:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9660:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9675:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9691:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9696:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9687:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9687:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9700:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9683:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9683:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9671:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9653:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9653:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9653:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9577:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9588:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9599:4:12",
														"type": ""
													}
												],
												"src": "9507:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9799:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9845:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9854:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9857:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9847:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9847:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9847:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9820:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9816:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9841:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:32:12"
															},
															"nodeType": "YulIf",
															"src": "9809:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9870:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9899:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9880:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9880:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9918:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9948:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9959:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9944:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9931:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9931:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9922:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10016:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10025:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10028:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10018:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10018:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10018:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9985:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10006:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9999:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9999:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9992:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9992:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9982:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9982:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:40:12"
															},
															"nodeType": "YulIf",
															"src": "9972:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10041:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10051:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10041:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9757:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9768:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9780:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9788:6:12",
														"type": ""
													}
												],
												"src": "9715:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10154:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10200:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10209:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10212:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10202:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10202:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10202:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10175:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10184:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10171:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10196:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10167:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10167:32:12"
															},
															"nodeType": "YulIf",
															"src": "10164:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10225:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10254:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10235:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10235:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10317:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10302:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10283:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10283:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10273:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10112:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10123:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10135:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10143:6:12",
														"type": ""
													}
												],
												"src": "10067:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:459:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10526:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10535:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10538:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10528:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10528:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10528:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10500:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10509:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10496:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10521:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10492:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:33:12"
															},
															"nodeType": "YulIf",
															"src": "10489:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10551:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10580:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10561:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10599:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10632:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10643:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10628:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10628:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10609:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10609:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10656:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10683:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10694:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10679:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10679:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10666:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10656:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10707:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10734:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10745:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10730:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10730:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10717:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10717:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10758:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10789:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10800:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10785:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10785:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10772:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10772:33:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10762:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10848:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10857:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10860:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10850:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10850:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10820:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10817:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:30:12"
															},
															"nodeType": "YulIf",
															"src": "10814:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10873:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10904:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10924:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10883:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10883:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10873:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10413:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10424:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10436:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10444:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10452:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10460:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10468:6:12",
														"type": ""
													}
												],
												"src": "10332:606:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11013:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11059:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11068:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11071:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11061:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11061:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11061:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11034:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11055:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11026:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11026:32:12"
															},
															"nodeType": "YulIf",
															"src": "11023:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11084:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11113:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11094:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11084:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10979:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10990:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11002:6:12",
														"type": ""
													}
												],
												"src": "10943:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11238:218:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11284:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11293:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11296:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11286:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11286:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11286:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11259:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11268:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11255:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11251:32:12"
															},
															"nodeType": "YulIf",
															"src": "11248:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11309:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11338:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11319:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11357:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11384:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11395:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11380:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11380:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11367:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11408:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11435:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11446:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11431:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11431:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "11408:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11188:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11199:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11211:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11219:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11227:6:12",
														"type": ""
													}
												],
												"src": "11134:322:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11635:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11652:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11663:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11645:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11645:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11645:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11686:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11697:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11682:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11682:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11702:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11675:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11675:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11675:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11736:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11721:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11721:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11741:34:12",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11714:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11714:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11796:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11807:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11792:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11792:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11812:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11785:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11785:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11835:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11847:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11858:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11835:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11612:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11626:4:12",
														"type": ""
													}
												],
												"src": "11461:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12047:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12064:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12075:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12057:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12057:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12057:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12098:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12109:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12094:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12114:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12087:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12087:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12137:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12148:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12133:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12133:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12153:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12126:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12126:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12126:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12197:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12209:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12220:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12205:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12197:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12024:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12038:4:12",
														"type": ""
													}
												],
												"src": "11873:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12289:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12299:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12313:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12316:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12309:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12309:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12299:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12330:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12360:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12366:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12356:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12356:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12334:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12407:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12409:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12423:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12431:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12419:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12419:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12409:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12387:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12380:26:12"
															},
															"nodeType": "YulIf",
															"src": "12377:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12497:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12518:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12525:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12530:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12521:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12521:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12511:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12511:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12511:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12562:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12565:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12555:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12555:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12555:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12590:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12593:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12583:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12583:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12583:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12453:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12476:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12484:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12473:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12450:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:38:12"
															},
															"nodeType": "YulIf",
															"src": "12447:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12269:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12278:6:12",
														"type": ""
													}
												],
												"src": "12234:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12793:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12810:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12821:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12803:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12803:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12844:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12855:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12840:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12860:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12833:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12883:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12894:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12879:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12879:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12899:34:12",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12872:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12872:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12970:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13000:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13012:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13023:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13008:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13008:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13000:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12770:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12784:4:12",
														"type": ""
													}
												],
												"src": "12619:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13212:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13229:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13222:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13222:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13222:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13263:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13274:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13259:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13279:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13252:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13252:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13302:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13313:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13298:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13298:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13318:34:12",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13291:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13291:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13291:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13373:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13384:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13369:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13369:18:12"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13389:11:12",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13362:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13362:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13362:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13410:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13422:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13433:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13418:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13418:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13410:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13189:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13203:4:12",
														"type": ""
													}
												],
												"src": "13038:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13480:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13497:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13504:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13509:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13500:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13500:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13490:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13490:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13490:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13537:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13540:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13530:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13530:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13561:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13564:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13554:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13554:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13554:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13448:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13612:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13629:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13636:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13641:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13632:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13622:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13669:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13672:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13662:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13662:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13662:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13693:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13696:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13686:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13686:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13580:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13759:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13790:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13792:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13792:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13792:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13775:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13786:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13782:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13782:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13772:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13772:17:12"
															},
															"nodeType": "YulIf",
															"src": "13769:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13821:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13832:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13839:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13828:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13828:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13821:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13741:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13751:3:12",
														"type": ""
													}
												],
												"src": "13712:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14026:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14043:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14054:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14036:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14036:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14077:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14088:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14073:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14093:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14066:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14066:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14066:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14116:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14127:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14112:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14112:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14132:34:12",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14105:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14105:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14187:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14198:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14183:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14183:18:12"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14203:11:12",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14176:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14176:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14176:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14224:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14236:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14247:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14232:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14232:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14224:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14003:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14017:4:12",
														"type": ""
													}
												],
												"src": "13852:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14436:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14453:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14464:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14446:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14446:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14446:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14487:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14498:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14483:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14483:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14503:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14476:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14476:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14476:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14526:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14537:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14522:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14522:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14542:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14515:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14515:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14515:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14597:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14608:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14593:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14593:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14613:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14586:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14631:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14643:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14654:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14639:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14631:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14413:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14427:4:12",
														"type": ""
													}
												],
												"src": "14262:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14843:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14860:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14871:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14853:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14853:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14853:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14894:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14905:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14890:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14890:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14883:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14883:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14883:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14933:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14944:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14929:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14929:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14949:34:12",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14922:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14922:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14922:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15004:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15015:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15000:18:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15020:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14993:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14993:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14993:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15033:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15045:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15056:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15041:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15041:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15033:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14820:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14834:4:12",
														"type": ""
													}
												],
												"src": "14669:397:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15245:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15262:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15273:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15255:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15255:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15255:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15296:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15307:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15292:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15292:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15312:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15285:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15285:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15285:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15335:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15346:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15331:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15331:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15351:34:12",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15324:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15324:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15406:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15417:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15402:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15402:18:12"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15422:10:12",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15395:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15395:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15395:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15442:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15454:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15465:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15450:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15450:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15442:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15222:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15236:4:12",
														"type": ""
													}
												],
												"src": "15071:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15528:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15555:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15557:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15557:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15557:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15544:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15551:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15547:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15547:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15541:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15541:13:12"
															},
															"nodeType": "YulIf",
															"src": "15538:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15586:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15597:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15600:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15593:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15586:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15511:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15514:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15520:3:12",
														"type": ""
													}
												],
												"src": "15480:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15842:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15859:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15870:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15852:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15852:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15852:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15882:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15925:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15937:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15948:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15933:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15933:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15896:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15896:56:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15886:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15972:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15983:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15968:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "15992:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16000:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15988:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15988:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15961:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15961:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15961:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16020:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16057:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "16065:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "16028:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16028:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16020:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15803:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15814:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15822:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15833:4:12",
														"type": ""
													}
												],
												"src": "15613:465:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16257:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16274:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16285:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16267:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16267:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16267:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16308:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16319:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16304:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16304:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16324:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16297:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16297:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16297:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16347:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16358:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16343:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16363:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16336:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16336:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16336:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16418:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16429:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16414:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16414:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16434:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16407:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16407:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16407:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16451:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16463:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16474:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16459:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16459:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16451:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16234:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16248:4:12",
														"type": ""
													}
												],
												"src": "16083:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16663:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16680:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16691:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16673:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16673:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16725:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16710:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16710:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16730:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16703:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16703:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16703:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16753:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16764:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16749:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16749:18:12"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16769:34:12",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16742:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16742:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16742:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16824:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16835:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16820:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16820:18:12"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16840:12:12",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16813:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16813:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16813:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16862:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16874:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16885:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16870:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16870:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16862:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16640:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16654:4:12",
														"type": ""
													}
												],
												"src": "16489:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17074:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17091:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17102:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17084:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17084:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17084:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17125:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17136:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17121:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17121:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17141:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17114:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17114:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17164:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17175:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17160:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17160:18:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17180:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17153:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17153:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17153:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17212:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17224:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17235:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17220:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17220:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17212:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17051:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17065:4:12",
														"type": ""
													}
												],
												"src": "16900:344:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17423:225:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17440:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17451:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17433:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17433:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17474:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17485:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17470:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17470:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17490:2:12",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17463:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17463:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17463:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17513:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17524:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17509:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17529:34:12",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17502:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17502:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17502:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17584:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17595:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17580:18:12"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17600:5:12",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17573:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17573:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17573:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17615:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17627:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17638:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17623:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17623:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17615:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17400:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17414:4:12",
														"type": ""
													}
												],
												"src": "17249:399:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17827:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17844:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17855:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17837:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17837:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17878:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17889:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17874:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17874:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17894:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17867:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17867:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17867:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17917:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17928:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17913:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17913:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17933:34:12",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17906:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17906:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17988:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17999:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17984:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17984:18:12"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18004:6:12",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17977:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18020:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18032:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18043:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18028:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18028:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18020:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17804:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17818:4:12",
														"type": ""
													}
												],
												"src": "17653:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18187:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18197:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18209:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18220:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18205:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18205:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18197:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18239:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18250:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18232:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18232:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18232:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18277:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18288:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18273:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18273:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18293:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18266:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18266:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18148:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18159:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18167:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18178:4:12",
														"type": ""
													}
												],
												"src": "18058:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18485:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18502:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18495:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18495:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18536:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18547:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18532:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18532:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18552:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18525:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18525:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18575:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18586:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18571:18:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18591:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18564:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18564:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18564:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18619:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18631:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18642:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18627:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18627:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18619:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18462:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18476:4:12",
														"type": ""
													}
												],
												"src": "18311:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18830:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18847:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18858:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18840:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18840:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18840:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18881:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18892:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18877:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18877:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18897:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18870:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18870:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18870:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18920:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18931:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18916:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18916:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18936:34:12",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18909:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18909:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18909:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18991:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19002:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18987:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18987:18:12"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19007:11:12",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18980:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18980:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18980:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19028:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19040:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19051:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19036:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19036:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19028:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18807:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18821:4:12",
														"type": ""
													}
												],
												"src": "18656:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19397:496:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19407:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19425:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19430:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19421:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19421:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19434:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19417:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19417:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19411:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19452:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19467:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19475:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19463:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19463:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19445:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19445:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19445:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19499:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19510:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19495:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19495:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19519:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19527:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19515:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19515:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19488:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19488:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19488:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19551:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19562:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19547:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19547:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19567:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19540:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19540:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19540:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19580:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19623:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19635:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19646:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19631:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19631:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "19594:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19594:57:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "19584:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19671:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19682:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19667:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19667:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "19691:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19699:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19687:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19687:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19660:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19660:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19660:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19719:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19762:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "19770:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "19733:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19733:44:12"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "19723:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19797:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19808:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19793:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19793:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "19818:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19826:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19814:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19814:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19786:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19786:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19786:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19846:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "19872:6:12"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "19880:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "19854:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:33:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19846:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19334:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19345:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19353:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19361:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19369:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19377:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19388:4:12",
														"type": ""
													}
												],
												"src": "19066:827:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19978:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20026:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20026:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19999:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20008:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19995:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19995:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20020:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19991:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19991:32:12"
															},
															"nodeType": "YulIf",
															"src": "19988:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20049:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20068:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20062:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20062:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "20053:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20111:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "20087:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20087:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20087:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20126:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20136:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "20126:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19944:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19955:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19967:6:12",
														"type": ""
													}
												],
												"src": "19898:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20195:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20240:85:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20269:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20272:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20275:1:12",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "20254:14:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20254:23:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20254:23:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20290:25:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20301:3:12",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20312:1:12",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20306:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20306:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "20297:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20297:18:12"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "20290:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20211:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20211:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20229:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20208:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20208:23:12"
															},
															"nodeType": "YulIf",
															"src": "20205:120:12"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "20187:3:12",
														"type": ""
													}
												],
												"src": "20152:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20383:624:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20423:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20425:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20399:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20399:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20417:4:12",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20396:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20396:26:12"
															},
															"nodeType": "YulIf",
															"src": "20393:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20441:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20459:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20453:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20453:9:12"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "20445:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20471:16:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20485:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "20481:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20481:6:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20475:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20511:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20517:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20524:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20524:16:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20542:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20520:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20520:25:12"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "20496:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20496:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20496:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20555:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20575:4:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20569:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20569:11:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "20559:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20589:26:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "20599:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20599:16:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "20593:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20624:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20634:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "20628:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20710:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20712:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20670:6:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "20678:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20667:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20667:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20690:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20698:4:12",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20686:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20686:17:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "20705:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20683:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20683:25:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20664:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20664:45:12"
															},
															"nodeType": "YulIf",
															"src": "20661:58:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20728:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20743:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20749:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20739:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20739:17:12"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "20732:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20765:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "20785:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20779:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20779:10:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20769:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20816:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20818:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20804:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "20812:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20801:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20801:14:12"
															},
															"nodeType": "YulIf",
															"src": "20798:27:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20907:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20909:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "20848:3:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20853:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20844:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20844:16:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20862:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20840:27:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "20877:4:12"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "20883:14:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20883:16:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20873:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20873:27:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20902:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20869:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20869:36:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20837:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20837:69:12"
															},
															"nodeType": "YulIf",
															"src": "20834:82:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20945:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20959:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20967:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20955:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20955:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20976:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20951:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20951:30:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "20925:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20925:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20925:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20991:10:12",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "20998:3:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20991:3:12"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20375:3:12",
														"type": ""
													}
												],
												"src": "20336:671:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21186:242:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21203:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21214:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21196:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21196:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21196:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21237:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21248:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21233:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21253:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21226:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21226:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21226:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21276:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21287:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21272:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21292:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21265:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21265:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21265:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21347:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21358:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21343:18:12"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21363:22:12",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21336:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21336:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21336:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21395:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21407:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21418:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21403:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21403:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21395:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21163:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21177:4:12",
														"type": ""
													}
												],
												"src": "21012:416:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21607:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21635:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21617:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21617:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21658:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21669:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21654:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21654:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21674:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21647:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21647:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21647:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21697:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21708:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21693:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21693:18:12"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21713:34:12",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21686:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21686:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21686:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21768:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21779:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21764:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21764:18:12"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21784:10:12",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21757:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21757:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21757:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21804:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21816:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21827:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21812:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21812:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21804:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21584:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21598:4:12",
														"type": ""
													}
												],
												"src": "21433:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22073:330:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22083:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22101:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22106:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "22097:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22097:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22110:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22093:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22093:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "22087:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22128:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22143:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22151:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22139:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22139:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22121:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22121:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22121:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22175:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22186:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22171:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22171:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "22195:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22203:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22191:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22191:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22164:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22164:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22164:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22227:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22238:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22223:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22223:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22243:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22216:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22216:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22216:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22270:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22281:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22266:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22266:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22286:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22259:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22259:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22259:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22313:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22324:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22309:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22309:19:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22330:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22302:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22302:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22302:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22343:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "22369:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22381:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22392:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22377:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22377:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "22351:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22351:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22343:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22010:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "22021:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22029:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22037:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22045:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22053:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22064:4:12",
														"type": ""
													}
												],
												"src": "21842:561:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101205760003560e01c80636b20c454116100ad578063a22cb46511610071578063a22cb46514610254578063e985e9c514610267578063f242432a146102a3578063f2fde38b146102b6578063f5298aca146102c957600080fd5b80636b20c45414610203578063715018a614610216578063731133e91461021e5780638456cb59146102315780638da5cb5b1461023957600080fd5b80631f7fdffa116100f45780631f7fdffa146101a35780632eb2c2d6146101b65780633f4ba83a146101c95780634e1273f4146101d15780635c975abb146101f157600080fd5b8062fdd58e1461012557806301ffc9a71461014b57806302fe53051461016e5780630e89341c14610183575b600080fd5b610138610133366004611680565b6102dc565b6040519081526020015b60405180910390f35b61015e6101593660046116c0565b610373565b6040519015158152602001610142565b61018161017c366004611785565b6103c5565b005b6101966101913660046117d6565b6103fb565b604051610142919061183c565b6101816101b1366004611904565b61048f565b6101816101c436600461199d565b6104cb565b610181610562565b6101e46101df366004611a47565b610596565b6040516101429190611b4d565b600354600160a01b900460ff1661015e565b610181610211366004611b60565b6106c0565b610181610708565b61018161022c366004611bd4565b61073c565b610181610772565b6003546040516001600160a01b039091168152602001610142565b610181610262366004611c29565b6107a4565b61015e610275366004611c65565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101816102b1366004611c98565b6107b3565b6101816102c4366004611cfd565b6107f8565b6101816102d7366004611d18565b610890565b60006001600160a01b03831661034d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103a457506001600160e01b031982166303a24d0760e21b145b806103bf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103ef5760405162461bcd60e51b815260040161034490611d4b565b6103f8816108d3565b50565b60606002805461040a90611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461043690611d80565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b50505050509050919050565b6003546001600160a01b031633146104b95760405162461bcd60e51b815260040161034490611d4b565b6104c5848484846108e6565b50505050565b6001600160a01b0385163314806104e757506104e78533610275565b61054e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610344565b61055b8585858585610a40565b5050505050565b6003546001600160a01b0316331461058c5760405162461bcd60e51b815260040161034490611d4b565b610594610bea565b565b606081518351146105fb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610344565b6000835167ffffffffffffffff811115610617576106176116e4565b604051908082528060200260200182016040528015610640578160200160208202803683370190505b50905060005b84518110156106b85761068b85828151811061066457610664611dbb565b602002602001015185838151811061067e5761067e611dbb565b60200260200101516102dc565b82828151811061069d5761069d611dbb565b60209081029190910101526106b181611de7565b9050610646565b509392505050565b6001600160a01b0383163314806106dc57506106dc8333610275565b6106f85760405162461bcd60e51b815260040161034490611e02565b610703838383610c87565b505050565b6003546001600160a01b031633146107325760405162461bcd60e51b815260040161034490611d4b565b6105946000610e23565b6003546001600160a01b031633146107665760405162461bcd60e51b815260040161034490611d4b565b6104c584848484610e75565b6003546001600160a01b0316331461079c5760405162461bcd60e51b815260040161034490611d4b565b610594610f5e565b6107af338383610fe6565b5050565b6001600160a01b0385163314806107cf57506107cf8533610275565b6107eb5760405162461bcd60e51b815260040161034490611e02565b61055b85858585856110c7565b6003546001600160a01b031633146108225760405162461bcd60e51b815260040161034490611d4b565b6001600160a01b0381166108875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610344565b6103f881610e23565b6001600160a01b0383163314806108ac57506108ac8333610275565b6108c85760405162461bcd60e51b815260040161034490611e02565b6107038383836111ff565b80516107af9060029060208401906115cb565b6001600160a01b03841661090c5760405162461bcd60e51b815260040161034490611e4b565b815183511461092d5760405162461bcd60e51b815260040161034490611e8c565b3361093d81600087878787611317565b60005b84518110156109d85783818151811061095b5761095b611dbb565b602002602001015160008087848151811061097857610978611dbb565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109c09190611ed4565b909155508190506109d081611de7565b915050610940565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a29929190611eec565b60405180910390a461055b81600087878787611369565b8151835114610a615760405162461bcd60e51b815260040161034490611e8c565b6001600160a01b038416610a875760405162461bcd60e51b815260040161034490611f1a565b33610a96818787878787611317565b60005b8451811015610b7c576000858281518110610ab657610ab6611dbb565b602002602001015190506000858381518110610ad457610ad4611dbb565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610b245760405162461bcd60e51b815260040161034490611f5f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610b61908490611ed4565b9250508190555050505080610b7590611de7565b9050610a99565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610bcc929190611eec565b60405180910390a4610be2818787878787611369565b505050505050565b600354600160a01b900460ff16610c3a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610344565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610cad5760405162461bcd60e51b815260040161034490611fa9565b8051825114610cce5760405162461bcd60e51b815260040161034490611e8c565b6000339050610cf181856000868660405180602001604052806000815250611317565b60005b8351811015610db6576000848281518110610d1157610d11611dbb565b602002602001015190506000848381518110610d2f57610d2f611dbb565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610d7f5760405162461bcd60e51b815260040161034490611fec565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610dae81611de7565b915050610cf4565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610e07929190611eec565b60405180910390a46040805160208101909152600090526104c5565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610e9b5760405162461bcd60e51b815260040161034490611e4b565b336000610ea7856114c5565b90506000610eb4856114c5565b9050610ec583600089858589611317565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610ef5908490611ed4565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f5583600089898989611510565b50505050505050565b600354600160a01b900460ff1615610fab5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610344565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c6a3390565b816001600160a01b0316836001600160a01b0316141561105a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610344565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166110ed5760405162461bcd60e51b815260040161034490611f1a565b3360006110f9856114c5565b90506000611106856114c5565b9050611116838989858589611317565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156111575760405162461bcd60e51b815260040161034490611f5f565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611194908490611ed4565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111f4848a8a8a8a8a611510565b505050505050505050565b6001600160a01b0383166112255760405162461bcd60e51b815260040161034490611fa9565b336000611231846114c5565b9050600061123e846114c5565b905061125e83876000858560405180602001604052806000815250611317565b6000858152602081815260408083206001600160a01b038a1684529091529020548481101561129f5760405162461bcd60e51b815260040161034490611fec565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610f55565b600354600160a01b900460ff16156113645760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610344565b610be2565b6001600160a01b0384163b15610be25760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113ad9089908990889088908890600401612030565b6020604051808303816000875af19250505080156113e8575060408051601f3d908101601f191682019092526113e59181019061208e565b60015b611495576113f46120ab565b806308c379a0141561142e57506114096120c7565b806114145750611430565b8060405162461bcd60e51b8152600401610344919061183c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610344565b6001600160e01b0319811663bc197c8160e01b14610f555760405162461bcd60e51b815260040161034490612151565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106114ff576114ff611dbb565b602090810291909101015292915050565b6001600160a01b0384163b15610be25760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906115549089908990889088908890600401612199565b6020604051808303816000875af192505050801561158f575060408051601f3d908101601f1916820190925261158c9181019061208e565b60015b61159b576113f46120ab565b6001600160e01b0319811663f23a6e6160e01b14610f555760405162461bcd60e51b815260040161034490612151565b8280546115d790611d80565b90600052602060002090601f0160209004810192826115f9576000855561163f565b82601f1061161257805160ff191683800117855561163f565b8280016001018555821561163f579182015b8281111561163f578251825591602001919060010190611624565b5061164b92915061164f565b5090565b5b8082111561164b5760008155600101611650565b80356001600160a01b038116811461167b57600080fd5b919050565b6000806040838503121561169357600080fd5b61169c83611664565b946020939093013593505050565b6001600160e01b0319811681146103f857600080fd5b6000602082840312156116d257600080fd5b81356116dd816116aa565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611720576117206116e4565b6040525050565b600067ffffffffffffffff831115611741576117416116e4565b604051611758601f8501601f1916602001826116fa565b80915083815284848401111561176d57600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561179757600080fd5b813567ffffffffffffffff8111156117ae57600080fd5b8201601f810184136117bf57600080fd5b6117ce84823560208401611727565b949350505050565b6000602082840312156117e857600080fd5b5035919050565b6000815180845260005b81811015611815576020818501810151868301820152016117f9565b81811115611827576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006116dd60208301846117ef565b600067ffffffffffffffff821115611869576118696116e4565b5060051b60200190565b600082601f83011261188457600080fd5b813560206118918261184f565b60405161189e82826116fa565b83815260059390931b85018201928281019150868411156118be57600080fd5b8286015b848110156118d957803583529183019183016118c2565b509695505050505050565b600082601f8301126118f557600080fd5b6116dd83833560208501611727565b6000806000806080858703121561191a57600080fd5b61192385611664565b9350602085013567ffffffffffffffff8082111561194057600080fd5b61194c88838901611873565b9450604087013591508082111561196257600080fd5b61196e88838901611873565b9350606087013591508082111561198457600080fd5b50611991878288016118e4565b91505092959194509250565b600080600080600060a086880312156119b557600080fd5b6119be86611664565b94506119cc60208701611664565b9350604086013567ffffffffffffffff808211156119e957600080fd5b6119f589838a01611873565b94506060880135915080821115611a0b57600080fd5b611a1789838a01611873565b93506080880135915080821115611a2d57600080fd5b50611a3a888289016118e4565b9150509295509295909350565b60008060408385031215611a5a57600080fd5b823567ffffffffffffffff80821115611a7257600080fd5b818501915085601f830112611a8657600080fd5b81356020611a938261184f565b604051611aa082826116fa565b83815260059390931b8501820192828101915089841115611ac057600080fd5b948201945b83861015611ae557611ad686611664565b82529482019490820190611ac5565b96505086013592505080821115611afb57600080fd5b50611b0885828601611873565b9150509250929050565b600081518084526020808501945080840160005b83811015611b4257815187529582019590820190600101611b26565b509495945050505050565b6020815260006116dd6020830184611b12565b600080600060608486031215611b7557600080fd5b611b7e84611664565b9250602084013567ffffffffffffffff80821115611b9b57600080fd5b611ba787838801611873565b93506040860135915080821115611bbd57600080fd5b50611bca86828701611873565b9150509250925092565b60008060008060808587031215611bea57600080fd5b611bf385611664565b93506020850135925060408501359150606085013567ffffffffffffffff811115611c1d57600080fd5b611991878288016118e4565b60008060408385031215611c3c57600080fd5b611c4583611664565b915060208301358015158114611c5a57600080fd5b809150509250929050565b60008060408385031215611c7857600080fd5b611c8183611664565b9150611c8f60208401611664565b90509250929050565b600080600080600060a08688031215611cb057600080fd5b611cb986611664565b9450611cc760208701611664565b93506040860135925060608601359150608086013567ffffffffffffffff811115611cf157600080fd5b611a3a888289016118e4565b600060208284031215611d0f57600080fd5b6116dd82611664565b600080600060608486031215611d2d57600080fd5b611d3684611664565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680611d9457607f821691505b60208210811415611db557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611dfb57611dfb611dd1565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611ee757611ee7611dd1565b500190565b604081526000611eff6040830185611b12565b8281036020840152611f118185611b12565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061205c90830186611b12565b828103606084015261206e8186611b12565b9050828103608084015261208281856117ef565b98975050505050505050565b6000602082840312156120a057600080fd5b81516116dd816116aa565b600060033d11156120c45760046000803e5060005160e01c5b90565b600060443d10156120d55790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561210557505050505090565b828501915081518181111561211d5750505050505090565b843d87010160208285010111156121375750505050505090565b612146602082860101876116fa565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906121d3908301846117ef565b97965050505050505056fea2646970667358221220394d42a863720e48913aba1e1e6ae9b9090e3f282e5084899b74d0507ca6032f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1904 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x199D JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x181 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x34D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3A4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3BF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x3F8 DUP2 PUSH2 0x8D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40A SWAP1 PUSH2 0x1D80 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x483 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x458 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x483 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x466 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x4C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x8E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4E7 JUMPI POP PUSH2 0x4E7 DUP6 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA40 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH2 0xBEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH2 0x617 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x68B DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x69D JUMPI PUSH2 0x69D PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6B1 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x646 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x6DC JUMPI POP PUSH2 0x6DC DUP4 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0xC87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH1 0x0 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x4C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x594 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x7AF CALLER DUP4 DUP4 PUSH2 0xFE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7CF JUMPI POP PUSH2 0x7CF DUP6 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x55B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0x3F8 DUP2 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x8AC JUMPI POP PUSH2 0x8AC DUP4 CALLER PUSH2 0x275 JUMP JUMPDEST PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0x11FF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x7AF SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST CALLER PUSH2 0x93D DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x95B JUMPI PUSH2 0x95B PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH2 0x978 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x940 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x55B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1369 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CALLER PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAD4 JUMPI PUSH2 0xAD4 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xB24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB61 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xB75 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA99 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBCC SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBE2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1369 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xCF1 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD11 JUMPI PUSH2 0xD11 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI PUSH2 0xD2F PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xDAE DUP2 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCF4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xEA7 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEB4 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC5 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xEF5 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF55 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1510 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC6A CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10F9 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1106 DUP6 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1116 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1194 SWAP1 DUP5 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F4 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1510 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1231 DUP5 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123E DUP5 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x125E DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x13AD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1495 JUMPI PUSH2 0x13F4 PUSH2 0x20AB JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x142E JUMPI POP PUSH2 0x1409 PUSH2 0x20C7 JUMP JUMPDEST DUP1 PUSH2 0x1414 JUMPI POP PUSH2 0x1430 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FF PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1554 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x158F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x158C SWAP2 DUP2 ADD SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x159B JUMPI PUSH2 0x13F4 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0x2151 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x15D7 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x163F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1612 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x163F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x163F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x163F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1624 JUMP JUMPDEST POP PUSH2 0x164B SWAP3 SWAP2 POP PUSH2 0x164F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1650 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169C DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16DD DUP2 PUSH2 0x16AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1758 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1727 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x17F9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x16E4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1891 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189E DUP3 DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x18D9 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18C2 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1923 DUP6 PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194C DUP9 DUP4 DUP10 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196E DUP9 DUP4 DUP10 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BE DUP7 PUSH2 0x1664 JUMP JUMPDEST SWAP5 POP PUSH2 0x19CC PUSH1 0x20 DUP8 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19F5 DUP10 DUP4 DUP11 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A17 DUP10 DUP4 DUP11 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3A DUP9 DUP3 DUP10 ADD PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1A93 DUP3 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA0 DUP3 DUP3 PUSH2 0x16FA JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1AE5 JUMPI PUSH2 0x1AD6 DUP7 PUSH2 0x1664 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B08 DUP6 DUP3 DUP7 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B26 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7E DUP5 PUSH2 0x1664 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA7 DUP8 DUP4 DUP9 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BF3 DUP6 PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C45 DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C81 DUP4 PUSH2 0x1664 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8F PUSH1 0x20 DUP5 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB9 DUP7 PUSH2 0x1664 JUMP JUMPDEST SWAP5 POP PUSH2 0x1CC7 PUSH1 0x20 DUP8 ADD PUSH2 0x1664 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3A DUP9 DUP3 DUP10 ADD PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP3 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D36 DUP5 PUSH2 0x1664 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DFB JUMPI PUSH2 0x1DFB PUSH2 0x1DD1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x1DD1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B12 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F11 DUP2 DUP6 PUSH2 0x1B12 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x205C SWAP1 DUP4 ADD DUP7 PUSH2 0x1B12 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x206E DUP2 DUP7 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2082 DUP2 DUP6 PUSH2 0x17EF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x20C4 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20D5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2105 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x211D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2137 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x16FA JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21D3 SWAP1 DUP4 ADD DUP5 PUSH2 0x17EF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x4D TIMESTAMP 0xA8 PUSH4 0x720E4891 GASPRICE 0xBA 0x1E 0x1E PUSH11 0xE9B9090E3F282E5084899B PUSH21 0xD0507CA6032F64736F6C634300080B003300000000 ",
							"sourceMap": "366:1103:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:12;;;585:2;570:18;2185:228:2;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:12;;1177:22;1159:41;;1147:2;1132:18;1236:305:2;1019:187:12;594:87:11;;;;;;:::i;:::-;;:::i;:::-;;1940:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;991:186:11:-;;;;;;:::i;:::-;;:::i;4060:430:2:-;;;;;;:::i;:::-;;:::i;752:63:11:-;;;:::i;2570:508:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1098:84:1:-;1168:7;;-1:-1:-1;;;1168:7:1;;;;1098:84;;709:342:5;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;821:164:11:-;;;;;;:::i;:::-;;:::i;687:59::-;;;:::i;1036:85:0:-;1108:6;;1036:85;;-1:-1:-1;;;;;1108:6:0;;;9653:51:12;;9641:2;9626:18;1036:85:0;9507:203:12;3146:153:2;;;;;;:::i;:::-;;:::i;3366:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3488:27:2;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;393:310:5:-;;;;;;:::i;:::-;;:::i;2185:228:2:-;2271:7;-1:-1:-1;;;;;2298:21:2;;2290:77;;;;-1:-1:-1;;;2290:77:2;;11663:2:12;2290:77:2;;;11645:21:12;11702:2;11682:18;;;11675:30;11741:34;11721:18;;;11714:62;-1:-1:-1;;;11792:18:12;;;11785:41;11843:19;;2290:77:2;;;;;;;;;-1:-1:-1;2384:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2384:22:2;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:2;;-1:-1:-1;;;1373:41:2;;:109;;-1:-1:-1;;;;;;;1430:52:2;;-1:-1:-1;;;1430:52:2;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:2;1354:180;1236:305;-1:-1:-1;;1236:305:2:o;594:87:11:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;659:15:11::1;667:6;659:7;:15::i;:::-;594:87:::0;:::o;1940:103:2:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;991:186:11:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1136:34:11::1;1147:2;1151:3;1156:7;1165:4;1136:10;:34::i;:::-;991:186:::0;;;;:::o;4060:430:2:-;-1:-1:-1;;;;;4285:20:2;;719:10:8;4285:20:2;;:60;;-1:-1:-1;4309:36:2;4326:4;719:10:8;3366:166:2;:::i;4309:36::-;4264:157;;;;-1:-1:-1;;;4264:157:2;;12821:2:12;4264:157:2;;;12803:21:12;12860:2;12840:18;;;12833:30;12899:34;12879:18;;;12872:62;-1:-1:-1;;;12950:18:12;;;12943:48;13008:19;;4264:157:2;12619:414:12;4264:157:2;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;752:63:11:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;798:10:11::1;:8;:10::i;:::-;752:63::o:0;2570:508:2:-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;-1:-1:-1;;;2753:83:2;;13240:2:12;2753:83:2;;;13222:21:12;13279:2;13259:18;;;13252:30;13318:34;13298:18;;;13291:62;-1:-1:-1;;;13369:18:12;;;13362:39;13418:19;;2753:83:2;13038:405:12;2753:83:2;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:2;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:2;2570:508;-1:-1:-1;;;2570:508:2:o;709:342:5:-;-1:-1:-1;;;;;868:23:5;;719:10:8;868:23:5;;:66;;-1:-1:-1;895:39:5;912:7;719:10:8;3366:166:2;:::i;895:39:5:-;847:154;;;;-1:-1:-1;;;847:154:5;;;;;;;:::i;:::-;1012:32;1023:7;1032:3;1037:6;1012:10;:32::i;:::-;709:342;;;:::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;821:164:11:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;946:32:11::1;952:7;961:2;965:6;973:4;946:5;:32::i;687:59::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;731:8:11::1;:6;:8::i;3146:153:2:-:0;3240:52;719:10:8;3273:8:2;3283;3240:18;:52::i;:::-;3146:153;;:::o;3599:389::-;-1:-1:-1;;;;;3799:20:2;;719:10:8;3799:20:2;;:60;;-1:-1:-1;3823:36:2;3840:4;719:10:8;3366:166:2;:::i;3823:36::-;3778:148;;;;-1:-1:-1;;;3778:148:2;;;;;;;:::i;:::-;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;14464:2:12;1998:73:0::1;::::0;::::1;14446:21:12::0;14503:2;14483:18;;;14476:30;14542:34;14522:18;;;14515:62;-1:-1:-1;;;14593:18:12;;;14586:36;14639:19;;1998:73:0::1;14262:402:12::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;393:310:5:-:0;-1:-1:-1;;;;;527:23:5;;719:10:8;527:23:5;;:66;;-1:-1:-1;554:39:5;571:7;719:10:8;3366:166:2;:::i;554:39:5:-;506:154;;;;-1:-1:-1;;;506:154:5;;;;;;;:::i;:::-;671:25;677:7;686:2;690:5;671;:25::i;8171:86:2:-;8237:13;;;;:4;;:13;;;;;:::i;9684:791::-;-1:-1:-1;;;;;9856:16:2;;9848:62;;;;-1:-1:-1;;;9848:62:2;;;;;;;:::i;:::-;9942:7;:14;9928:3;:10;:28;9920:81;;;;-1:-1:-1;;;9920:81:2;;;;;;;:::i;:::-;719:10:8;10054:66:2;719:10:8;10012:16:2;10097:2;10101:3;10106:7;10115:4;10054:20;:66::i;:::-;10136:9;10131:101;10155:3;:10;10151:1;:14;10131:101;;;10211:7;10219:1;10211:10;;;;;;;;:::i;:::-;;;;;;;10186:9;:17;10196:3;10200:1;10196:6;;;;;;;;:::i;:::-;;;;;;;10186:17;;;;;;;;;;;:21;10204:2;-1:-1:-1;;;;;10186:21:2;-1:-1:-1;;;;;10186:21:2;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10167:3:2;;-1:-1:-1;10167:3:2;;;:::i;:::-;;;;10131:101;;;;10283:2;-1:-1:-1;;;;;10247:53:2;10279:1;-1:-1:-1;;;;;10247:53:2;10261:8;-1:-1:-1;;;;;10247:53:2;;10287:3;10292:7;10247:53;;;;;;;:::i;:::-;;;;;;;;10387:81;10423:8;10441:1;10445:2;10449:3;10454:7;10463:4;10387:35;:81::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6530:16:2;;6522:66;;;;-1:-1:-1;;;6522:66:2;;;;;;;:::i;:::-;719:10:8;6641:60:2;719:10:8;6672:4:2;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:2;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:2;;;;6897:76;;;;-1:-1:-1;;;6897:76:2;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:2;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:2;7162:4;-1:-1:-1;;;;;7138:47:2;7152:8;-1:-1:-1;;;;;7138:47:2;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;2110:117:1:-;1168:7;;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;17102:2:12;1669:41:1;;;17084:21:12;17141:2;17121:18;;;17114:30;-1:-1:-1;;;17160:18:12;;;17153:50;17220:18;;1669:41:1;16900:344:12;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:8::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;9671:32:12;;;9653:51;;9641:2;9626:18;2198:22:1::1;;;;;;;2110:117::o:0;11695:943:2:-;-1:-1:-1;;;;;11842:18:2;;11834:66;;;;-1:-1:-1;;;11834:66:2;;;;;;;:::i;:::-;11932:7;:14;11918:3;:10;:28;11910:81;;;;-1:-1:-1;;;11910:81:2;;;;;;;:::i;:::-;12002:16;719:10:8;12002:31:2;;12044:66;12065:8;12075:4;12089:1;12093:3;12098:7;12044:66;;;;;;;;;;;;:20;:66::i;:::-;12126:9;12121:364;12145:3;:10;12141:1;:14;12121:364;;;12176:10;12189:3;12193:1;12189:6;;;;;;;;:::i;:::-;;;;;;;12176:19;;12209:14;12226:7;12234:1;12226:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12251:19;12273:13;;;;;;;;;;-1:-1:-1;;;;;12273:19:2;;;;;;;;;;;;12226:10;;-1:-1:-1;12314:21:2;;;;12306:70;;;;-1:-1:-1;;;12306:70:2;;;;;;;:::i;:::-;12418:9;:13;;;;;;;;;;;-1:-1:-1;;;;;12418:19:2;;;;;;;;;;12440:20;;12418:42;;12157:3;;;;:::i;:::-;;;;12121:364;;;;12538:1;-1:-1:-1;;;;;12500:55:2;12524:4;-1:-1:-1;;;;;12500:55:2;12514:8;-1:-1:-1;;;;;12500:55:2;;12542:3;12547:7;12500:55;;;;;;;:::i;:::-;;;;;;;;12566:65;;;;;;;;;12610:1;12566:65;;;6233:1115;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8630:709:2:-;-1:-1:-1;;;;;8777:16:2;;8769:62;;;;-1:-1:-1;;;8769:62:2;;;;;;;:::i;:::-;719:10:8;8842:16:2;8906:21;8924:2;8906:17;:21::i;:::-;8883:44;;8937:24;8964:25;8982:6;8964:17;:25::i;:::-;8937:52;;9000:66;9021:8;9039:1;9043:2;9047:3;9052:7;9061:4;9000:20;:66::i;:::-;9077:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9077:17:2;;;;;;;;;:27;;9098:6;;9077:9;:27;;9098:6;;9077:27;:::i;:::-;;;;-1:-1:-1;;9119:52:2;;;18232:25:12;;;18288:2;18273:18;;18266:34;;;-1:-1:-1;;;;;9119:52:2;;;;9152:1;;9119:52;;;;;;18205:18:12;9119:52:2;;;;;;;9258:74;9289:8;9307:1;9311:2;9315;9319:6;9327:4;9258:30;:74::i;:::-;8759:580;;;8630:709;;;;:::o;1863:115:1:-;1168:7;;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;18513:2:12;1403:38:1;;;18495:21:12;18552:2;18532:18;;;18525:30;-1:-1:-1;;;18571:18:12;;;18564:46;18627:18;;1403:38:1;18311:340:12;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:8::0;;640:96;12773:323:2;12923:8;-1:-1:-1;;;;;12914:17:2;:5;-1:-1:-1;;;;;12914:17:2;;;12906:71;;;;-1:-1:-1;;;12906:71:2;;18858:2:12;12906:71:2;;;18840:21:12;18897:2;18877:18;;;18870:30;18936:34;18916:18;;;18909:62;-1:-1:-1;;;18987:18:12;;;18980:39;19036:19;;12906:71:2;18656:405:12;12906:71:2;-1:-1:-1;;;;;12987:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12987:46:2;;;;;;;;;;13048:41;;1159::12;;;13048::2;;1132:18:12;13048:41:2;;;;;;;12773:323;;;:::o;4940:947::-;-1:-1:-1;;;;;5121:16:2;;5113:66;;;;-1:-1:-1;;;5113:66:2;;;;;;;:::i;:::-;719:10:8;5190:16:2;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:2;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:2;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:2;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:2;;;18232:25:12;;;18288:2;18273:18;;18266:34;;;-1:-1:-1;;;;;5685:46:2;;;;;;;;;;;;;;18205:18:12;5685:46:2;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;10715:786::-;-1:-1:-1;;;;;10837:18:2;;10829:66;;;;-1:-1:-1;;;10829:66:2;;;;;;;:::i;:::-;719:10:8;10906:16:2;10970:21;10988:2;10970:17;:21::i;:::-;10947:44;;11001:24;11028:25;11046:6;11028:17;:25::i;:::-;11001:52;;11064:66;11085:8;11095:4;11109:1;11113:3;11118:7;11064:66;;;;;;;;;;;;:20;:66::i;:::-;11141:19;11163:13;;;;;;;;;;;-1:-1:-1;;;;;11163:19:2;;;;;;;;;;11200:21;;;;11192:70;;;;-1:-1:-1;;;11192:70:2;;;;;;;:::i;:::-;11296:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11296:19:2;;;;;;;;;;;;11318:20;;;11296:42;;11364:54;;18232:25:12;;;18273:18;;;18266:34;;;11296:19:2;;11364:54;;;;;;18205:18:12;11364:54:2;;;;;;;11429:65;;;;;;;;;11473:1;11429:65;;;6233:1115;1183:284:11;1168:7:1;;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;18513:2:12;1403:38:1;;;18495:21:12;18552:2;18532:18;;;18525:30;-1:-1:-1;;;18571:18:12;;;18564:46;18627:18;;1403:38:1;18311:340:12;1403:38:1;1394:66:11::1;6233:1115:2::0;16127:792;-1:-1:-1;;;;;16359:13:2;;1465:19:7;:23;16355:558:2;;16394:79;;-1:-1:-1;;;16394:79:2;;-1:-1:-1;;;;;16394:43:2;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:2;;;;;;;;-1:-1:-1;;16394:79:2;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;-1:-1:-1;;;16772:14:2;;;;;;;;:::i;16390:513::-;;;16826:62;;-1:-1:-1;;;16826:62:2;;21214:2:12;16826:62:2;;;21196:21:12;21253:2;21233:18;;;21226:30;21292:34;21272:18;;;21265:62;-1:-1:-1;;;21343:18:12;;;21336:50;21403:19;;16826:62:2;21012:416:12;16390:513:2;-1:-1:-1;;;;;;16552:60:2;;-1:-1:-1;;;16552:60:2;16548:157;;16636:50;;-1:-1:-1;;;16636:50:2;;;;;;;:::i;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:2;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:2:o;15396:725::-;-1:-1:-1;;;;;15603:13:2;;1465:19:7;:23;15599:516:2;;15638:72;;-1:-1:-1;;;15638:72:2;;-1:-1:-1;;;;;15638:38:2;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:2;;;;;;;;-1:-1:-1;;15638:72:2;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;-1:-1:-1;;;;;;15759:55:2;;-1:-1:-1;;;15759:55:2;15755:152;;15838:50;;-1:-1:-1;;;15838:50:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:12;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;633:131::-;-1:-1:-1;;;;;;707:32:12;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:12:o;1211:127::-;1272:10;1267:3;1263:20;1260:1;1253:31;1303:4;1300:1;1293:15;1327:4;1324:1;1317:15;1343:249;1453:2;1434:13;;-1:-1:-1;;1430:27:12;1418:40;;1488:18;1473:34;;1509:22;;;1470:62;1467:88;;;1535:18;;:::i;:::-;1571:2;1564:22;-1:-1:-1;;1343:249:12:o;1597:469::-;1662:5;1696:18;1688:6;1685:30;1682:56;;;1718:18;;:::i;:::-;1767:2;1761:9;1779:69;1836:2;1815:15;;-1:-1:-1;;1811:29:12;1842:4;1807:40;1761:9;1779:69;:::i;:::-;1866:6;1857:15;;1896:6;1888;1881:22;1936:3;1927:6;1922:3;1918:16;1915:25;1912:45;;;1953:1;1950;1943:12;1912:45;2003:6;1998:3;1991:4;1983:6;1979:17;1966:44;2058:1;2051:4;2042:6;2034;2030:19;2026:30;2019:41;;1597:469;;;;;:::o;2071:451::-;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;2282:18;2274:6;2271:30;2268:50;;;2314:1;2311;2304:12;2268:50;2337:22;;2390:4;2382:13;;2378:27;-1:-1:-1;2368:55:12;;2419:1;2416;2409:12;2368:55;2442:74;2508:7;2503:2;2490:16;2485:2;2481;2477:11;2442:74;:::i;:::-;2432:84;2071:451;-1:-1:-1;;;;2071:451:12:o;2527:180::-;2586:6;2639:2;2627:9;2618:7;2614:23;2610:32;2607:52;;;2655:1;2652;2645:12;2607:52;-1:-1:-1;2678:23:12;;2527:180;-1:-1:-1;2527:180:12:o;2712:472::-;2754:3;2792:5;2786:12;2819:6;2814:3;2807:19;2844:1;2854:162;2868:6;2865:1;2862:13;2854:162;;;2930:4;2986:13;;;2982:22;;2976:29;2958:11;;;2954:20;;2947:59;2883:12;2854:162;;;3034:6;3031:1;3028:13;3025:87;;;3100:1;3093:4;3084:6;3079:3;3075:16;3071:27;3064:38;3025:87;-1:-1:-1;3166:2:12;3145:15;-1:-1:-1;;3141:29:12;3132:39;;;;3173:4;3128:50;;2712:472;-1:-1:-1;;2712:472:12:o;3189:220::-;3338:2;3327:9;3320:21;3301:4;3358:45;3399:2;3388:9;3384:18;3376:6;3358:45;:::i;3414:183::-;3474:4;3507:18;3499:6;3496:30;3493:56;;;3529:18;;:::i;:::-;-1:-1:-1;3574:1:12;3570:14;3586:4;3566:25;;3414:183::o;3602:724::-;3656:5;3709:3;3702:4;3694:6;3690:17;3686:27;3676:55;;3727:1;3724;3717:12;3676:55;3763:6;3750:20;3789:4;3812:43;3852:2;3812:43;:::i;:::-;3884:2;3878:9;3896:31;3924:2;3916:6;3896:31;:::i;:::-;3962:18;;;4054:1;4050:10;;;;4038:23;;4034:32;;;3996:15;;;;-1:-1:-1;4078:15:12;;;4075:35;;;4106:1;4103;4096:12;4075:35;4142:2;4134:6;4130:15;4154:142;4170:6;4165:3;4162:15;4154:142;;;4236:17;;4224:30;;4274:12;;;;4187;;4154:142;;;-1:-1:-1;4314:6:12;3602:724;-1:-1:-1;;;;;;3602:724:12:o;4331:221::-;4373:5;4426:3;4419:4;4411:6;4407:17;4403:27;4393:55;;4444:1;4441;4434:12;4393:55;4466:80;4542:3;4533:6;4520:20;4513:4;4505:6;4501:17;4466:80;:::i;4557:868::-;4702:6;4710;4718;4726;4779:3;4767:9;4758:7;4754:23;4750:33;4747:53;;;4796:1;4793;4786:12;4747:53;4819:29;4838:9;4819:29;:::i;:::-;4809:39;;4899:2;4888:9;4884:18;4871:32;4922:18;4963:2;4955:6;4952:14;4949:34;;;4979:1;4976;4969:12;4949:34;5002:61;5055:7;5046:6;5035:9;5031:22;5002:61;:::i;:::-;4992:71;;5116:2;5105:9;5101:18;5088:32;5072:48;;5145:2;5135:8;5132:16;5129:36;;;5161:1;5158;5151:12;5129:36;5184:63;5239:7;5228:8;5217:9;5213:24;5184:63;:::i;:::-;5174:73;;5300:2;5289:9;5285:18;5272:32;5256:48;;5329:2;5319:8;5316:16;5313:36;;;5345:1;5342;5335:12;5313:36;;5368:51;5411:7;5400:8;5389:9;5385:24;5368:51;:::i;:::-;5358:61;;;4557:868;;;;;;;:::o;5430:943::-;5584:6;5592;5600;5608;5616;5669:3;5657:9;5648:7;5644:23;5640:33;5637:53;;;5686:1;5683;5676:12;5637:53;5709:29;5728:9;5709:29;:::i;:::-;5699:39;;5757:38;5791:2;5780:9;5776:18;5757:38;:::i;:::-;5747:48;;5846:2;5835:9;5831:18;5818:32;5869:18;5910:2;5902:6;5899:14;5896:34;;;5926:1;5923;5916:12;5896:34;5949:61;6002:7;5993:6;5982:9;5978:22;5949:61;:::i;:::-;5939:71;;6063:2;6052:9;6048:18;6035:32;6019:48;;6092:2;6082:8;6079:16;6076:36;;;6108:1;6105;6098:12;6076:36;6131:63;6186:7;6175:8;6164:9;6160:24;6131:63;:::i;:::-;6121:73;;6247:3;6236:9;6232:19;6219:33;6203:49;;6277:2;6267:8;6264:16;6261:36;;;6293:1;6290;6283:12;6261:36;;6316:51;6359:7;6348:8;6337:9;6333:24;6316:51;:::i;:::-;6306:61;;;5430:943;;;;;;;;:::o;6378:1208::-;6496:6;6504;6557:2;6545:9;6536:7;6532:23;6528:32;6525:52;;;6573:1;6570;6563:12;6525:52;6613:9;6600:23;6642:18;6683:2;6675:6;6672:14;6669:34;;;6699:1;6696;6689:12;6669:34;6737:6;6726:9;6722:22;6712:32;;6782:7;6775:4;6771:2;6767:13;6763:27;6753:55;;6804:1;6801;6794:12;6753:55;6840:2;6827:16;6862:4;6885:43;6925:2;6885:43;:::i;:::-;6957:2;6951:9;6969:31;6997:2;6989:6;6969:31;:::i;:::-;7035:18;;;7123:1;7119:10;;;;7111:19;;7107:28;;;7069:15;;;;-1:-1:-1;7147:19:12;;;7144:39;;;7179:1;7176;7169:12;7144:39;7203:11;;;;7223:148;7239:6;7234:3;7231:15;7223:148;;;7305:23;7324:3;7305:23;:::i;:::-;7293:36;;7256:12;;;;7349;;;;7223:148;;;7390:6;-1:-1:-1;;7434:18:12;;7421:32;;-1:-1:-1;;7465:16:12;;;7462:36;;;7494:1;7491;7484:12;7462:36;;7517:63;7572:7;7561:8;7550:9;7546:24;7517:63;:::i;:::-;7507:73;;;6378:1208;;;;;:::o;7591:435::-;7644:3;7682:5;7676:12;7709:6;7704:3;7697:19;7735:4;7764:2;7759:3;7755:12;7748:19;;7801:2;7794:5;7790:14;7822:1;7832:169;7846:6;7843:1;7840:13;7832:169;;;7907:13;;7895:26;;7941:12;;;;7976:15;;;;7868:1;7861:9;7832:169;;;-1:-1:-1;8017:3:12;;7591:435;-1:-1:-1;;;;;7591:435:12:o;8031:261::-;8210:2;8199:9;8192:21;8173:4;8230:56;8282:2;8271:9;8267:18;8259:6;8230:56;:::i;8297:669::-;8424:6;8432;8440;8493:2;8481:9;8472:7;8468:23;8464:32;8461:52;;;8509:1;8506;8499:12;8461:52;8532:29;8551:9;8532:29;:::i;:::-;8522:39;;8612:2;8601:9;8597:18;8584:32;8635:18;8676:2;8668:6;8665:14;8662:34;;;8692:1;8689;8682:12;8662:34;8715:61;8768:7;8759:6;8748:9;8744:22;8715:61;:::i;:::-;8705:71;;8829:2;8818:9;8814:18;8801:32;8785:48;;8858:2;8848:8;8845:16;8842:36;;;8874:1;8871;8864:12;8842:36;;8897:63;8952:7;8941:8;8930:9;8926:24;8897:63;:::i;:::-;8887:73;;;8297:669;;;;;:::o;8971:531::-;9066:6;9074;9082;9090;9143:3;9131:9;9122:7;9118:23;9114:33;9111:53;;;9160:1;9157;9150:12;9111:53;9183:29;9202:9;9183:29;:::i;:::-;9173:39;;9259:2;9248:9;9244:18;9231:32;9221:42;;9310:2;9299:9;9295:18;9282:32;9272:42;;9365:2;9354:9;9350:18;9337:32;9392:18;9384:6;9381:30;9378:50;;;9424:1;9421;9414:12;9378:50;9447:49;9488:7;9479:6;9468:9;9464:22;9447:49;:::i;9715:347::-;9780:6;9788;9841:2;9829:9;9820:7;9816:23;9812:32;9809:52;;;9857:1;9854;9847:12;9809:52;9880:29;9899:9;9880:29;:::i;:::-;9870:39;;9959:2;9948:9;9944:18;9931:32;10006:5;9999:13;9992:21;9985:5;9982:32;9972:60;;10028:1;10025;10018:12;9972:60;10051:5;10041:15;;;9715:347;;;;;:::o;10067:260::-;10135:6;10143;10196:2;10184:9;10175:7;10171:23;10167:32;10164:52;;;10212:1;10209;10202:12;10164:52;10235:29;10254:9;10235:29;:::i;:::-;10225:39;;10283:38;10317:2;10306:9;10302:18;10283:38;:::i;:::-;10273:48;;10067:260;;;;;:::o;10332:606::-;10436:6;10444;10452;10460;10468;10521:3;10509:9;10500:7;10496:23;10492:33;10489:53;;;10538:1;10535;10528:12;10489:53;10561:29;10580:9;10561:29;:::i;:::-;10551:39;;10609:38;10643:2;10632:9;10628:18;10609:38;:::i;:::-;10599:48;;10694:2;10683:9;10679:18;10666:32;10656:42;;10745:2;10734:9;10730:18;10717:32;10707:42;;10800:3;10789:9;10785:19;10772:33;10828:18;10820:6;10817:30;10814:50;;;10860:1;10857;10850:12;10814:50;10883:49;10924:7;10915:6;10904:9;10900:22;10883:49;:::i;10943:186::-;11002:6;11055:2;11043:9;11034:7;11030:23;11026:32;11023:52;;;11071:1;11068;11061:12;11023:52;11094:29;11113:9;11094:29;:::i;11134:322::-;11211:6;11219;11227;11280:2;11268:9;11259:7;11255:23;11251:32;11248:52;;;11296:1;11293;11286:12;11248:52;11319:29;11338:9;11319:29;:::i;:::-;11309:39;11395:2;11380:18;;11367:32;;-1:-1:-1;11446:2:12;11431:18;;;11418:32;;11134:322;-1:-1:-1;;;11134:322:12:o;11873:356::-;12075:2;12057:21;;;12094:18;;;12087:30;12153:34;12148:2;12133:18;;12126:62;12220:2;12205:18;;11873:356::o;12234:380::-;12313:1;12309:12;;;;12356;;;12377:61;;12431:4;12423:6;12419:17;12409:27;;12377:61;12484:2;12476:6;12473:14;12453:18;12450:38;12447:161;;;12530:10;12525:3;12521:20;12518:1;12511:31;12565:4;12562:1;12555:15;12593:4;12590:1;12583:15;12447:161;;12234:380;;;:::o;13448:127::-;13509:10;13504:3;13500:20;13497:1;13490:31;13540:4;13537:1;13530:15;13564:4;13561:1;13554:15;13580:127;13641:10;13636:3;13632:20;13629:1;13622:31;13672:4;13669:1;13662:15;13696:4;13693:1;13686:15;13712:135;13751:3;-1:-1:-1;;13772:17:12;;13769:43;;;13792:18;;:::i;:::-;-1:-1:-1;13839:1:12;13828:13;;13712:135::o;13852:405::-;14054:2;14036:21;;;14093:2;14073:18;;;14066:30;14132:34;14127:2;14112:18;;14105:62;-1:-1:-1;;;14198:2:12;14183:18;;14176:39;14247:3;14232:19;;13852:405::o;14669:397::-;14871:2;14853:21;;;14910:2;14890:18;;;14883:30;14949:34;14944:2;14929:18;;14922:62;-1:-1:-1;;;15015:2:12;15000:18;;14993:31;15056:3;15041:19;;14669:397::o;15071:404::-;15273:2;15255:21;;;15312:2;15292:18;;;15285:30;15351:34;15346:2;15331:18;;15324:62;-1:-1:-1;;;15417:2:12;15402:18;;15395:38;15465:3;15450:19;;15071:404::o;15480:128::-;15520:3;15551:1;15547:6;15544:1;15541:13;15538:39;;;15557:18;;:::i;:::-;-1:-1:-1;15593:9:12;;15480:128::o;15613:465::-;15870:2;15859:9;15852:21;15833:4;15896:56;15948:2;15937:9;15933:18;15925:6;15896:56;:::i;:::-;16000:9;15992:6;15988:22;15983:2;15972:9;15968:18;15961:50;16028:44;16065:6;16057;16028:44;:::i;:::-;16020:52;15613:465;-1:-1:-1;;;;;15613:465:12:o;16083:401::-;16285:2;16267:21;;;16324:2;16304:18;;;16297:30;16363:34;16358:2;16343:18;;16336:62;-1:-1:-1;;;16429:2:12;16414:18;;16407:35;16474:3;16459:19;;16083:401::o;16489:406::-;16691:2;16673:21;;;16730:2;16710:18;;;16703:30;16769:34;16764:2;16749:18;;16742:62;-1:-1:-1;;;16835:2:12;16820:18;;16813:40;16885:3;16870:19;;16489:406::o;17249:399::-;17451:2;17433:21;;;17490:2;17470:18;;;17463:30;17529:34;17524:2;17509:18;;17502:62;-1:-1:-1;;;17595:2:12;17580:18;;17573:33;17638:3;17623:19;;17249:399::o;17653:400::-;17855:2;17837:21;;;17894:2;17874:18;;;17867:30;17933:34;17928:2;17913:18;;17906:62;-1:-1:-1;;;17999:2:12;17984:18;;17977:34;18043:3;18028:19;;17653:400::o;19066:827::-;-1:-1:-1;;;;;19463:15:12;;;19445:34;;19515:15;;19510:2;19495:18;;19488:43;19425:3;19562:2;19547:18;;19540:31;;;19388:4;;19594:57;;19631:19;;19623:6;19594:57;:::i;:::-;19699:9;19691:6;19687:22;19682:2;19671:9;19667:18;19660:50;19733:44;19770:6;19762;19733:44;:::i;:::-;19719:58;;19826:9;19818:6;19814:22;19808:3;19797:9;19793:19;19786:51;19854:33;19880:6;19872;19854:33;:::i;:::-;19846:41;19066:827;-1:-1:-1;;;;;;;;19066:827:12:o;19898:249::-;19967:6;20020:2;20008:9;19999:7;19995:23;19991:32;19988:52;;;20036:1;20033;20026:12;19988:52;20068:9;20062:16;20087:30;20111:5;20087:30;:::i;20152:179::-;20187:3;20229:1;20211:16;20208:23;20205:120;;;20275:1;20272;20269;20254:23;-1:-1:-1;20312:1:12;20306:8;20301:3;20297:18;20205:120;20152:179;:::o;20336:671::-;20375:3;20417:4;20399:16;20396:26;20393:39;;;20336:671;:::o;20393:39::-;20459:2;20453:9;-1:-1:-1;;20524:16:12;20520:25;;20517:1;20453:9;20496:50;20575:4;20569:11;20599:16;20634:18;20705:2;20698:4;20690:6;20686:17;20683:25;20678:2;20670:6;20667:14;20664:45;20661:58;;;20712:5;;;;;20336:671;:::o;20661:58::-;20749:6;20743:4;20739:17;20728:28;;20785:3;20779:10;20812:2;20804:6;20801:14;20798:27;;;20818:5;;;;;;20336:671;:::o;20798:27::-;20902:2;20883:16;20877:4;20873:27;20869:36;20862:4;20853:6;20848:3;20844:16;20840:27;20837:69;20834:82;;;20909:5;;;;;;20336:671;:::o;20834:82::-;20925:57;20976:4;20967:6;20959;20955:19;20951:30;20945:4;20925:57;:::i;:::-;-1:-1:-1;20998:3:12;;20336:671;-1:-1:-1;;;;;20336:671:12:o;21433:404::-;21635:2;21617:21;;;21674:2;21654:18;;;21647:30;21713:34;21708:2;21693:18;;21686:62;-1:-1:-1;;;21779:2:12;21764:18;;21757:38;21827:3;21812:19;;21433:404::o;21842:561::-;-1:-1:-1;;;;;22139:15:12;;;22121:34;;22191:15;;22186:2;22171:18;;22164:43;22238:2;22223:18;;22216:34;;;22281:2;22266:18;;22259:34;;;22101:3;22324;22309:19;;22302:32;;;22064:4;;22351:46;;22377:19;;22369:6;22351:46;:::i;:::-;22343:54;21842:561;-1:-1:-1;;;;;;;21842:561:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1744800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2695",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2412",
								"pause()": "29868",
								"paused()": "2432",
								"renounceOwnership()": "28162",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "567",
								"transferOwnership(address)": "28400",
								"unpause()": "29817",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 588,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 588,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 588,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 588,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH data",
									"source": 2,
									"value": "D7DF789A1796F8A81C5300713AC4ABA6DF6782124A85E00084983604CE823747"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1469,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220394d42a863720e48913aba1e1e6ae9b9090e3f282e5084899b74d0507ca6032f64736f6c634300080b0033",
									".code": [
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "6B20C454"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "F5298ACA"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "6B20C454"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "731133E9"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "1F7FDFFA"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "1F7FDFFA"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "2EB2C2D6"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "2FE5305"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "E89341C"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 366,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 594,
											"end": 681,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 752,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 821,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 821,
											"end": 985,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 821,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 687,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9653,
											"end": 9704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9507,
											"end": 9710,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11663,
											"end": 11665,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11645,
											"end": 11666,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11704,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 11682,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11682,
											"end": 11700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11741,
											"end": 11775,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 11721,
											"end": 11739,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11721,
											"end": 11739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 11739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11785,
											"end": 11826,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11843,
											"end": 11862,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11843,
											"end": 11862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 659,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 594,
											"end": 681,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1169,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1136,
											"end": 1170,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1170,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1136,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 991,
											"end": 1177,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12803,
											"end": 12824,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12833,
											"end": 12863,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 12933,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13008,
											"end": 13027,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 13008,
											"end": 13027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 12619,
											"end": 13033,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 752,
											"end": 815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 798,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 798,
											"end": 808,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 798,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 798,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 752,
											"end": 815,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13242,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13222,
											"end": 13243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13279,
											"end": 13281,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13252,
											"end": 13282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13318,
											"end": 13352,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13291,
											"end": 13353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13362,
											"end": 13401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13418,
											"end": 13437,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 13418,
											"end": 13437,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 13038,
											"end": 13443,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 868,
											"end": 891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 868,
											"end": 891,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 868,
											"end": 891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 868,
											"end": 934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 912,
											"end": 919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 895,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1023,
											"end": 1030,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1035,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 821,
											"end": 985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 961,
											"end": 963,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 973,
											"end": 977,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 946,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 946,
											"end": 978,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 731,
											"end": 739,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14503,
											"end": 14505,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14476,
											"end": 14506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14542,
											"end": 14576,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14515,
											"end": 14577,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14639,
											"end": 14658,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14639,
											"end": 14658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14262,
											"end": 14664,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 527,
											"end": 593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 554,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 506,
											"end": 660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 671,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 686,
											"end": 688,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 671,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8171,
											"end": 8257,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8171,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9684,
											"end": 10475,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9684,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9872,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9848,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9956,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9928,
											"end": 9938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9928,
											"end": 9956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10054,
											"end": 10120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10104,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10113,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10115,
											"end": 10119,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10054,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10054,
											"end": 10120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10054,
											"end": 10120,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10054,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10145,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10158,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10151,
											"end": 10165,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10218,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10199,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10201,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10221,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10285,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10261,
											"end": 10269,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10247,
											"end": 10300,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10387,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10447,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10461,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10463,
											"end": 10467,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10387,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10387,
											"end": 10468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17102,
											"end": 17104,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17141,
											"end": 17143,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 17121,
											"end": 17139,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17121,
											"end": 17139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17114,
											"end": 17144,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17160,
											"end": 17178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17153,
											"end": 17203,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 16900,
											"end": 17244,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9703,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11695,
											"end": 12638,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 11695,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 11834,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11932,
											"end": 11946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11946,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11910,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 12065,
											"end": 12073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12044,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 12044,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12145,
											"end": 12148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12145,
											"end": 12155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12141,
											"end": 12142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12141,
											"end": 12155,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12176,
											"end": 12186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12176,
											"end": 12195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12176,
											"end": 12195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12251,
											"end": 12270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12286,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12314,
											"end": 12335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12335,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12314,
											"end": 12335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 12306,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12431,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12440,
											"end": 12460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12440,
											"end": 12460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12460,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12524,
											"end": 12528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12514,
											"end": 12522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 12542,
											"end": 12545,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12547,
											"end": 12554,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12500,
											"end": 12555,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12566,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8777,
											"end": 8793,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8777,
											"end": 8793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8883,
											"end": 8927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8883,
											"end": 8927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8964,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9000,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9021,
											"end": 9029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9039,
											"end": 9040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9047,
											"end": 9050,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9052,
											"end": 9059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9061,
											"end": 9065,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9000,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9000,
											"end": 9066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9000,
											"end": 9066,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9000,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18288,
											"end": 18290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18205,
											"end": 18223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 9289,
											"end": 9297,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9307,
											"end": 9308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18513,
											"end": 18515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18495,
											"end": 18516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18554,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18525,
											"end": 18555,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 18311,
											"end": 18651,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18858,
											"end": 18860,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18840,
											"end": 18861,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18897,
											"end": 18899,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 18877,
											"end": 18895,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18877,
											"end": 18895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18877,
											"end": 18895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18870,
											"end": 18900,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 18970,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 18916,
											"end": 18934,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18916,
											"end": 18934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 18934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18909,
											"end": 18971,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18987,
											"end": 19005,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18987,
											"end": 19005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18987,
											"end": 19005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18980,
											"end": 19019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19036,
											"end": 19055,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 19036,
											"end": 19055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 18656,
											"end": 19061,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18288,
											"end": 18290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18205,
											"end": 18223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10715,
											"end": 11501,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10715,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 10829,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10906,
											"end": 10922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10970,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10970,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10970,
											"end": 10991,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10970,
											"end": 10991,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10970,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10947,
											"end": 10991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10947,
											"end": 10991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 11046,
											"end": 11052,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11028,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 11028,
											"end": 11053,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11028,
											"end": 11053,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 11028,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 11085,
											"end": 11093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11095,
											"end": 11099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11109,
											"end": 11110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11116,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11118,
											"end": 11125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 11064,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 11192,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11318,
											"end": 11338,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 11318,
											"end": 11338,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11318,
											"end": 11338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11338,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18205,
											"end": 18223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11364,
											"end": 11418,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11429,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1467,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1183,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18513,
											"end": 18515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18495,
											"end": 18516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18554,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18532,
											"end": 18550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18525,
											"end": 18555,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 18311,
											"end": 18651,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21214,
											"end": 21216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21196,
											"end": 21217,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21253,
											"end": 21255,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21233,
											"end": 21251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21226,
											"end": 21256,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21292,
											"end": 21326,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 21272,
											"end": 21290,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21272,
											"end": 21290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21272,
											"end": 21290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21265,
											"end": 21327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21343,
											"end": 21361,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21343,
											"end": 21361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21343,
											"end": 21361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21336,
											"end": 21386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21403,
											"end": 21422,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 21403,
											"end": 21422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 21012,
											"end": 21428,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "249"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "440"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "124"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "440"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "442"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "442"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "443"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "443"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "448"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1303,
											"end": 1307,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1571,
											"end": 1573,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1840,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1872,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1925,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2001,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 2010,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2172,
											"end": 2179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2168,
											"end": 2191,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2196,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2259,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2316,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2405,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2503,
											"end": 2505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2516,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2527,
											"end": 2707,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2527,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2641,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2637,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2645,
											"end": 2657,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2707,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2712,
											"end": 3184,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 2712,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2798,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2817,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2875,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 2999,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 2999,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 2999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 3004,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 3004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 3005,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2969,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2969,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 3006,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 2854,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3028,
											"end": 3041,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3112,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 3025,
											"end": 3112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3112,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 3025,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3170,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3177,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3178,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 3184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 3184,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3189,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3189,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3340,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 3399,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3358,
											"end": 3403,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3597,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 3414,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3549,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 3493,
											"end": 3549,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3570,
											"end": 3584,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3586,
											"end": 3590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3597,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3602,
											"end": 4326,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 3602,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3676,
											"end": 3731,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3729,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3731,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3676,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3812,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 3812,
											"end": 3855,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3855,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3812,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3887,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3896,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3924,
											"end": 3926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3896,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 3896,
											"end": 3927,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3927,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3896,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4066,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4078,
											"end": 4093,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4078,
											"end": 4093,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4078,
											"end": 4093,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4075,
											"end": 4110,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4110,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4075,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4165,
											"end": 4168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4162,
											"end": 4177,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4224,
											"end": 4254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4224,
											"end": 4254,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4199,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 4154,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4320,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3602,
											"end": 4326,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 4326,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4331,
											"end": 4552,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 4331,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4373,
											"end": 4378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4430,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4393,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 4393,
											"end": 4448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4393,
											"end": 4448,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 4393,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4540,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4517,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4501,
											"end": 4518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 4466,
											"end": 4546,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4765,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 4747,
											"end": 4800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4786,
											"end": 4798,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4800,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 4747,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4819,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 4838,
											"end": 4847,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4819,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4819,
											"end": 4848,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 4848,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 4819,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4809,
											"end": 4848,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4809,
											"end": 4848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4899,
											"end": 4901,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4888,
											"end": 4897,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4871,
											"end": 4903,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 4966,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4983,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 4949,
											"end": 4983,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4977,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4981,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4983,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 4949,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 5055,
											"end": 5062,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5052,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5044,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 5002,
											"end": 5063,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5063,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 5002,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5063,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5120,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5148,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5165,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 5129,
											"end": 5165,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5165,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 5129,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5228,
											"end": 5236,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5226,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5213,
											"end": 5237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5247,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5302,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5289,
											"end": 5298,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5304,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5331,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5332,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 5346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5368,
											"end": 5419,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5419,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 5368,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 5425,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5672,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5644,
											"end": 5667,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5673,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 5728,
											"end": 5737,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5709,
											"end": 5738,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5709,
											"end": 5738,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 5709,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5738,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5757,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5757,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5757,
											"end": 5795,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5757,
											"end": 5795,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 5757,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5747,
											"end": 5795,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5747,
											"end": 5795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5844,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5850,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 5913,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5930,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 5896,
											"end": 5930,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5928,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5930,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 5896,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5949,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 5999,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5982,
											"end": 5991,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 6000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5949,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 5949,
											"end": 6010,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5949,
											"end": 6010,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 5949,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 6010,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 6010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6065,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6067,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6067,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6092,
											"end": 6094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6112,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 6076,
											"end": 6112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6110,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6112,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 6076,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6131,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6183,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6173,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6131,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6131,
											"end": 6194,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6131,
											"end": 6194,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 6131,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6121,
											"end": 6194,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6121,
											"end": 6194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6236,
											"end": 6245,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6252,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6203,
											"end": 6252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6203,
											"end": 6252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6267,
											"end": 6275,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6280,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6283,
											"end": 6295,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6261,
											"end": 6297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 6359,
											"end": 6366,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 6316,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 6373,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6560,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6571,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6563,
											"end": 6575,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 6525,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6642,
											"end": 6660,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6685,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6686,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6689,
											"end": 6701,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6737,
											"end": 6743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6722,
											"end": 6744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6789,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6779,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6790,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 6753,
											"end": 6808,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6802,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6794,
											"end": 6806,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6808,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 6753,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6840,
											"end": 6842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6827,
											"end": 6843,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6862,
											"end": 6866,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6885,
											"end": 6928,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6885,
											"end": 6928,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 6885,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6960,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 6997,
											"end": 6999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6969,
											"end": 7000,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 7000,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 6969,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7123,
											"end": 7124,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7111,
											"end": 7130,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7111,
											"end": 7130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7147,
											"end": 7166,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7166,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7166,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7183,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 7144,
											"end": 7183,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7183,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 7144,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7214,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7214,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7239,
											"end": 7245,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7234,
											"end": 7237,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7246,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 7305,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 7223,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7421,
											"end": 7453,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7421,
											"end": 7453,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7481,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7484,
											"end": 7496,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7559,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7546,
											"end": 7570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7507,
											"end": 7580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7507,
											"end": 7580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7507,
											"end": 7580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 7586,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7591,
											"end": 8026,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 7591,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7707,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7716,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7764,
											"end": 7766,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 7762,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7748,
											"end": 7767,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7748,
											"end": 7767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7799,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 7804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7843,
											"end": 7844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 7920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 7920,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7921,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7953,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7953,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7953,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 7832,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8020,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8020,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 8026,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 8026,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8031,
											"end": 8292,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 8031,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8212,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8199,
											"end": 8208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8192,
											"end": 8213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8230,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8230,
											"end": 8286,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8424,
											"end": 8430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8493,
											"end": 8495,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8479,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8491,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8511,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8532,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 8551,
											"end": 8560,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8532,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8532,
											"end": 8561,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8561,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 8532,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8561,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8614,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8601,
											"end": 8610,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8616,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8676,
											"end": 8678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8694,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 8768,
											"end": 8775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 8765,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8757,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8715,
											"end": 8776,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8715,
											"end": 8776,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 8715,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8776,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8831,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8814,
											"end": 8832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8833,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8785,
											"end": 8833,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8785,
											"end": 8833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8858,
											"end": 8860,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 8861,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 8952,
											"end": 8959,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8941,
											"end": 8949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 8939,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 8950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8966,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8971,
											"end": 9502,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 8971,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9080,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9143,
											"end": 9146,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9131,
											"end": 9140,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9129,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9141,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9111,
											"end": 9164,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9111,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 9111,
											"end": 9164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9157,
											"end": 9158,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9150,
											"end": 9162,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9111,
											"end": 9164,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 9111,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9173,
											"end": 9212,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9173,
											"end": 9212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9261,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9248,
											"end": 9257,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9244,
											"end": 9262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9231,
											"end": 9263,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9263,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 9312,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9282,
											"end": 9314,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9354,
											"end": 9363,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9337,
											"end": 9369,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9381,
											"end": 9411,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9378,
											"end": 9428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9378,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 9378,
											"end": 9428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9424,
											"end": 9425,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9422,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9426,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9378,
											"end": 9428,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 9378,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9488,
											"end": 9495,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 9447,
											"end": 9496,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9841,
											"end": 9843,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9838,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9816,
											"end": 9839,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9844,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 9861,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 9809,
											"end": 9861,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9855,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9847,
											"end": 9859,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9809,
											"end": 9861,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 9809,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9880,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 9899,
											"end": 9908,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9880,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 9880,
											"end": 9909,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9880,
											"end": 9909,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 9880,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 9909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 9909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 9961,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9948,
											"end": 9957,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9931,
											"end": 9963,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10006,
											"end": 10011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10013,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 9990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9972,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 9972,
											"end": 10032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9972,
											"end": 10032,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 9972,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10056,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10041,
											"end": 10056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 10062,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10149,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10196,
											"end": 10198,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10184,
											"end": 10193,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10175,
											"end": 10182,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10194,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10216,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 10164,
											"end": 10216,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10202,
											"end": 10214,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10216,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 10164,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10235,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 10254,
											"end": 10263,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10235,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10235,
											"end": 10264,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10235,
											"end": 10264,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 10235,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10225,
											"end": 10264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10225,
											"end": 10264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 10317,
											"end": 10319,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10283,
											"end": 10321,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10283,
											"end": 10321,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 10283,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10273,
											"end": 10321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10273,
											"end": 10321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10327,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10332,
											"end": 10938,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 10332,
											"end": 10938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10450,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10468,
											"end": 10474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10524,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10507,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10519,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10492,
											"end": 10525,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10542,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 10489,
											"end": 10542,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10535,
											"end": 10536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10540,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10542,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 10489,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10561,
											"end": 10590,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10561,
											"end": 10590,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 10561,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10551,
											"end": 10590,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10551,
											"end": 10590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10609,
											"end": 10647,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10609,
											"end": 10647,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 10609,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10647,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10694,
											"end": 10696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10692,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10698,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10698,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10747,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10749,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10800,
											"end": 10803,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10772,
											"end": 10805,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10828,
											"end": 10846,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10820,
											"end": 10826,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10817,
											"end": 10847,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10814,
											"end": 10864,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10814,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 10814,
											"end": 10864,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10862,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10814,
											"end": 10864,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 10814,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10883,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 10924,
											"end": 10931,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10915,
											"end": 10921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10904,
											"end": 10913,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10883,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 10883,
											"end": 10932,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 11129,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 10943,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11002,
											"end": 11008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11034,
											"end": 11041,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11053,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11026,
											"end": 11058,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11023,
											"end": 11075,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11023,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 11023,
											"end": 11075,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11071,
											"end": 11072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11061,
											"end": 11073,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11023,
											"end": 11075,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 11023,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11094,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 11113,
											"end": 11122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11094,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11094,
											"end": 11123,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11134,
											"end": 11456,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 11134,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11217,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11219,
											"end": 11225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11227,
											"end": 11233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11282,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11268,
											"end": 11277,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11251,
											"end": 11283,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11248,
											"end": 11300,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11248,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 11248,
											"end": 11300,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11293,
											"end": 11294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11248,
											"end": 11300,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 11248,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 11338,
											"end": 11347,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11319,
											"end": 11348,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11319,
											"end": 11348,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 11319,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11309,
											"end": 11348,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 11395,
											"end": 11397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11367,
											"end": 11399,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11367,
											"end": 11399,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11446,
											"end": 11448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11449,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11418,
											"end": 11450,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11418,
											"end": 11450,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11134,
											"end": 11456,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11134,
											"end": 11456,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11873,
											"end": 12229,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 11873,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12075,
											"end": 12077,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12078,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12057,
											"end": 12078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12057,
											"end": 12078,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12187,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12133,
											"end": 12151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12126,
											"end": 12188,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11873,
											"end": 12229,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12309,
											"end": 12321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12321,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12309,
											"end": 12321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12356,
											"end": 12368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12356,
											"end": 12368,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12356,
											"end": 12368,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12377,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 12377,
											"end": 12438,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12435,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 12423,
											"end": 12429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12436,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12409,
											"end": 12436,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12409,
											"end": 12436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12377,
											"end": 12438,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 12377,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12486,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12476,
											"end": 12482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12453,
											"end": 12471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12450,
											"end": 12488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12540,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 12525,
											"end": 12528,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 12521,
											"end": 12541,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12518,
											"end": 12519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12565,
											"end": 12569,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12555,
											"end": 12570,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12597,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12590,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12583,
											"end": 12598,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12614,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13448,
											"end": 13575,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 13448,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13509,
											"end": 13519,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13504,
											"end": 13507,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13500,
											"end": 13520,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13521,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13544,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 13537,
											"end": 13538,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13530,
											"end": 13545,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13568,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13561,
											"end": 13562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13569,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13580,
											"end": 13707,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 13580,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13651,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13636,
											"end": 13639,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13629,
											"end": 13630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13653,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 13676,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13669,
											"end": 13670,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13662,
											"end": 13677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13700,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13693,
											"end": 13694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13686,
											"end": 13701,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13712,
											"end": 13847,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 13712,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13751,
											"end": 13754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13772,
											"end": 13789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13772,
											"end": 13789,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13769,
											"end": 13812,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13769,
											"end": 13812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 13769,
											"end": 13812,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 13792,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13839,
											"end": 13840,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13828,
											"end": 13841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13828,
											"end": 13841,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13712,
											"end": 13847,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13852,
											"end": 14257,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 13852,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14054,
											"end": 14056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14036,
											"end": 14057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14036,
											"end": 14057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14036,
											"end": 14057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14093,
											"end": 14095,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14066,
											"end": 14096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14132,
											"end": 14166,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 14127,
											"end": 14129,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14112,
											"end": 14130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14112,
											"end": 14130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14200,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14183,
											"end": 14201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14183,
											"end": 14201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14176,
											"end": 14215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14250,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 14232,
											"end": 14251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14232,
											"end": 14251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13852,
											"end": 14257,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14669,
											"end": 15066,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 14669,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14871,
											"end": 14873,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14853,
											"end": 14874,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14874,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14874,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14910,
											"end": 14912,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 14913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 14983,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 14944,
											"end": 14946,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14929,
											"end": 14947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 14947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14922,
											"end": 14984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14993,
											"end": 15024,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15056,
											"end": 15059,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15041,
											"end": 15060,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15060,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14669,
											"end": 15066,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15071,
											"end": 15475,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 15071,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15255,
											"end": 15276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15276,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15276,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15312,
											"end": 15314,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 15292,
											"end": 15310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15292,
											"end": 15310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15292,
											"end": 15310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15351,
											"end": 15385,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 15346,
											"end": 15348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15324,
											"end": 15386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15417,
											"end": 15419,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15402,
											"end": 15420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15402,
											"end": 15420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15395,
											"end": 15433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15465,
											"end": 15468,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15450,
											"end": 15469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15450,
											"end": 15469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15071,
											"end": 15475,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15480,
											"end": 15608,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 15480,
											"end": 15608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15520,
											"end": 15523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15551,
											"end": 15552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15547,
											"end": 15553,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15541,
											"end": 15554,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15538,
											"end": 15577,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15538,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 15538,
											"end": 15577,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15557,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 15557,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 15557,
											"end": 15575,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15557,
											"end": 15575,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 15557,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15593,
											"end": 15602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15593,
											"end": 15602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15480,
											"end": 15608,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15613,
											"end": 16078,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 15613,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15870,
											"end": 15872,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15859,
											"end": 15868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15852,
											"end": 15873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 15837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15896,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 15948,
											"end": 15950,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15937,
											"end": 15946,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15925,
											"end": 15931,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15896,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 15896,
											"end": 15952,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15896,
											"end": 15952,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 15896,
											"end": 15952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15992,
											"end": 15998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15988,
											"end": 16010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15983,
											"end": 15985,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15968,
											"end": 15986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15961,
											"end": 16011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16028,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16057,
											"end": 16063,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16028,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16028,
											"end": 16072,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16028,
											"end": 16072,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 16028,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16020,
											"end": 16072,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15613,
											"end": 16078,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15613,
											"end": 16078,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16083,
											"end": 16484,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 16083,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16285,
											"end": 16287,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16267,
											"end": 16288,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16267,
											"end": 16288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16267,
											"end": 16288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16324,
											"end": 16326,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16297,
											"end": 16327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16363,
											"end": 16397,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 16358,
											"end": 16360,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16343,
											"end": 16361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16343,
											"end": 16361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16398,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16429,
											"end": 16431,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16414,
											"end": 16432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16414,
											"end": 16432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16407,
											"end": 16442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16474,
											"end": 16477,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16459,
											"end": 16478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16459,
											"end": 16478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16083,
											"end": 16484,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16489,
											"end": 16895,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 16489,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 16693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16730,
											"end": 16732,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 16710,
											"end": 16728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16710,
											"end": 16728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16710,
											"end": 16728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16703,
											"end": 16733,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16803,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 16764,
											"end": 16766,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16749,
											"end": 16767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16749,
											"end": 16767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16742,
											"end": 16804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16835,
											"end": 16837,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16885,
											"end": 16888,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16870,
											"end": 16889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16895,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17249,
											"end": 17648,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 17249,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17451,
											"end": 17453,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17433,
											"end": 17454,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 17454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 17454,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17490,
											"end": 17492,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17529,
											"end": 17563,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 17524,
											"end": 17526,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17509,
											"end": 17527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17509,
											"end": 17527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17595,
											"end": 17597,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17580,
											"end": 17598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17580,
											"end": 17598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17573,
											"end": 17606,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17638,
											"end": 17641,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 17623,
											"end": 17642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17623,
											"end": 17642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17648,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17653,
											"end": 18053,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 17653,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17855,
											"end": 17857,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17837,
											"end": 17858,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17837,
											"end": 17858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17837,
											"end": 17858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17896,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17874,
											"end": 17892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17867,
											"end": 17897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17933,
											"end": 17967,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 17928,
											"end": 17930,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17906,
											"end": 17968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17999,
											"end": 18001,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17977,
											"end": 18011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18043,
											"end": 18046,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18028,
											"end": 18047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18028,
											"end": 18047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 18053,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19066,
											"end": 19893,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 19066,
											"end": 19893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19463,
											"end": 19478,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19463,
											"end": 19478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19463,
											"end": 19478,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19445,
											"end": 19479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19445,
											"end": 19479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19515,
											"end": 19530,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19515,
											"end": 19530,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19512,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19495,
											"end": 19513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19495,
											"end": 19513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19488,
											"end": 19531,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19425,
											"end": 19428,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 19562,
											"end": 19564,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19540,
											"end": 19571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19540,
											"end": 19571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19540,
											"end": 19571,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19388,
											"end": 19392,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19388,
											"end": 19392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19650,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19623,
											"end": 19629,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 19594,
											"end": 19651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19699,
											"end": 19708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 19697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19687,
											"end": 19709,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19684,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19671,
											"end": 19680,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19667,
											"end": 19685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19660,
											"end": 19710,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19733,
											"end": 19777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 19770,
											"end": 19776,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19762,
											"end": 19768,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19733,
											"end": 19777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 19733,
											"end": 19777,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19733,
											"end": 19777,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 19733,
											"end": 19777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 19777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 19777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19826,
											"end": 19835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19818,
											"end": 19824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19814,
											"end": 19836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19808,
											"end": 19811,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 19797,
											"end": 19806,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19793,
											"end": 19812,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19786,
											"end": 19837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19854,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 19880,
											"end": 19886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19872,
											"end": 19878,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19854,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 19854,
											"end": 19887,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19854,
											"end": 19887,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 19854,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19846,
											"end": 19887,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 19066,
											"end": 19893,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19066,
											"end": 19893,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19898,
											"end": 20147,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 19898,
											"end": 20147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19967,
											"end": 19973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20020,
											"end": 20022,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20008,
											"end": 20017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19999,
											"end": 20006,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19995,
											"end": 20018,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19991,
											"end": 20023,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19988,
											"end": 20040,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19988,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 19988,
											"end": 20040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20036,
											"end": 20037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20033,
											"end": 20034,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19988,
											"end": 20040,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 19988,
											"end": 20040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20062,
											"end": 20078,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20087,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 20111,
											"end": 20116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20087,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 20087,
											"end": 20117,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20152,
											"end": 20331,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 20152,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20187,
											"end": 20190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20229,
											"end": 20230,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 20211,
											"end": 20227,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20208,
											"end": 20231,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20205,
											"end": 20325,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20205,
											"end": 20325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 20205,
											"end": 20325,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20275,
											"end": 20276,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20272,
											"end": 20273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20269,
											"end": 20270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20254,
											"end": 20277,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20312,
											"end": 20313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20314,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20301,
											"end": 20304,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 20297,
											"end": 20315,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 20205,
											"end": 20325,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 20205,
											"end": 20325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20152,
											"end": 20331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20152,
											"end": 20331,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20375,
											"end": 20378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20417,
											"end": 20421,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20399,
											"end": 20415,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20396,
											"end": 20422,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20393,
											"end": 20432,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20393,
											"end": 20432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 20393,
											"end": 20432,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20393,
											"end": 20432,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 20393,
											"end": 20432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20459,
											"end": 20461,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20453,
											"end": 20462,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20524,
											"end": 20540,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20520,
											"end": 20545,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20520,
											"end": 20545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20517,
											"end": 20518,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20453,
											"end": 20462,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20546,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 20575,
											"end": 20579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20569,
											"end": 20580,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20599,
											"end": 20615,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20634,
											"end": 20652,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20705,
											"end": 20707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 20702,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20690,
											"end": 20696,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20686,
											"end": 20703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20683,
											"end": 20708,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20678,
											"end": 20680,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20670,
											"end": 20676,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20667,
											"end": 20681,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20664,
											"end": 20709,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 20661,
											"end": 20719,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20661,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 20661,
											"end": 20719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20661,
											"end": 20719,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 20661,
											"end": 20719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20749,
											"end": 20755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20747,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20739,
											"end": 20756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20728,
											"end": 20756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20728,
											"end": 20756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 20788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20779,
											"end": 20789,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20801,
											"end": 20815,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20798,
											"end": 20825,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20798,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 20798,
											"end": 20825,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20798,
											"end": 20825,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 20798,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20902,
											"end": 20904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20883,
											"end": 20899,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20877,
											"end": 20881,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20873,
											"end": 20900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20869,
											"end": 20905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20859,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20848,
											"end": 20851,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20844,
											"end": 20860,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20840,
											"end": 20867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20837,
											"end": 20906,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20834,
											"end": 20916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20834,
											"end": 20916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 20834,
											"end": 20916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20909,
											"end": 20914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20834,
											"end": 20916,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 20834,
											"end": 20916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20925,
											"end": 20982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 20976,
											"end": 20980,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20967,
											"end": 20973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20959,
											"end": 20965,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20955,
											"end": 20974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20951,
											"end": 20981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20945,
											"end": 20949,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20925,
											"end": 20982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 20925,
											"end": 20982,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20925,
											"end": 20982,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 20925,
											"end": 20982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20998,
											"end": 21001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20998,
											"end": 21001,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20336,
											"end": 21007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21433,
											"end": 21837,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 21433,
											"end": 21837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21635,
											"end": 21637,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21617,
											"end": 21638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21617,
											"end": 21638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21617,
											"end": 21638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21674,
											"end": 21676,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 21654,
											"end": 21672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21654,
											"end": 21672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21654,
											"end": 21672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21647,
											"end": 21677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21713,
											"end": 21747,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 21708,
											"end": 21710,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21693,
											"end": 21711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21693,
											"end": 21711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21686,
											"end": 21748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21779,
											"end": 21781,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21764,
											"end": 21782,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21764,
											"end": 21782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21757,
											"end": 21795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21827,
											"end": 21830,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 21812,
											"end": 21831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21812,
											"end": 21831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21433,
											"end": 21837,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21842,
											"end": 22403,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 21842,
											"end": 22403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22139,
											"end": 22154,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22139,
											"end": 22154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22139,
											"end": 22154,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22121,
											"end": 22155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22121,
											"end": 22155,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22191,
											"end": 22206,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22191,
											"end": 22206,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22186,
											"end": 22188,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22171,
											"end": 22189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22171,
											"end": 22189,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22164,
											"end": 22207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22238,
											"end": 22240,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22223,
											"end": 22241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22241,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22216,
											"end": 22250,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22216,
											"end": 22250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22216,
											"end": 22250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22281,
											"end": 22283,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22266,
											"end": 22284,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22266,
											"end": 22284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22259,
											"end": 22293,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22259,
											"end": 22293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22259,
											"end": 22293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22104,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 22324,
											"end": 22327,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22309,
											"end": 22328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22302,
											"end": 22334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22302,
											"end": 22334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22302,
											"end": 22334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22064,
											"end": 22068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22377,
											"end": 22396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22377,
											"end": 22396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22369,
											"end": 22375,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 22351,
											"end": 22397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22343,
											"end": 22397,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 21842,
											"end": 22403,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21842,
											"end": 22403,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								},
								"D7DF789A1796F8A81C5300713AC4ABA6DF6782124A85E00084983604CE823747": "68747470733a2f2f697066732e696f2f697066732f516d5136745a686138724d524531536a64666a5747445a6955727a5063526678784553444875514142625a4453383f66696c656e616d653d53696465487573746c65722532304261636b67726f756e642e706e67"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"thesidehustlersnft@gmail.com\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HachiNFT.sol\":\"ERC1155Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x65283046c52a6bd3e57e456cc5eeab0dd86c00979b84495dc0109b609747fd16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae1aa0113f29cb099e7ff5c2b8f559ede5fc9a8f1d57746e5ecea8fff9157de\",\"dweb:/ipfs/QmQrymH5ACUZcoWYSYZTQTGM1xVEZpnuQce8etBWTB33xm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/HachiNFT.sol\":{\"keccak256\":\"0x7cd312558d7fe771eb8e03df2fdae8b32dc26d6b52bb6d825e3c2fafa82e28a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://811ac0f88b24bb6d72383ba6dd8990948ec770c510fc31ff41ed85d7fa6059d1\",\"dweb:/ipfs/QmXKiC8XYF9iNy9eFTxKfKvEW7bpt36QPehjQD2guq4FGX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "contracts/HachiNFT.sol:ERC1155Ownable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "contracts/HachiNFT.sol:ERC1155Ownable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 230,
								"contract": "contracts/HachiNFT.sol:ERC1155Ownable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/HachiNFT.sol:ERC1155Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "contracts/HachiNFT.sol:ERC1155Ownable",
								"label": "_paused",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1983
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 1984,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1983,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								1983
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1983
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 1984,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1983,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								1983
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1961
						],
						"Context": [
							1983
						],
						"ERC1155": [
							1419
						],
						"ERC165": [
							2007
						],
						"IERC1155": [
							1541
						],
						"IERC1155MetadataURI": [
							1666
						],
						"IERC1155Receiver": [
							1582
						],
						"IERC165": [
							2019
						]
					},
					"id": 1420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 1542,
							"src": "134:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 1583,
							"src": "159:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 1667,
							"src": "192:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 1962,
							"src": "239:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 1984,
							"src": "273:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1420,
							"sourceUnit": 2008,
							"src": "307:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 206,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1983,
										"src": "590:7:2"
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:2"
								},
								{
									"baseName": {
										"id": 208,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2007,
										"src": "599:6:2"
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:2"
								},
								{
									"baseName": {
										"id": 210,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1541,
										"src": "607:8:2"
									},
									"id": 211,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:2"
								},
								{
									"baseName": {
										"id": 212,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1666,
										"src": "617:19:2"
									},
									"id": 213,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1419,
							"linearizedBaseContracts": [
								1419,
								1666,
								1541,
								2007,
								2019,
								1983
							],
							"name": "ERC1155",
							"nameLocation": "579:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 216,
									"libraryName": {
										"id": 214,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1961,
										"src": "649:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:2",
									"typeName": {
										"id": 215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 222,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "724:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 217,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 220,
											"keyType": {
												"id": 218,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "846:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 227,
										"keyType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 226,
											"keyType": {
												"id": 224,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 225,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1038:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 229,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1139:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1157:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 236,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:2"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 241,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1119:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:2"
									},
									"scope": 1419,
									"src": "1107:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2006,
										2018
									],
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1344:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "1373:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1541,
																			"src": "1393:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1541_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1541_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 253,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1541",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 258,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "1430:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 260,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "1450:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1666_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1666_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 259,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1666",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 267,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "1522:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 265,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1419_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2006,
															"src": "1498:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 270,
												"nodeType": "Return",
												"src": "1354:180:2"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 246,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2007,
												"src": "1312:6:2"
											},
											{
												"id": 247,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2019,
												"src": "1320:7:2"
											}
										],
										"src": "1303:25:2"
									},
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 243,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "1338:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:2"
									},
									"scope": 1419,
									"src": "1236:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1665
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2015:28:2",
										"statements": [
											{
												"expression": {
													"id": 281,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 230,
													"src": "2032:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 280,
												"id": 282,
												"nodeType": "Return",
												"src": "2025:11:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:2"
									},
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1953:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2000:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:2"
									},
									"scope": 1419,
									"src": "1940:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1479
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2280:133:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2298:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2290:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 305,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "2384:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 307,
														"indexExpression": {
															"id": 306,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2394:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2398:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2384:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 310,
												"nodeType": "Return",
												"src": "2377:29:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:2"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2271:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:2"
									},
									"scope": 1419,
									"src": "2185:228:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1492
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2743:335:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 327,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "2761:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2761:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 329,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "2780:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2780:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2761:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2753:83:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2864:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2847:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2847:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"nodeType": "ArrayTypeName",
															"src": "2847:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 343,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "2894:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2894:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2880:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 340,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2884:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"nodeType": "ArrayTypeName",
															"src": "2884:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:63:2"
											},
											{
												"body": {
													"id": 371,
													"nodeType": "Block",
													"src": "2967:74:2",
													"statements": [
														{
															"expression": {
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 358,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "2981:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 360,
																	"indexExpression": {
																		"id": 359,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2995:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2981:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 362,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 316,
																				"src": "3010:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 364,
																			"indexExpression": {
																				"id": 363,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "3019:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3010:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 365,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "3023:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 367,
																			"indexExpression": {
																				"id": 366,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "3027:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3023:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 361,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "3000:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3000:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2981:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 370,
															"nodeType": "ExpressionStatement",
															"src": "2981:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2941:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 352,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "2945:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2945:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2941:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"initializationExpression": {
													"assignments": [
														348
													],
													"declarations": [
														{
															"constant": false,
															"id": 348,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2934:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 372,
															"src": "2926:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 347,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2926:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 350,
													"initialValue": {
														"hexValue": "30",
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2926:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2962:3:2",
														"subExpression": {
															"id": 355,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2964:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 357,
													"nodeType": "ExpressionStatement",
													"src": "2962:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2921:120:2"
											},
											{
												"expression": {
													"id": 373,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "3058:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 325,
												"id": 374,
												"nodeType": "Return",
												"src": "3051:20:2"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2419:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2579:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 321,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2695:8:2"
									},
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2611:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2594:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 314,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 315,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2638:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2621:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 318,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:49:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2721:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 322,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2721:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 323,
													"nodeType": "ArrayTypeName",
													"src": "2721:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:18:2"
									},
									"scope": 1419,
									"src": "2570:508:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1500
									],
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3230:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "3259:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3273:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3283:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 385,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "3240:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3084:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3155:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 383,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:2"
									},
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3181:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3173:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3196:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3191:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3191:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3172:33:2"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:2"
									},
									"scope": 1419,
									"src": "3146:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1510
									],
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3471:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 404,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3488:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 406,
														"indexExpression": {
															"id": 405,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3507:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3488:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 408,
													"indexExpression": {
														"id": 407,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "3516:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3488:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "3481:44:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 400,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:2"
									},
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3392:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3409:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3465:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:2"
									},
									"scope": 1419,
									"src": "3366:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1524
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "3768:220:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 427,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "3799:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 428,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "3807:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3807:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3799:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 432,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "3840:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 433,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "3846:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3846:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3823:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3823:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3799:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "3778:148:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "3954:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3960:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3964:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "3968:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "3976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3936:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3936:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "3936:45:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "3538:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3608:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3759:8:2"
									},
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3642:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3634:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3664:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3656:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3684:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3676:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3704:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3696:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3720:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:119:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:2"
									},
									"scope": 1419,
									"src": "3599:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1540
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4254:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 467,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "4285:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 468,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "4293:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4293:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4285:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 472,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "4326:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 473,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "4332:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4332:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 471,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4309:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4285:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4359:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4264:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "4264:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "4454:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "4460:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4464:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 484,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4469:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "4478:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 480,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4431:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "3994:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4069:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4245:8:2"
									},
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4108:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4100:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4130:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4122:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4142:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4142:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "4142:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4189:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4172:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4172:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "4172:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4219:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4206:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:139:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:2"
									},
									"scope": 1419,
									"src": "4060:430:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5103:784:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "5121:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 505,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:2"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "5190:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 513,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 515,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "5209:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:2"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "5231:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 520,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5272:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "5254:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:2"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "5285:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 529,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5330:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "5312:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5369:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5385:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5389:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 541,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5394:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5403:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 536,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "5348:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:2"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "5419:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 547,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5441:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 549,
														"indexExpression": {
															"id": 548,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5451:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 551,
													"indexExpression": {
														"id": 550,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "5455:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 554,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5478:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 555,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5493:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:2"
											},
											{
												"id": 570,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:2",
												"statements": [
													{
														"expression": {
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 560,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "5580:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 563,
																	"indexExpression": {
																		"id": 561,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "5590:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 564,
																"indexExpression": {
																	"id": 562,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "5594:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 565,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "5602:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 566,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "5616:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 569,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 571,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5642:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 574,
															"indexExpression": {
																"id": 572,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5652:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 575,
														"indexExpression": {
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5656:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 576,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "5663:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 580,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5700:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5710:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5716:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5720:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5724:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "5685:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "EmitStatement",
												"src": "5680:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5762:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5772:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5778:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5782:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5787:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5796:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 587,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "5742:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5843:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5859:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "5863:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5867:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5875:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5812:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "4976:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "4998:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5018:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5038:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5062:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:2"
									},
									"scope": 1419,
									"src": "4940:947:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "6421:927:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 623,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6439:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 625,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6453:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "6530:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:2"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "6599:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 641,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 643,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "6618:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6662:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "6672:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "6678:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "6682:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 651,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "6687:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "6696:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 646,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "6641:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:2"
											},
											{
												"body": {
													"id": 712,
													"nodeType": "Block",
													"src": "6753:370:2",
													"statements": [
														{
															"assignments": [
																667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 667,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 712,
																	"src": "6767:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 666,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 671,
															"initialValue": {
																"baseExpression": {
																	"id": 668,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6780:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 670,
																"indexExpression": {
																	"id": 669,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6784:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:2"
														},
														{
															"assignments": [
																673
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 673,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 712,
																	"src": "6800:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 677,
															"initialValue": {
																"baseExpression": {
																	"id": 674,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6817:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 676,
																"indexExpression": {
																	"id": 675,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6825:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:2"
														},
														{
															"assignments": [
																679
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 679,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 712,
																	"src": "6842:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 678,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 685,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 680,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6864:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 682,
																	"indexExpression": {
																		"id": 681,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "6874:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 684,
																"indexExpression": {
																	"id": 683,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "6878:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 687,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "6905:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 688,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "6920:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 686,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 692,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:2"
														},
														{
															"id": 703,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 693,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "7015:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 696,
																				"indexExpression": {
																					"id": 694,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7025:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 695,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "7029:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 698,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "7037:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 699,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "7051:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 702,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 704,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "7085:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 707,
																		"indexExpression": {
																			"id": 705,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "7095:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 708,
																	"indexExpression": {
																		"id": 706,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "7099:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 709,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7106:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 711,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "6732:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 660,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "6736:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"initializationExpression": {
													"assignments": [
														656
													],
													"declarations": [
														{
															"constant": false,
															"id": 656,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 713,
															"src": "6717:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 655,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 658,
													"initialValue": {
														"hexValue": "30",
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:2",
														"subExpression": {
															"id": 663,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "6750:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 665,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 715,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7152:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7172:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 719,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 714,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "7138:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "EmitStatement",
												"src": "7133:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7216:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7226:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7232:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7236:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 727,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7241:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "7250:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 722,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "7196:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7302:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7312:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 734,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7318:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 735,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7322:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 736,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7327:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 737,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "7336:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 731,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "7266:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6274:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6296:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6316:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 612,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 613,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6346:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 615,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 616,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6380:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:2"
									},
									"scope": 1419,
									"src": "6233:1115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "8227:30:2",
										"statements": [
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "8237:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 748,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "8244:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:2"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8188:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:2"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:2"
									},
									"scope": 1419,
									"src": "8171:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "8759:580:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "8777:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "8842:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "8861:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:2"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "8883:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 781,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 782,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "8924:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "8906:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:2"
											},
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "8937:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 790,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"id": 794,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "8964:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9021:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9043:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9047:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 805,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "9052:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 806,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9061:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 797,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "9000:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:2"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 809,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "9077:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 812,
															"indexExpression": {
																"id": 810,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "9087:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 811,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9091:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9098:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 818,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9134:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9156:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9160:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 825,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "9164:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "9119:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "EmitStatement",
												"src": "9114:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 829,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9202:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9224:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9228:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 836,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "9233:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9242:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 828,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "9182:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 841,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9289:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 842,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9311:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9315:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "9319:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 849,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9327:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 840,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "9258:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8654:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8674:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8718:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:2"
									},
									"scope": 1419,
									"src": "8630:709:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "9838:637:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "9856:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9862:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 869,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9862:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9862:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9856:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9874:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9848:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9848:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "9848:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 878,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "9928:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9928:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 880,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "9942:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9942:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9928:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:2"
											},
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10020:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "10012:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 886,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 888,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "10031:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10075:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10093:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 893,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10097:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10101:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "10106:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 900,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "10115:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "10054:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "10054:66:2"
											},
											{
												"body": {
													"id": 926,
													"nodeType": "Block",
													"src": "10172:60:2",
													"statements": [
														{
															"expression": {
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 914,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "10186:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 919,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 915,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 859,
																				"src": "10196:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 917,
																			"indexExpression": {
																				"id": 916,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 904,
																				"src": "10200:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10196:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10186:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 920,
																	"indexExpression": {
																		"id": 918,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "10204:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10186:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 921,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "10211:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 923,
																	"indexExpression": {
																		"id": 922,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "10219:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10211:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"nodeType": "ExpressionStatement",
															"src": "10186:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 907,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "10151:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 908,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10155:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10155:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"initializationExpression": {
													"assignments": [
														904
													],
													"declarations": [
														{
															"constant": false,
															"id": 904,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10144:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 927,
															"src": "10136:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 903,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10136:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 906,
													"initialValue": {
														"hexValue": "30",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10136:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10167:3:2",
														"subExpression": {
															"id": 911,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "10167:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 913,
													"nodeType": "ExpressionStatement",
													"src": "10167:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10131:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 929,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10261:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10283:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10287:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 936,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "10292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 928,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "10247:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "EmitStatement",
												"src": "10242:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10331:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10341:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 941,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10341:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10341:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10353:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10357:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 947,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "10362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "10371:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 939,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "10311:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "10311:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 952,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10423:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10449:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 959,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "10454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 960,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "10463:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 951,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "10387:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "10387:81:2"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "9345:334:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9693:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9721:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "9713:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9750:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "9733:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 857,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9733:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"nodeType": "ArrayTypeName",
													"src": "9733:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9780:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "9763:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 860,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9763:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 861,
													"nodeType": "ArrayTypeName",
													"src": "9763:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "9797:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9797:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9703:117:2"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9838:0:2"
									},
									"scope": 1419,
									"src": "9684:791:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "10819:682:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 975,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "10837:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 976,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10837:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10857:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10829:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "10829:66:2"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10914:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "10906:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10906:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "10925:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10925:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10906:31:2"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10964:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "10947:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 991,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10947:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 992,
															"nodeType": "ArrayTypeName",
															"src": "10947:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "10988:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "10970:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:44:2"
											},
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11018:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "11001:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1000,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11001:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1001,
															"nodeType": "ArrayTypeName",
															"src": "11001:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"id": 1004,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "11046:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "11028:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11001:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "11085:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11095:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "11113:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1015,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "11118:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1007,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "11064:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11064:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "11064:66:2"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11149:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "11141:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1021,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "11163:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1023,
														"indexExpression": {
															"id": 1022,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "11173:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11163:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1025,
													"indexExpression": {
														"id": 1024,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11177:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11163:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "11200:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1029,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "11215:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11200:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11223:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11192:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "11192:70:2"
											},
											{
												"id": 1044,
												"nodeType": "UncheckedBlock",
												"src": "11272:77:2",
												"statements": [
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1034,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "11296:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1037,
																	"indexExpression": {
																		"id": 1035,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "11306:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11296:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1038,
																"indexExpression": {
																	"id": 1036,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "11310:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11296:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1039,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "11318:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1040,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "11332:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11318:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11296:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "11296:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "11379:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11389:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11403:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11395:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11395:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11395:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "11407:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "11411:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "11364:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11364:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "EmitStatement",
												"src": "11359:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1057,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "11449:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11459:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1059,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11465:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "11477:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1064,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "11482:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11491:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1056,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "11429:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "11429:65:2"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "10481:229:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10724:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10747:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "10739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10789:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "10781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10729:72:2"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:0:2"
									},
									"scope": 1419,
									"src": "10715:786:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "11824:814:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1082,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "11842:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11858:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11850:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1083,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11850:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11850:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11842:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11862:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11834:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "11834:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1092,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "11918:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11918:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1094,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "11932:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11932:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11910:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "11910:81:2"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12010:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "12002:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1100,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1102,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "12021:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1106,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "12065:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "12075:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12089:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12081:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12081:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12081:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "12093:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1113,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12107:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1105,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "12044:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12044:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "12044:66:2"
											},
											{
												"body": {
													"id": 1166,
													"nodeType": "Block",
													"src": "12162:323:2",
													"statements": [
														{
															"assignments": [
																1129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1129,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12184:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1166,
																	"src": "12176:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12176:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1133,
															"initialValue": {
																"baseExpression": {
																	"id": 1130,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "12189:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1132,
																"indexExpression": {
																	"id": 1131,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "12193:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12189:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12176:19:2"
														},
														{
															"assignments": [
																1135
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1135,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12217:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1166,
																	"src": "12209:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1134,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12209:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1139,
															"initialValue": {
																"baseExpression": {
																	"id": 1136,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "12226:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1138,
																"indexExpression": {
																	"id": 1137,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "12234:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12226:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12209:27:2"
														},
														{
															"assignments": [
																1141
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1141,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12259:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1166,
																	"src": "12251:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1140,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12251:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1147,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1142,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "12273:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1144,
																	"indexExpression": {
																		"id": 1143,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "12283:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12273:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1146,
																"indexExpression": {
																	"id": 1145,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "12287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12273:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12251:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1149,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "12314:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1150,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "12329:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12314:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12337:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1148,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12306:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12306:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1154,
															"nodeType": "ExpressionStatement",
															"src": "12306:70:2"
														},
														{
															"id": 1165,
															"nodeType": "UncheckedBlock",
															"src": "12390:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1155,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "12418:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1158,
																				"indexExpression": {
																					"id": 1156,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "12428:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12418:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1159,
																			"indexExpression": {
																				"id": 1157,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "12432:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12418:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1160,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "12440:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1161,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "12454:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12440:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12418:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "12418:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "12141:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1122,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "12145:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12145:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12141:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"initializationExpression": {
													"assignments": [
														1118
													],
													"declarations": [
														{
															"constant": false,
															"id": 1118,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12134:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1167,
															"src": "12126:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1117,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12126:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1120,
													"initialValue": {
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12138:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12126:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12157:3:2",
														"subExpression": {
															"id": 1125,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "12157:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1127,
													"nodeType": "ExpressionStatement",
													"src": "12157:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12121:364:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1169,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "12514:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "12524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12538:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12530:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12530:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12530:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "12542:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1176,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12547:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1168,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "12500:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "12495:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "12586:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "12596:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12610:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12602:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "12614:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1187,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12619:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12628:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1179,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "12566:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12566:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "12566:65:2"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "11507:183:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11704:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11732:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11724:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11763:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11746:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1073,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1074,
													"nodeType": "ArrayTypeName",
													"src": "11746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11776:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1076,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1077,
													"nodeType": "ArrayTypeName",
													"src": "11776:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11714:92:2"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11824:0:2"
									},
									"scope": 1419,
									"src": "11695:943:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "12896:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "12914:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1204,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "12923:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12933:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "12906:71:2"
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1209,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "12987:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1212,
															"indexExpression": {
																"id": 1210,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "13006:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12987:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1211,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "13013:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12987:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1214,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "13025:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12987:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "12987:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1218,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "13063:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "13070:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "13080:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1217,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "13048:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "13043:46:2"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "12644:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12782:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12818:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "12810:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12841:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "12833:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12864:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "12859:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12859:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:78:2"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:2"
									},
									"scope": 1419,
									"src": "12773:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "14242:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "13102:923:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14039:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14077:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14069:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14095:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14154:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14137:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1232,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1233,
													"nodeType": "ArrayTypeName",
													"src": "14137:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14184:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14167:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1235,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1236,
													"nodeType": "ArrayTypeName",
													"src": "14167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14214:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "14201:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14201:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14059:165:2"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:2"
									},
									"scope": 1419,
									"src": "14030:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "15388:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "14250:922:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15186:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15223:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15215:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15241:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15271:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15263:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15300:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15283:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1251,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15283:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1252,
													"nodeType": "ArrayTypeName",
													"src": "15283:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15330:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15313:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1254,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15313:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1255,
													"nodeType": "ArrayTypeName",
													"src": "15313:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "15347:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15347:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15205:165:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15388:0:2"
									},
									"scope": 1419,
									"src": "15177:213:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "15589:532:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "15603:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1684,
														"src": "15603:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15603:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "15599:516:2",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "15620:495:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1304,
																		"nodeType": "Block",
																		"src": "15737:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1293,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1291,
																						"src": "15759:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1294,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1582,
																								"src": "15771:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1582_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1295,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1563,
																							"src": "15771:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15771:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15759:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1303,
																				"nodeType": "IfStatement",
																				"src": "15755:152:2",
																				"trueBody": {
																					"id": 1302,
																					"nodeType": "Block",
																					"src": "15816:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1299,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15845:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1298,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15838:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15838:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1301,
																							"nodeType": "ExpressionStatement",
																							"src": "15838:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1305,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1292,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1291,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15727:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1305,
																				"src": "15720:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1290,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:17:2"
																	},
																	"src": "15711:210:2"
																},
																{
																	"block": {
																		"id": 1313,
																		"nodeType": "Block",
																		"src": "15956:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1310,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1307,
																							"src": "15981:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1309,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15974:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15974:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1312,
																				"nodeType": "ExpressionStatement",
																				"src": "15974:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1314,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1308,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1307,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15948:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1314,
																				"src": "15934:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1306,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15934:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15933:22:2"
																	},
																	"src": "15922:81:2"
																},
																{
																	"block": {
																		"id": 1319,
																		"nodeType": "Block",
																		"src": "16010:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1316,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16035:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1315,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16028:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16028:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1318,
																				"nodeType": "ExpressionStatement",
																				"src": "16028:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1320,
																	"nodeType": "TryCatchClause",
																	"src": "16004:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1284,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "15677:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "15687:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1286,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "15693:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1287,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "15697:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1288,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "15705:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1281,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "15655:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1280,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "15638:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1582_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15638:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1582",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1563,
																	"src": "15638:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15638:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1321,
															"nodeType": "TryStatement",
															"src": "15634:471:2"
														}
													]
												}
											}
										]
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15405:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15453:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15445:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15479:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15471:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15501:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15493:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15521:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15513:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15541:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15533:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15570:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "15557:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15557:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:145:2"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15589:0:2"
									},
									"scope": 1419,
									"src": "15396:725:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "16345:574:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "16359:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1684,
														"src": "16359:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16359:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "16355:558:2",
												"trueBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "16376:537:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1369,
																		"nodeType": "Block",
																		"src": "16530:189:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1358,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1356,
																						"src": "16552:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1359,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1582,
																								"src": "16564:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1582_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1581,
																							"src": "16564:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16564:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16552:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1368,
																				"nodeType": "IfStatement",
																				"src": "16548:157:2",
																				"trueBody": {
																					"id": 1367,
																					"nodeType": "Block",
																					"src": "16614:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1364,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16643:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1363,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16636:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1365,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16636:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1366,
																							"nodeType": "ExpressionStatement",
																							"src": "16636:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1370,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1357,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1356,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16507:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1370,
																				"src": "16500:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1355,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16500:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16482:47:2"
																	},
																	"src": "16474:245:2"
																},
																{
																	"block": {
																		"id": 1378,
																		"nodeType": "Block",
																		"src": "16754:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1375,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1372,
																							"src": "16779:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1374,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16772:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16772:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1377,
																				"nodeType": "ExpressionStatement",
																				"src": "16772:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1379,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1373,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1372,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16746:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1379,
																				"src": "16732:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1371,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16732:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16731:22:2"
																	},
																	"src": "16720:81:2"
																},
																{
																	"block": {
																		"id": 1384,
																		"nodeType": "Block",
																		"src": "16808:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1381,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16833:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1380,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16826:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16826:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1383,
																				"nodeType": "ExpressionStatement",
																				"src": "16826:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1385,
																	"nodeType": "TryCatchClause",
																	"src": "16802:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "16438:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1350,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "16448:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1351,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "16454:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1352,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "16459:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1353,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "16468:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1346,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "16411:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1345,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "16394:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1582_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16394:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1582",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1581,
																	"src": "16394:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16394:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1386,
															"nodeType": "TryStatement",
															"src": "16390:513:2"
														}
													]
												}
											}
										]
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16136:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16189:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16181:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16215:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16237:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16229:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16229:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16266:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16249:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1332,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16249:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1333,
													"nodeType": "ArrayTypeName",
													"src": "16249:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16296:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16279:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1335,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16279:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1336,
													"nodeType": "ArrayTypeName",
													"src": "16279:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16326:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "16313:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:165:2"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:2"
									},
									"scope": 1419,
									"src": "16127:792:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "17009:109:2",
										"statements": [
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17036:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "17019:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1400,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17019:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1401,
															"nodeType": "ArrayTypeName",
															"src": "17019:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17058:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17044:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1403,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17048:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1404,
															"nodeType": "ArrayTypeName",
															"src": "17048:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17019:41:2"
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1409,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "17070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1411,
														"indexExpression": {
															"hexValue": "30",
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17076:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17070:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1412,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "17081:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "17070:18:2"
											},
											{
												"expression": {
													"id": 1415,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1402,
													"src": "17106:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1416,
												"nodeType": "Return",
												"src": "17099:12:2"
											}
										]
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "16934:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "16960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "16952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:17:2"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "16991:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1394,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16991:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1395,
													"nodeType": "ArrayTypeName",
													"src": "16991:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16990:18:2"
									},
									"scope": 1419,
									"src": "16925:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1420,
							"src": "570:16550:2",
							"usedErrors": []
						}
					],
					"src": "109:17012:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1541
						],
						"IERC165": [
							2019
						]
					},
					"id": 1542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 2020,
							"src": "120:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1424,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2019,
										"src": "357:7:3"
									},
									"id": 1425,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1423,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1541,
							"linearizedBaseContracts": [
								1541,
								2019
							],
							"name": "IERC1155",
							"nameLocation": "345:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1438,
									"name": "TransferSingle",
									"nameLocation": "503:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "518:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "544:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "566:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "586:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "598:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:3"
									},
									"src": "497:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1453,
									"name": "TransferBatch",
									"nameLocation": "774:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "797:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "831:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "861:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "889:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1446,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1447,
													"nodeType": "ArrayTypeName",
													"src": "889:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "912:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1449,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1450,
													"nodeType": "ArrayTypeName",
													"src": "912:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:3"
									},
									"src": "768:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1462,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "1114:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "1139:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "1165:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:3"
									},
									"src": "1093:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1469,
									"name": "URI",
									"nameLocation": "1540:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1544:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1558:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:3"
									},
									"src": "1534:44:3"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1781:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1798:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:3"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1833:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:3"
									},
									"scope": 1541,
									"src": "1762:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "2065:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1481,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1482,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "2094:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:3"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "2165:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1488,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1489,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:3"
									},
									"scope": 1541,
									"src": "2041:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "2469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:3"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:3"
									},
									"scope": 1541,
									"src": "2442:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2700:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:3"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2741:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:3"
									},
									"scope": 1541,
									"src": "2657:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3352:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3374:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3438:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:3"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:3"
									},
									"scope": 1541,
									"src": "3317:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3956:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1530,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1531,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3988:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1534,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "4024:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:3"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:3"
									},
									"scope": 1541,
									"src": "3874:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1542,
							"src": "335:3726:3",
							"usedErrors": []
						}
					],
					"src": "95:3967:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1582
						],
						"IERC165": [
							2019
						]
					},
					"id": 1583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1543,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 2020,
							"src": "143:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1546,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2019,
										"src": "262:7:4"
									},
									"id": 1547,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1582,
							"linearizedBaseContracts": [
								1582,
								2019
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1191:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1211:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1234:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:4"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1278:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:4"
									},
									"scope": 1582,
									"src": "1107:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2358:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2380:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1569,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1570,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2412:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2447:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:4"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2491:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1578,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:4"
									},
									"scope": 1582,
									"src": "2291:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1583,
							"src": "232:2269:4",
							"usedErrors": []
						}
					],
					"src": "118:2384:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"Address": [
							1961
						],
						"Context": [
							1983
						],
						"ERC1155": [
							1419
						],
						"ERC1155Burnable": [
							1651
						],
						"ERC165": [
							2007
						],
						"IERC1155": [
							1541
						],
						"IERC1155MetadataURI": [
							1666
						],
						"IERC1155Receiver": [
							1582
						],
						"IERC165": [
							2019
						]
					},
					"id": 1652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1652,
							"sourceUnit": 1420,
							"src": "138:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1587,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1419,
										"src": "379:7:5"
									},
									"id": 1588,
									"nodeType": "InheritanceSpecifier",
									"src": "379:7:5"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1586,
								"nodeType": "StructuredDocumentation",
								"src": "164:177:5",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1651,
							"linearizedBaseContracts": [
								1651,
								1419,
								1666,
								1541,
								2007,
								2019,
								1983
							],
							"name": "ERC1155Burnable",
							"nameLocation": "360:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "496:207:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1598,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "527:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1599,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "538:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "538:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "527:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "571:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1604,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "580:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "580:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1602,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "554:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "554:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "527:66:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "506:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:154:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "506:154:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1612,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "677:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1613,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "686:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1614,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "690:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1611,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "671:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "671:25:5"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "402:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "424:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "416:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "449:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "441:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "461:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:74:5"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:5"
									},
									"scope": 1651,
									"src": "393:310:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "837:214:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1630,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "868:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1631,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "879:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "879:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "868:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1635,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "912:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1636,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "921:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "921:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1634,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "895:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "895:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "868:66:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "847:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:154:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "847:154:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1023:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "1032:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1646,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1037:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1643,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "1012:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "1012:32:5"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "718:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "779:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "762:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "762:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "762:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "809:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "792:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1624,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "792:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1625,
													"nodeType": "ArrayTypeName",
													"src": "792:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:94:5"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:5"
									},
									"scope": 1651,
									"src": "709:342:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1652,
							"src": "342:711:5",
							"usedErrors": []
						}
					],
					"src": "113:941:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1541
						],
						"IERC1155MetadataURI": [
							1666
						],
						"IERC165": [
							2019
						]
					},
					"id": 1667,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1667,
							"sourceUnit": 1542,
							"src": "142:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1656,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1541,
										"src": "397:8:6"
									},
									"id": 1657,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1655,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1666,
							"linearizedBaseContracts": [
								1666,
								1541,
								2019
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "622:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:6"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "657:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:6"
									},
									"scope": 1666,
									"src": "609:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1667,
							"src": "364:310:6",
							"usedErrors": []
						}
					],
					"src": "117:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1961
						]
					},
					"id": 1962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1668,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1961,
							"linearizedBaseContracts": [
								1961
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1677,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1676,
												"id": 1682,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1961,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1695,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1961",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1961",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1693,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													1704,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1717,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1703,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1711,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1705,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1707,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1961,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "3555:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1729,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "3585:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "3593:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1728,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1735,
															1755
														],
														"referencedDeclaration": 1755,
														"src": "3572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1733,
												"nodeType": "Return",
												"src": "3565:67:7"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1961,
									"src": "3466:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "4008:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1748,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "4047:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1749,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "4055:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1751,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4064:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1747,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1775,
															1825
														],
														"referencedDeclaration": 1825,
														"src": "4025:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1753,
												"nodeType": "Return",
												"src": "4018:59:7"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:7"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:7"
									},
									"scope": 1961,
									"src": "3861:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "4589:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1768,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "4628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "4636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1770,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "4642:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1767,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1775,
															1825
														],
														"referencedDeclaration": 1825,
														"src": "4606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1773,
												"nodeType": "Return",
												"src": "4599:94:7"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4486:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4510:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1759,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:7"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:7"
									},
									"scope": 1961,
									"src": "4446:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "5127:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1792,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1961",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1961",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1790,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1795,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "5170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1802,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "5247:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1801,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "5236:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:7"
											},
											{
												"assignments": [
													1808,
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1824,
														"src": "5300:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1824,
														"src": "5314:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"arguments": [
														{
															"id": 1815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "5367:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1811,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5341:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1813,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "5360:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1819,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "5406:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1820,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "5415:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1821,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "5427:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1818,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "5389:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1823,
												"nodeType": "Return",
												"src": "5382:58:7"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "4988:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5012:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5039:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5062:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:7"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5113:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:7"
									},
									"scope": 1961,
									"src": "4948:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "5724:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "5760:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "5768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1835,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1842,
															1877
														],
														"referencedDeclaration": 1877,
														"src": "5741:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1840,
												"nodeType": "Return",
												"src": "5734:80:7"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "5652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "5668:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:7"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "5710:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:7"
									},
									"scope": 1961,
									"src": "5624:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "6163:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1856,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "6192:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1855,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "6181:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:7"
											},
											{
												"assignments": [
													1862,
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "6252:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1861,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "6266:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1863,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1869,
												"initialValue": {
													"arguments": [
														{
															"id": 1867,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "6311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1865,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "6293:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "6350:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1872,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "6359:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1873,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "6371:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1870,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "6333:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1875,
												"nodeType": "Return",
												"src": "6326:58:7"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6042:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6066:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6093:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1848,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:7"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6149:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:7"
									},
									"scope": 1961,
									"src": "6005:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "6667:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1888,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "6705:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1887,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1894,
															1929
														],
														"referencedDeclaration": 1929,
														"src": "6684:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1886,
												"id": 1892,
												"nodeType": "Return",
												"src": "6677:84:7"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6600:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:7"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6653:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:7"
									},
									"scope": 1961,
									"src": "6570:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "7109:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1908,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "7138:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1907,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "7127:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:7"
											},
											{
												"assignments": [
													1914,
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "7200:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1913,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "7214:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1915,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1921,
												"initialValue": {
													"arguments": [
														{
															"id": 1919,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "7261:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1917,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "7241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1923,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "7300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1924,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "7309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1925,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "7321:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1922,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "7283:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1927,
												"nodeType": "Return",
												"src": "7276:58:7"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "6993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7017:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7044:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:7"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7095:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:7"
									},
									"scope": 1961,
									"src": "6954:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "7721:532:7",
										"statements": [
											{
												"condition": {
													"id": 1941,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1932,
													"src": "7735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "7792:455:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1945,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "7876:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1955,
																"nodeType": "Block",
																"src": "8184:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1952,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1936,
																					"src": "8209:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1951,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1954,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:7"
																	}
																]
															},
															"id": 1956,
															"nodeType": "IfStatement",
															"src": "7872:365:7",
															"trueBody": {
																"id": 1950,
																"nodeType": "Block",
																"src": "7899:279:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:7"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1934,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1934,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1949,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "7731:516:7",
												"trueBody": {
													"id": 1944,
													"nodeType": "Block",
													"src": "7744:42:7",
													"statements": [
														{
															"expression": {
																"id": 1942,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "7765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1940,
															"id": 1943,
															"nodeType": "Return",
															"src": "7758:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7596:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7618:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7651:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:7"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7707:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:7"
									},
									"scope": 1961,
									"src": "7561:692:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1962,
							"src": "194:8061:7",
							"usedErrors": []
						}
					],
					"src": "101:8155:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1983
						]
					},
					"id": 1984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1964,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1983,
							"linearizedBaseContracts": [
								1983
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1969,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1968,
												"id": 1971,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1983,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1980,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1983,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1984,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2007
						],
						"IERC165": [
							2019
						]
					},
					"id": 2008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1985,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2008,
							"sourceUnit": 2020,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1988,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2019,
										"src": "754:7:9"
									},
									"id": 1989,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1987,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2007,
							"linearizedBaseContracts": [
								2007,
								2019
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2018
									],
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1998,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2000,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2019_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2019_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2019",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1997,
												"id": 2004,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1994,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1991,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 2007,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2008,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2019
						]
					},
					"id": 2020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2009,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2010,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2019,
							"linearizedBaseContracts": [
								2019
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2011,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 2019,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2020,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"contracts/HachiNFT.sol": {
				"ast": {
					"absolutePath": "contracts/HachiNFT.sol",
					"exportedSymbols": {
						"Address": [
							1961
						],
						"Context": [
							1983
						],
						"ERC1155": [
							1419
						],
						"ERC1155Burnable": [
							1651
						],
						"ERC1155Ownable": [
							2148
						],
						"ERC165": [
							2007
						],
						"IERC1155": [
							1541
						],
						"IERC1155MetadataURI": [
							1666
						],
						"IERC1155Receiver": [
							1582
						],
						"IERC165": [
							2019
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 2149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2022,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 1420,
							"src": "59:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 105,
							"src": "119:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 197,
							"src": "172:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 2025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 1652,
							"src": "228:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2027,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1419,
										"src": "393:7:11"
									},
									"id": 2028,
									"nodeType": "InheritanceSpecifier",
									"src": "393:7:11"
								},
								{
									"baseName": {
										"id": 2029,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "402:7:11"
									},
									"id": 2030,
									"nodeType": "InheritanceSpecifier",
									"src": "402:7:11"
								},
								{
									"baseName": {
										"id": 2031,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "411:8:11"
									},
									"id": 2032,
									"nodeType": "InheritanceSpecifier",
									"src": "411:8:11"
								},
								{
									"baseName": {
										"id": 2033,
										"name": "ERC1155Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1651,
										"src": "421:15:11"
									},
									"id": 2034,
									"nodeType": "InheritanceSpecifier",
									"src": "421:15:11"
								}
							],
							"canonicalName": "ERC1155Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2026,
								"nodeType": "StructuredDocumentation",
								"src": "308:58:11",
								"text": "@custom:security-contact thesidehustlersnft@gmail.com"
							},
							"fullyImplemented": true,
							"id": 2148,
							"linearizedBaseContracts": [
								2148,
								1651,
								196,
								104,
								1419,
								1666,
								1541,
								2007,
								2019,
								1983
							],
							"name": "ERC1155Ownable",
							"nameLocation": "375:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "586:2:11",
										"statements": []
									},
									"id": 2041,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f697066732e696f2f697066732f516d5136745a686138724d524531536a64666a5747445a6955727a5063526678784553444875514142625a4453383f66696c656e616d653d53696465487573746c65722532304261636b67726f756e642e706e67",
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "473:107:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d7df789a1796f8a81c5300713ac4aba6df6782124a85e00084983604ce823747",
														"typeString": "literal_string \"https://ipfs.io/ipfs/QmQ6tZha8rMRE1SjdfjWGDZiUrzPcRfxxESDHuQABbZDS8?filename=SideHustler%20Background.png\""
													},
													"value": "https://ipfs.io/ipfs/QmQ6tZha8rMRE1SjdfjWGDZiUrzPcRfxxESDHuQABbZDS8?filename=SideHustler%20Background.png"
												}
											],
											"id": 2038,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2036,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1419,
												"src": "465:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "465:116:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:11"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:11"
									},
									"scope": 2148,
									"src": "443:145:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "649:32:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2049,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "667:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2048,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "659:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:15:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "659:15:11"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2045,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "639:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "639:9:11"
										}
									],
									"name": "setURI",
									"nameLocation": "603:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "624:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "610:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "610:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:22:11"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:0:11"
									},
									"scope": 2148,
									"src": "594:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "721:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2058,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "731:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "731:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2055,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "711:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "711:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "696:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:11"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:11"
									},
									"scope": 2148,
									"src": "687:59:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "788:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2067,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "798:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "798:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "798:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2064,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "778:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "778:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "761:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:2:11"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:0:11"
									},
									"scope": 2148,
									"src": "752:63:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "936:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2085,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "952:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2086,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "961:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "965:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2088,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "973:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2084,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "946:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "946:32:11"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2081,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "922:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "922:9:11"
										}
									],
									"name": "mint",
									"nameLocation": "830:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "835:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "860:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "852:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "872:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "864:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "893:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "880:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "880:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:64:11"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:11"
									},
									"scope": 2148,
									"src": "821:164:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "1126:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "1147:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2109,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "1151:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2110,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "1156:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2111,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "1165:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2107,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1136:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "1136:34:11"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2104,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1112:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1112:9:11"
										}
									],
									"name": "mintBatch",
									"nameLocation": "1000:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1018:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1010:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1039:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1022:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2095,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1022:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2096,
													"nodeType": "ArrayTypeName",
													"src": "1022:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1061:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1044:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2098,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1044:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2099,
													"nodeType": "ArrayTypeName",
													"src": "1044:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1083:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1070:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1070:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:79:11"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:11"
									},
									"scope": 2148,
									"src": "991:186:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "1384:83:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2138,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "1421:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2139,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "1431:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2140,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "1437:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2141,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "1441:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2142,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "1446:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "1455:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2135,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1394:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Ownable_$2148_$",
																"typeString": "type(contract super ERC1155Ownable)"
															}
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1243,
														"src": "1394:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "ExpressionStatement",
												"src": "1394:66:11"
											}
										]
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2131,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1349:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1349:13:11"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1192:20:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1371:8:11"
									},
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1221:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1213:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1239:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1231:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1253:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1245:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1274:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1257:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1257:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2123,
													"nodeType": "ArrayTypeName",
													"src": "1257:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1296:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1279:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1279:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2126,
													"nodeType": "ArrayTypeName",
													"src": "1279:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1318:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1305:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1305:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:111:11"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:11"
									},
									"scope": 2148,
									"src": "1183:284:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2149,
							"src": "366:1103:11",
							"usedErrors": []
						}
					],
					"src": "33:1437:11"
				},
				"id": 11
			}
		}
	}
}