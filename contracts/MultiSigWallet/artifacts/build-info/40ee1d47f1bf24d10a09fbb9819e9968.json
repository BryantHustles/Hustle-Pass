{
	"id": "40ee1d47f1bf24d10a09fbb9819e9968",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MultiSigWallet/CloneFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// from https://github.com/optionality/clone-factory\npragma solidity 0.8.10;\n\n/*\n    The MIT License (MIT)\n    Copyright (c) 2018 Murray Software, LLC.\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    \"Software\"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\ncontract CloneFactory {\n  function createClone(address target, bytes32 salt)\n    internal\n    returns (address payable result)\n  {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      // load the next free memory slot as a place to store the clone contract data\n      let clone := mload(0x40)\n\n      // The bytecode block below is responsible for contract initialization\n      // during deployment, it is worth noting the proxied contract constructor will not be called during\n      // the cloning procedure and that is why an initialization function needs to be called after the\n      // clone is created\n      mstore(\n        clone,\n        0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n      )\n\n      // This stores the address location of the implementation contract\n      // so that the proxy knows where to delegate call logic to\n      mstore(add(clone, 0x14), targetBytes)\n\n      // The bytecode block is the actual code that is deployed for each clone created.\n      // It forwards all calls to the already deployed implementation via a delegatecall\n      mstore(\n        add(clone, 0x28),\n        0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n      )\n\n      // deploy the contract using the CREATE2 opcode\n      // this deploys the minimal proxy defined above, which will proxy all\n      // calls to use the logic defined in the implementation contract `target`\n      result := create2(0, clone, 0x37, salt)\n    }\n  }\n\n  function isClone(address target, address query)\n    internal\n    view\n    returns (bool result)\n  {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      // load the next free memory slot as a place to store the comparison clone\n      let clone := mload(0x40)\n\n      // The next three lines store the expected bytecode for a miniml proxy\n      // that targets `target` as its implementation contract\n      mstore(\n        clone,\n        0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000\n      )\n      mstore(add(clone, 0xa), targetBytes)\n      mstore(\n        add(clone, 0x1e),\n        0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n      )\n\n      // the next two lines store the bytecode of the contract that we are checking in memory\n      let other := add(clone, 0x40)\n      extcodecopy(query, other, 0, 0x2d)\n\n      // Check if the expected bytecode equals the actual bytecode and return the result\n      result := and(\n        eq(mload(clone), mload(other)),\n        eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n      )\n    }\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MultiSigWallet/CloneFactory.sol": {
				"CloneFactory": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MultiSigWallet/CloneFactory.sol\":1344:3916  contract CloneFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MultiSigWallet/CloneFactory.sol\":1344:3916  contract CloneFactory {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220301c432d803c8c897ade979847080444b41699dd19c77982790c8c5f28e1dc8d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220301c432d803c8c897ade979847080444b41699dd19c77982790c8c5f28e1dc8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SHR NUMBER 0x2D DUP1 EXTCODECOPY DUP13 DUP10 PUSH27 0xDE979847080444B41699DD19C77982790C8C5F28E1DC8D64736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "1344:2572:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220301c432d803c8c897ade979847080444b41699dd19c77982790c8c5f28e1dc8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SHR NUMBER 0x2D DUP1 EXTCODECOPY DUP13 DUP10 PUSH27 0xDE979847080444B41699DD19C77982790C8C5F28E1DC8D64736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "1344:2572:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"createClone(address,bytes32)": "infinite",
								"isClone(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 3916,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220301c432d803c8c897ade979847080444b41699dd19c77982790c8c5f28e1dc8d64736f6c634300080a0033",
									".code": [
										{
											"begin": 1344,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 3916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 3916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 3916,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigWallet/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MultiSigWallet/CloneFactory.sol\":{\"keccak256\":\"0xba66bc576e55235dc91c11df5d3ed2c5392b7855a882ca11483c0445db319463\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88fc6b3230bd44b85f01f9ee1f046c9900fcf27bb2b67476cdf5c3a2e463206b\",\"dweb:/ipfs/QmQ3q6M3w9vHHn5ik42Fz5kKTYvgCs1kNU81n5dZy9qxRm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MultiSigWallet/CloneFactory.sol": {
				"ast": {
					"absolutePath": "contracts/MultiSigWallet/CloneFactory.sol",
					"exportedSymbols": {
						"CloneFactory": [
							38
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CloneFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "CloneFactory",
							"nameLocation": "1353:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "1473:1350:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "targetBytes",
														"nameLocation": "1487:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "1479:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 10,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"arguments": [
														{
															"id": 14,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1509:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes20_$",
															"typeString": "type(bytes20)"
														},
														"typeName": {
															"id": 12,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1501:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1501:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1479:37:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1531:1288:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1623:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1636:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:11:0"
															},
															"variables": [
																{
																	"name": "clone",
																	"nodeType": "YulTypedName",
																	"src": "1627:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:66:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:105:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1967:105:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "2229:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2236:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:16:0"
																	},
																	{
																		"name": "targetBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2243:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:37:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "2460:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2467:4:0",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2456:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2456:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2482:66:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:116:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2440:116:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2774:39:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "2795:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2802:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2808:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2784:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:29:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "2774:6:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "2808:4:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "2243:11:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "1522:1297:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createClone",
									"nameLocation": "1379:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1399:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1391:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1407:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:30:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1463:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1447:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:24:0"
									},
									"scope": 38,
									"src": "1370:1453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "2925:989:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "targetBytes",
														"nameLocation": "2939:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "2931:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 28,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "2931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"id": 32,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes20_$",
															"typeString": "type(bytes20)"
														},
														"typeName": {
															"id": 30,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "2953:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2953:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2931:37:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2983:927:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3072:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3085:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:11:0"
															},
															"variables": [
																{
																	"name": "clone",
																	"nodeType": "YulTypedName",
																	"src": "3076:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "3259:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:66:0",
																		"type": "",
																		"value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:105:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:105:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "3366:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3373:3:0",
																				"type": "",
																				"value": "0xa"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3362:15:0"
																	},
																	{
																		"name": "targetBytes",
																		"nodeType": "YulIdentifier",
																		"src": "3379:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:36:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3355:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "3418:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3425:4:0",
																				"type": "",
																				"value": "0x1e"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3414:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3414:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:66:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:116:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3398:116:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3616:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "3633:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3640:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:16:0"
															},
															"variables": [
																{
																	"name": "other",
																	"nodeType": "YulTypedName",
																	"src": "3620:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "query",
																		"nodeType": "YulIdentifier",
																		"src": "3664:5:0"
																	},
																	{
																		"name": "other",
																		"nodeType": "YulIdentifier",
																		"src": "3671:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3678:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3681:4:0",
																		"type": "",
																		"value": "0x2d"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nodeType": "YulIdentifier",
																	"src": "3652:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3652:34:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3783:121:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "clone",
																						"nodeType": "YulIdentifier",
																						"src": "3815:5:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3809:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3809:12:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "other",
																						"nodeType": "YulIdentifier",
																						"src": "3829:5:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3823:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3823:12:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3806:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3806:30:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "clone",
																								"nodeType": "YulIdentifier",
																								"src": "3859:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3866:3:0",
																								"type": "",
																								"value": "0xd"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3855:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3855:15:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3849:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3849:22:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "other",
																								"nodeType": "YulIdentifier",
																								"src": "3883:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3890:3:0",
																								"type": "",
																								"value": "0xd"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3879:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3879:15:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3873:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3873:22:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3846:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3846:50:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:111:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "3664:5:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "3783:6:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "3379:11:0",
														"valueSize": 1
													}
												],
												"id": 35,
												"nodeType": "InlineAssembly",
												"src": "2974:936:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isClone",
									"nameLocation": "2836:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "query",
												"nameLocation": "2868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:31:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2915:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2910:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:13:0"
									},
									"scope": 38,
									"src": "2827:1087:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 39,
							"src": "1344:2572:0",
							"usedErrors": []
						}
					],
					"src": "85:3832:0"
				},
				"id": 0
			}
		}
	}
}